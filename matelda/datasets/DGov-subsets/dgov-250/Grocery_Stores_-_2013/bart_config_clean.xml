<task>
    <!-- ****************************************************
                      DATABASES
    **************************************************** -->
    <target> 
        <type>DBMS</type>
        <access-configuration>
            <driver>org.postgresql.Driver</driver>
            <uri>jdbc:postgresql://localhost:5433/bartdb</uri>
            <schema>target</schema>
            <login>postgres</login>
            <password>postgres</password>
        </access-configuration>
        <import>
            <input type="csv" separator="," table="clean">/home/fatemeh/ED-Scale/Sandbox_Generation/metanome_input_files/processed/Grocery_Stores_-_2013/clean.csv</input>
        </import>
    </target>

    <!-- ****************************************************
                    DEPENDENCIES
    **************************************************** -->
    <dependencies><![CDATA[DCs: 

            e1: clean(storename: $storename1, licenseid: $licenseid1, accountnumber: $accountnumber1, squarefeet: $squarefeet1, buffersize: $buffersize1, address: $address1, zipcode: $zipcode1, communityareaname: $communityareaname1, communityarea: $communityarea1, ward: $ward1, censustract: $censustract1, censusblock: $censusblock1, xcoordinate: $xcoordinate1, ycoordinate: $ycoordinate1, latitude: $latitude1, longitude: $longitude1, location: $location1),
            clean(storename: $storename2, licenseid: $licenseid2, accountnumber: $accountnumber2, squarefeet: $squarefeet2, buffersize: $buffersize2, address: $address2, zipcode: $zipcode2, communityareaname: $communityareaname2, communityarea: $communityarea2, ward: $ward2, censustract: $censustract2, censusblock: $censusblock2, xcoordinate: $xcoordinate2, ycoordinate: $ycoordinate2, latitude: $latitude2, longitude: $longitude2, location: $location2),
                $licenseid1 == $licenseid2, $address1 != $address2 -> #fail. 

        
            e2: clean(storename: $storename1, licenseid: $licenseid1, accountnumber: $accountnumber1, squarefeet: $squarefeet1, buffersize: $buffersize1, address: $address1, zipcode: $zipcode1, communityareaname: $communityareaname1, communityarea: $communityarea1, ward: $ward1, censustract: $censustract1, censusblock: $censusblock1, xcoordinate: $xcoordinate1, ycoordinate: $ycoordinate1, latitude: $latitude1, longitude: $longitude1, location: $location1),
            clean(storename: $storename2, licenseid: $licenseid2, accountnumber: $accountnumber2, squarefeet: $squarefeet2, buffersize: $buffersize2, address: $address2, zipcode: $zipcode2, communityareaname: $communityareaname2, communityarea: $communityarea2, ward: $ward2, censustract: $censustract2, censusblock: $censusblock2, xcoordinate: $xcoordinate2, ycoordinate: $ycoordinate2, latitude: $latitude2, longitude: $longitude2, location: $location2),
                $licenseid1 == $licenseid2, $storename1 != $storename2 -> #fail. 

        
            e3: clean(storename: $storename1, licenseid: $licenseid1, accountnumber: $accountnumber1, squarefeet: $squarefeet1, buffersize: $buffersize1, address: $address1, zipcode: $zipcode1, communityareaname: $communityareaname1, communityarea: $communityarea1, ward: $ward1, censustract: $censustract1, censusblock: $censusblock1, xcoordinate: $xcoordinate1, ycoordinate: $ycoordinate1, latitude: $latitude1, longitude: $longitude1, location: $location1),
            clean(storename: $storename2, licenseid: $licenseid2, accountnumber: $accountnumber2, squarefeet: $squarefeet2, buffersize: $buffersize2, address: $address2, zipcode: $zipcode2, communityareaname: $communityareaname2, communityarea: $communityarea2, ward: $ward2, censustract: $censustract2, censusblock: $censusblock2, xcoordinate: $xcoordinate2, ycoordinate: $ycoordinate2, latitude: $latitude2, longitude: $longitude2, location: $location2),
                $licenseid1 == $licenseid2, $accountnumber1 != $accountnumber2 -> #fail. 

        
            e4: clean(storename: $storename1, licenseid: $licenseid1, accountnumber: $accountnumber1, squarefeet: $squarefeet1, buffersize: $buffersize1, address: $address1, zipcode: $zipcode1, communityareaname: $communityareaname1, communityarea: $communityarea1, ward: $ward1, censustract: $censustract1, censusblock: $censusblock1, xcoordinate: $xcoordinate1, ycoordinate: $ycoordinate1, latitude: $latitude1, longitude: $longitude1, location: $location1),
            clean(storename: $storename2, licenseid: $licenseid2, accountnumber: $accountnumber2, squarefeet: $squarefeet2, buffersize: $buffersize2, address: $address2, zipcode: $zipcode2, communityareaname: $communityareaname2, communityarea: $communityarea2, ward: $ward2, censustract: $censustract2, censusblock: $censusblock2, xcoordinate: $xcoordinate2, ycoordinate: $ycoordinate2, latitude: $latitude2, longitude: $longitude2, location: $location2),
                $licenseid1 == $licenseid2, $censustract1 != $censustract2 -> #fail. 

        
            e5: clean(storename: $storename1, licenseid: $licenseid1, accountnumber: $accountnumber1, squarefeet: $squarefeet1, buffersize: $buffersize1, address: $address1, zipcode: $zipcode1, communityareaname: $communityareaname1, communityarea: $communityarea1, ward: $ward1, censustract: $censustract1, censusblock: $censusblock1, xcoordinate: $xcoordinate1, ycoordinate: $ycoordinate1, latitude: $latitude1, longitude: $longitude1, location: $location1),
            clean(storename: $storename2, licenseid: $licenseid2, accountnumber: $accountnumber2, squarefeet: $squarefeet2, buffersize: $buffersize2, address: $address2, zipcode: $zipcode2, communityareaname: $communityareaname2, communityarea: $communityarea2, ward: $ward2, censustract: $censustract2, censusblock: $censusblock2, xcoordinate: $xcoordinate2, ycoordinate: $ycoordinate2, latitude: $latitude2, longitude: $longitude2, location: $location2),
                $licenseid1 == $licenseid2, $communityareaname1 != $communityareaname2 -> #fail. 

        
            e6: clean(storename: $storename1, licenseid: $licenseid1, accountnumber: $accountnumber1, squarefeet: $squarefeet1, buffersize: $buffersize1, address: $address1, zipcode: $zipcode1, communityareaname: $communityareaname1, communityarea: $communityarea1, ward: $ward1, censustract: $censustract1, censusblock: $censusblock1, xcoordinate: $xcoordinate1, ycoordinate: $ycoordinate1, latitude: $latitude1, longitude: $longitude1, location: $location1),
            clean(storename: $storename2, licenseid: $licenseid2, accountnumber: $accountnumber2, squarefeet: $squarefeet2, buffersize: $buffersize2, address: $address2, zipcode: $zipcode2, communityareaname: $communityareaname2, communityarea: $communityarea2, ward: $ward2, censustract: $censustract2, censusblock: $censusblock2, xcoordinate: $xcoordinate2, ycoordinate: $ycoordinate2, latitude: $latitude2, longitude: $longitude2, location: $location2),
                $licenseid1 == $licenseid2, $communityarea1 != $communityarea2 -> #fail. 

        
            e7: clean(storename: $storename1, licenseid: $licenseid1, accountnumber: $accountnumber1, squarefeet: $squarefeet1, buffersize: $buffersize1, address: $address1, zipcode: $zipcode1, communityareaname: $communityareaname1, communityarea: $communityarea1, ward: $ward1, censustract: $censustract1, censusblock: $censusblock1, xcoordinate: $xcoordinate1, ycoordinate: $ycoordinate1, latitude: $latitude1, longitude: $longitude1, location: $location1),
            clean(storename: $storename2, licenseid: $licenseid2, accountnumber: $accountnumber2, squarefeet: $squarefeet2, buffersize: $buffersize2, address: $address2, zipcode: $zipcode2, communityareaname: $communityareaname2, communityarea: $communityarea2, ward: $ward2, censustract: $censustract2, censusblock: $censusblock2, xcoordinate: $xcoordinate2, ycoordinate: $ycoordinate2, latitude: $latitude2, longitude: $longitude2, location: $location2),
                $licenseid1 == $licenseid2, $zipcode1 != $zipcode2 -> #fail. 

        
            e8: clean(storename: $storename1, licenseid: $licenseid1, accountnumber: $accountnumber1, squarefeet: $squarefeet1, buffersize: $buffersize1, address: $address1, zipcode: $zipcode1, communityareaname: $communityareaname1, communityarea: $communityarea1, ward: $ward1, censustract: $censustract1, censusblock: $censusblock1, xcoordinate: $xcoordinate1, ycoordinate: $ycoordinate1, latitude: $latitude1, longitude: $longitude1, location: $location1),
            clean(storename: $storename2, licenseid: $licenseid2, accountnumber: $accountnumber2, squarefeet: $squarefeet2, buffersize: $buffersize2, address: $address2, zipcode: $zipcode2, communityareaname: $communityareaname2, communityarea: $communityarea2, ward: $ward2, censustract: $censustract2, censusblock: $censusblock2, xcoordinate: $xcoordinate2, ycoordinate: $ycoordinate2, latitude: $latitude2, longitude: $longitude2, location: $location2),
                $licenseid1 == $licenseid2, $ward1 != $ward2 -> #fail. 

        
            e9: clean(storename: $storename1, licenseid: $licenseid1, accountnumber: $accountnumber1, squarefeet: $squarefeet1, buffersize: $buffersize1, address: $address1, zipcode: $zipcode1, communityareaname: $communityareaname1, communityarea: $communityarea1, ward: $ward1, censustract: $censustract1, censusblock: $censusblock1, xcoordinate: $xcoordinate1, ycoordinate: $ycoordinate1, latitude: $latitude1, longitude: $longitude1, location: $location1),
            clean(storename: $storename2, licenseid: $licenseid2, accountnumber: $accountnumber2, squarefeet: $squarefeet2, buffersize: $buffersize2, address: $address2, zipcode: $zipcode2, communityareaname: $communityareaname2, communityarea: $communityarea2, ward: $ward2, censustract: $censustract2, censusblock: $censusblock2, xcoordinate: $xcoordinate2, ycoordinate: $ycoordinate2, latitude: $latitude2, longitude: $longitude2, location: $location2),
                $licenseid1 == $licenseid2, $buffersize1 != $buffersize2 -> #fail. 

        
            e10: clean(storename: $storename1, licenseid: $licenseid1, accountnumber: $accountnumber1, squarefeet: $squarefeet1, buffersize: $buffersize1, address: $address1, zipcode: $zipcode1, communityareaname: $communityareaname1, communityarea: $communityarea1, ward: $ward1, censustract: $censustract1, censusblock: $censusblock1, xcoordinate: $xcoordinate1, ycoordinate: $ycoordinate1, latitude: $latitude1, longitude: $longitude1, location: $location1),
            clean(storename: $storename2, licenseid: $licenseid2, accountnumber: $accountnumber2, squarefeet: $squarefeet2, buffersize: $buffersize2, address: $address2, zipcode: $zipcode2, communityareaname: $communityareaname2, communityarea: $communityarea2, ward: $ward2, censustract: $censustract2, censusblock: $censusblock2, xcoordinate: $xcoordinate2, ycoordinate: $ycoordinate2, latitude: $latitude2, longitude: $longitude2, location: $location2),
                $xcoordinate1 == $xcoordinate2, $ycoordinate1 != $ycoordinate2 -> #fail. 

        
            e11: clean(storename: $storename1, licenseid: $licenseid1, accountnumber: $accountnumber1, squarefeet: $squarefeet1, buffersize: $buffersize1, address: $address1, zipcode: $zipcode1, communityareaname: $communityareaname1, communityarea: $communityarea1, ward: $ward1, censustract: $censustract1, censusblock: $censusblock1, xcoordinate: $xcoordinate1, ycoordinate: $ycoordinate1, latitude: $latitude1, longitude: $longitude1, location: $location1),
            clean(storename: $storename2, licenseid: $licenseid2, accountnumber: $accountnumber2, squarefeet: $squarefeet2, buffersize: $buffersize2, address: $address2, zipcode: $zipcode2, communityareaname: $communityareaname2, communityarea: $communityarea2, ward: $ward2, censustract: $censustract2, censusblock: $censusblock2, xcoordinate: $xcoordinate2, ycoordinate: $ycoordinate2, latitude: $latitude2, longitude: $longitude2, location: $location2),
                $xcoordinate1 == $xcoordinate2, $latitude1 != $latitude2 -> #fail. 

        
            e12: clean(storename: $storename1, licenseid: $licenseid1, accountnumber: $accountnumber1, squarefeet: $squarefeet1, buffersize: $buffersize1, address: $address1, zipcode: $zipcode1, communityareaname: $communityareaname1, communityarea: $communityarea1, ward: $ward1, censustract: $censustract1, censusblock: $censusblock1, xcoordinate: $xcoordinate1, ycoordinate: $ycoordinate1, latitude: $latitude1, longitude: $longitude1, location: $location1),
            clean(storename: $storename2, licenseid: $licenseid2, accountnumber: $accountnumber2, squarefeet: $squarefeet2, buffersize: $buffersize2, address: $address2, zipcode: $zipcode2, communityareaname: $communityareaname2, communityarea: $communityarea2, ward: $ward2, censustract: $censustract2, censusblock: $censusblock2, xcoordinate: $xcoordinate2, ycoordinate: $ycoordinate2, latitude: $latitude2, longitude: $longitude2, location: $location2),
                $xcoordinate1 == $xcoordinate2, $longitude1 != $longitude2 -> #fail. 

        
            e13: clean(storename: $storename1, licenseid: $licenseid1, accountnumber: $accountnumber1, squarefeet: $squarefeet1, buffersize: $buffersize1, address: $address1, zipcode: $zipcode1, communityareaname: $communityareaname1, communityarea: $communityarea1, ward: $ward1, censustract: $censustract1, censusblock: $censusblock1, xcoordinate: $xcoordinate1, ycoordinate: $ycoordinate1, latitude: $latitude1, longitude: $longitude1, location: $location1),
            clean(storename: $storename2, licenseid: $licenseid2, accountnumber: $accountnumber2, squarefeet: $squarefeet2, buffersize: $buffersize2, address: $address2, zipcode: $zipcode2, communityareaname: $communityareaname2, communityarea: $communityarea2, ward: $ward2, censustract: $censustract2, censusblock: $censusblock2, xcoordinate: $xcoordinate2, ycoordinate: $ycoordinate2, latitude: $latitude2, longitude: $longitude2, location: $location2),
                $xcoordinate1 == $xcoordinate2, $location1 != $location2 -> #fail. 

        
            e14: clean(storename: $storename1, licenseid: $licenseid1, accountnumber: $accountnumber1, squarefeet: $squarefeet1, buffersize: $buffersize1, address: $address1, zipcode: $zipcode1, communityareaname: $communityareaname1, communityarea: $communityarea1, ward: $ward1, censustract: $censustract1, censusblock: $censusblock1, xcoordinate: $xcoordinate1, ycoordinate: $ycoordinate1, latitude: $latitude1, longitude: $longitude1, location: $location1),
            clean(storename: $storename2, licenseid: $licenseid2, accountnumber: $accountnumber2, squarefeet: $squarefeet2, buffersize: $buffersize2, address: $address2, zipcode: $zipcode2, communityareaname: $communityareaname2, communityarea: $communityarea2, ward: $ward2, censustract: $censustract2, censusblock: $censusblock2, xcoordinate: $xcoordinate2, ycoordinate: $ycoordinate2, latitude: $latitude2, longitude: $longitude2, location: $location2),
                $xcoordinate1 == $xcoordinate2, $address1 != $address2 -> #fail. 

        
            e15: clean(storename: $storename1, licenseid: $licenseid1, accountnumber: $accountnumber1, squarefeet: $squarefeet1, buffersize: $buffersize1, address: $address1, zipcode: $zipcode1, communityareaname: $communityareaname1, communityarea: $communityarea1, ward: $ward1, censustract: $censustract1, censusblock: $censusblock1, xcoordinate: $xcoordinate1, ycoordinate: $ycoordinate1, latitude: $latitude1, longitude: $longitude1, location: $location1),
            clean(storename: $storename2, licenseid: $licenseid2, accountnumber: $accountnumber2, squarefeet: $squarefeet2, buffersize: $buffersize2, address: $address2, zipcode: $zipcode2, communityareaname: $communityareaname2, communityarea: $communityarea2, ward: $ward2, censustract: $censustract2, censusblock: $censusblock2, xcoordinate: $xcoordinate2, ycoordinate: $ycoordinate2, latitude: $latitude2, longitude: $longitude2, location: $location2),
                $xcoordinate1 == $xcoordinate2, $censusblock1 != $censusblock2 -> #fail. 

        
            e16: clean(storename: $storename1, licenseid: $licenseid1, accountnumber: $accountnumber1, squarefeet: $squarefeet1, buffersize: $buffersize1, address: $address1, zipcode: $zipcode1, communityareaname: $communityareaname1, communityarea: $communityarea1, ward: $ward1, censustract: $censustract1, censusblock: $censusblock1, xcoordinate: $xcoordinate1, ycoordinate: $ycoordinate1, latitude: $latitude1, longitude: $longitude1, location: $location1),
            clean(storename: $storename2, licenseid: $licenseid2, accountnumber: $accountnumber2, squarefeet: $squarefeet2, buffersize: $buffersize2, address: $address2, zipcode: $zipcode2, communityareaname: $communityareaname2, communityarea: $communityarea2, ward: $ward2, censustract: $censustract2, censusblock: $censusblock2, xcoordinate: $xcoordinate2, ycoordinate: $ycoordinate2, latitude: $latitude2, longitude: $longitude2, location: $location2),
                $xcoordinate1 == $xcoordinate2, $censustract1 != $censustract2 -> #fail. 

        
            e17: clean(storename: $storename1, licenseid: $licenseid1, accountnumber: $accountnumber1, squarefeet: $squarefeet1, buffersize: $buffersize1, address: $address1, zipcode: $zipcode1, communityareaname: $communityareaname1, communityarea: $communityarea1, ward: $ward1, censustract: $censustract1, censusblock: $censusblock1, xcoordinate: $xcoordinate1, ycoordinate: $ycoordinate1, latitude: $latitude1, longitude: $longitude1, location: $location1),
            clean(storename: $storename2, licenseid: $licenseid2, accountnumber: $accountnumber2, squarefeet: $squarefeet2, buffersize: $buffersize2, address: $address2, zipcode: $zipcode2, communityareaname: $communityareaname2, communityarea: $communityarea2, ward: $ward2, censustract: $censustract2, censusblock: $censusblock2, xcoordinate: $xcoordinate2, ycoordinate: $ycoordinate2, latitude: $latitude2, longitude: $longitude2, location: $location2),
                $xcoordinate1 == $xcoordinate2, $communityareaname1 != $communityareaname2 -> #fail. 

        
            e18: clean(storename: $storename1, licenseid: $licenseid1, accountnumber: $accountnumber1, squarefeet: $squarefeet1, buffersize: $buffersize1, address: $address1, zipcode: $zipcode1, communityareaname: $communityareaname1, communityarea: $communityarea1, ward: $ward1, censustract: $censustract1, censusblock: $censusblock1, xcoordinate: $xcoordinate1, ycoordinate: $ycoordinate1, latitude: $latitude1, longitude: $longitude1, location: $location1),
            clean(storename: $storename2, licenseid: $licenseid2, accountnumber: $accountnumber2, squarefeet: $squarefeet2, buffersize: $buffersize2, address: $address2, zipcode: $zipcode2, communityareaname: $communityareaname2, communityarea: $communityarea2, ward: $ward2, censustract: $censustract2, censusblock: $censusblock2, xcoordinate: $xcoordinate2, ycoordinate: $ycoordinate2, latitude: $latitude2, longitude: $longitude2, location: $location2),
                $xcoordinate1 == $xcoordinate2, $communityarea1 != $communityarea2 -> #fail. 

        
            e19: clean(storename: $storename1, licenseid: $licenseid1, accountnumber: $accountnumber1, squarefeet: $squarefeet1, buffersize: $buffersize1, address: $address1, zipcode: $zipcode1, communityareaname: $communityareaname1, communityarea: $communityarea1, ward: $ward1, censustract: $censustract1, censusblock: $censusblock1, xcoordinate: $xcoordinate1, ycoordinate: $ycoordinate1, latitude: $latitude1, longitude: $longitude1, location: $location1),
            clean(storename: $storename2, licenseid: $licenseid2, accountnumber: $accountnumber2, squarefeet: $squarefeet2, buffersize: $buffersize2, address: $address2, zipcode: $zipcode2, communityareaname: $communityareaname2, communityarea: $communityarea2, ward: $ward2, censustract: $censustract2, censusblock: $censusblock2, xcoordinate: $xcoordinate2, ycoordinate: $ycoordinate2, latitude: $latitude2, longitude: $longitude2, location: $location2),
                $xcoordinate1 == $xcoordinate2, $zipcode1 != $zipcode2 -> #fail. 

        
            e20: clean(storename: $storename1, licenseid: $licenseid1, accountnumber: $accountnumber1, squarefeet: $squarefeet1, buffersize: $buffersize1, address: $address1, zipcode: $zipcode1, communityareaname: $communityareaname1, communityarea: $communityarea1, ward: $ward1, censustract: $censustract1, censusblock: $censusblock1, xcoordinate: $xcoordinate1, ycoordinate: $ycoordinate1, latitude: $latitude1, longitude: $longitude1, location: $location1),
            clean(storename: $storename2, licenseid: $licenseid2, accountnumber: $accountnumber2, squarefeet: $squarefeet2, buffersize: $buffersize2, address: $address2, zipcode: $zipcode2, communityareaname: $communityareaname2, communityarea: $communityarea2, ward: $ward2, censustract: $censustract2, censusblock: $censusblock2, xcoordinate: $xcoordinate2, ycoordinate: $ycoordinate2, latitude: $latitude2, longitude: $longitude2, location: $location2),
                $xcoordinate1 == $xcoordinate2, $ward1 != $ward2 -> #fail. 

        
            e21: clean(storename: $storename1, licenseid: $licenseid1, accountnumber: $accountnumber1, squarefeet: $squarefeet1, buffersize: $buffersize1, address: $address1, zipcode: $zipcode1, communityareaname: $communityareaname1, communityarea: $communityarea1, ward: $ward1, censustract: $censustract1, censusblock: $censusblock1, xcoordinate: $xcoordinate1, ycoordinate: $ycoordinate1, latitude: $latitude1, longitude: $longitude1, location: $location1),
            clean(storename: $storename2, licenseid: $licenseid2, accountnumber: $accountnumber2, squarefeet: $squarefeet2, buffersize: $buffersize2, address: $address2, zipcode: $zipcode2, communityareaname: $communityareaname2, communityarea: $communityarea2, ward: $ward2, censustract: $censustract2, censusblock: $censusblock2, xcoordinate: $xcoordinate2, ycoordinate: $ycoordinate2, latitude: $latitude2, longitude: $longitude2, location: $location2),
                $xcoordinate1 == $xcoordinate2, $buffersize1 != $buffersize2 -> #fail. 

        
            e22: clean(storename: $storename1, licenseid: $licenseid1, accountnumber: $accountnumber1, squarefeet: $squarefeet1, buffersize: $buffersize1, address: $address1, zipcode: $zipcode1, communityareaname: $communityareaname1, communityarea: $communityarea1, ward: $ward1, censustract: $censustract1, censusblock: $censusblock1, xcoordinate: $xcoordinate1, ycoordinate: $ycoordinate1, latitude: $latitude1, longitude: $longitude1, location: $location1),
            clean(storename: $storename2, licenseid: $licenseid2, accountnumber: $accountnumber2, squarefeet: $squarefeet2, buffersize: $buffersize2, address: $address2, zipcode: $zipcode2, communityareaname: $communityareaname2, communityarea: $communityarea2, ward: $ward2, censustract: $censustract2, censusblock: $censusblock2, xcoordinate: $xcoordinate2, ycoordinate: $ycoordinate2, latitude: $latitude2, longitude: $longitude2, location: $location2),
                $ycoordinate1 == $ycoordinate2, $xcoordinate1 != $xcoordinate2 -> #fail. 

        
            e23: clean(storename: $storename1, licenseid: $licenseid1, accountnumber: $accountnumber1, squarefeet: $squarefeet1, buffersize: $buffersize1, address: $address1, zipcode: $zipcode1, communityareaname: $communityareaname1, communityarea: $communityarea1, ward: $ward1, censustract: $censustract1, censusblock: $censusblock1, xcoordinate: $xcoordinate1, ycoordinate: $ycoordinate1, latitude: $latitude1, longitude: $longitude1, location: $location1),
            clean(storename: $storename2, licenseid: $licenseid2, accountnumber: $accountnumber2, squarefeet: $squarefeet2, buffersize: $buffersize2, address: $address2, zipcode: $zipcode2, communityareaname: $communityareaname2, communityarea: $communityarea2, ward: $ward2, censustract: $censustract2, censusblock: $censusblock2, xcoordinate: $xcoordinate2, ycoordinate: $ycoordinate2, latitude: $latitude2, longitude: $longitude2, location: $location2),
                $ycoordinate1 == $ycoordinate2, $latitude1 != $latitude2 -> #fail. 

        
            e24: clean(storename: $storename1, licenseid: $licenseid1, accountnumber: $accountnumber1, squarefeet: $squarefeet1, buffersize: $buffersize1, address: $address1, zipcode: $zipcode1, communityareaname: $communityareaname1, communityarea: $communityarea1, ward: $ward1, censustract: $censustract1, censusblock: $censusblock1, xcoordinate: $xcoordinate1, ycoordinate: $ycoordinate1, latitude: $latitude1, longitude: $longitude1, location: $location1),
            clean(storename: $storename2, licenseid: $licenseid2, accountnumber: $accountnumber2, squarefeet: $squarefeet2, buffersize: $buffersize2, address: $address2, zipcode: $zipcode2, communityareaname: $communityareaname2, communityarea: $communityarea2, ward: $ward2, censustract: $censustract2, censusblock: $censusblock2, xcoordinate: $xcoordinate2, ycoordinate: $ycoordinate2, latitude: $latitude2, longitude: $longitude2, location: $location2),
                $ycoordinate1 == $ycoordinate2, $longitude1 != $longitude2 -> #fail. 

        
            e25: clean(storename: $storename1, licenseid: $licenseid1, accountnumber: $accountnumber1, squarefeet: $squarefeet1, buffersize: $buffersize1, address: $address1, zipcode: $zipcode1, communityareaname: $communityareaname1, communityarea: $communityarea1, ward: $ward1, censustract: $censustract1, censusblock: $censusblock1, xcoordinate: $xcoordinate1, ycoordinate: $ycoordinate1, latitude: $latitude1, longitude: $longitude1, location: $location1),
            clean(storename: $storename2, licenseid: $licenseid2, accountnumber: $accountnumber2, squarefeet: $squarefeet2, buffersize: $buffersize2, address: $address2, zipcode: $zipcode2, communityareaname: $communityareaname2, communityarea: $communityarea2, ward: $ward2, censustract: $censustract2, censusblock: $censusblock2, xcoordinate: $xcoordinate2, ycoordinate: $ycoordinate2, latitude: $latitude2, longitude: $longitude2, location: $location2),
                $ycoordinate1 == $ycoordinate2, $location1 != $location2 -> #fail. 

        
            e26: clean(storename: $storename1, licenseid: $licenseid1, accountnumber: $accountnumber1, squarefeet: $squarefeet1, buffersize: $buffersize1, address: $address1, zipcode: $zipcode1, communityareaname: $communityareaname1, communityarea: $communityarea1, ward: $ward1, censustract: $censustract1, censusblock: $censusblock1, xcoordinate: $xcoordinate1, ycoordinate: $ycoordinate1, latitude: $latitude1, longitude: $longitude1, location: $location1),
            clean(storename: $storename2, licenseid: $licenseid2, accountnumber: $accountnumber2, squarefeet: $squarefeet2, buffersize: $buffersize2, address: $address2, zipcode: $zipcode2, communityareaname: $communityareaname2, communityarea: $communityarea2, ward: $ward2, censustract: $censustract2, censusblock: $censusblock2, xcoordinate: $xcoordinate2, ycoordinate: $ycoordinate2, latitude: $latitude2, longitude: $longitude2, location: $location2),
                $ycoordinate1 == $ycoordinate2, $address1 != $address2 -> #fail. 

        ]]></dependencies>

    <!-- ****************************************************
                      CONFIGURATION
    **************************************************** -->
    <configuration>
        <!-- To print extra information in the ouput (default = false) -->
        <printLog>true</printLog>

        <!-- To load DB every time on start (default = false) -->
        <recreateDBOnStart>true</recreateDBOnStart>

        <!-- To apply the changes (default = false) -->
        <applyCellChanges>true</applyCellChanges>

        <!-- To  apply cell changes on a copy of the original target, with a custom suffix (default = true) -->
        <cloneTargetSchema>true</cloneTargetSchema>
        <cloneSuffix>_dirty</cloneSuffix>

        <!-- To export the dirty db -->
        <exportDirtyDB>true</exportDirtyDB>
        <exportDirtyDBPath>./</exportDirtyDBPath>
        <exportDirtyDBType>CSV</exportDirtyDBType>

        <!-- To export the changes -->
        <exportCellChanges>true</exportCellChanges>
        <exportCellChangesPath>clean_changes.csv</exportCellChangesPath>

        <!-- To compute an estimate of the reparability (default = false) -->
        <estimateRepairability>true</estimateRepairability>

        <!-- To generate all possible changes (default = false - slow, only for toy examples)-->
        <generateAllChanges>false</generateAllChanges>

        <!-- To avoid interactions among changes. (default = true) -->
        <avoidInteractions>true</avoidInteractions>

        <!-- To check, at the end of the process, if changes are detectable. (default = false) -->
        <checkChanges>true</checkChanges>

        <!-- To compute an estimate of the repairability. Requires checkChanges = true. (default = false) -->
        <estimateRepairability>true</estimateRepairability>

        <!-- To use an optimized strategy for updates. (default = true) -->
        <useDeltaDBForChanges>true</useDeltaDBForChanges>

        <!-- Error percentages for dependencies and comparisons 
        All percentages are wrt table sizes (# tuples) -->
        <errorPercentages>
            <defaultPercentage>0.0</defaultPercentage>
            <vioGenQueries>
            <vioGenQuery id="e1"><comparison>(licenseid1 == licenseid2)</comparison><percentage>0.1976284584980237</percentage></vioGenQuery><vioGenQuery id="e1"><comparison>(address1 != address2)</comparison><percentage>0.1976284584980237</percentage></vioGenQuery><vioGenQuery id="e2"><comparison>(licenseid1 == licenseid2)</comparison><percentage>0.1976284584980237</percentage></vioGenQuery><vioGenQuery id="e2"><comparison>(storename1 != storename2)</comparison><percentage>0.1976284584980237</percentage></vioGenQuery><vioGenQuery id="e3"><comparison>(licenseid1 == licenseid2)</comparison><percentage>0.1976284584980237</percentage></vioGenQuery><vioGenQuery id="e3"><comparison>(accountnumber1 != accountnumber2)</comparison><percentage>0.1976284584980237</percentage></vioGenQuery><vioGenQuery id="e4"><comparison>(licenseid1 == licenseid2)</comparison><percentage>0.1976284584980237</percentage></vioGenQuery><vioGenQuery id="e4"><comparison>(censustract1 != censustract2)</comparison><percentage>0.1976284584980237</percentage></vioGenQuery><vioGenQuery id="e5"><comparison>(licenseid1 == licenseid2)</comparison><percentage>0.1976284584980237</percentage></vioGenQuery><vioGenQuery id="e5"><comparison>(communityareaname1 != communityareaname2)</comparison><percentage>0.1976284584980237</percentage></vioGenQuery><vioGenQuery id="e6"><comparison>(licenseid1 == licenseid2)</comparison><percentage>0.1976284584980237</percentage></vioGenQuery><vioGenQuery id="e6"><comparison>(communityarea1 != communityarea2)</comparison><percentage>0.1976284584980237</percentage></vioGenQuery><vioGenQuery id="e7"><comparison>(licenseid1 == licenseid2)</comparison><percentage>0.1976284584980237</percentage></vioGenQuery><vioGenQuery id="e7"><comparison>(zipcode1 != zipcode2)</comparison><percentage>0.1976284584980237</percentage></vioGenQuery><vioGenQuery id="e8"><comparison>(licenseid1 == licenseid2)</comparison><percentage>0.1976284584980237</percentage></vioGenQuery><vioGenQuery id="e8"><comparison>(ward1 != ward2)</comparison><percentage>0.1976284584980237</percentage></vioGenQuery><vioGenQuery id="e9"><comparison>(licenseid1 == licenseid2)</comparison><percentage>0.1976284584980237</percentage></vioGenQuery><vioGenQuery id="e9"><comparison>(buffersize1 != buffersize2)</comparison><percentage>0.1976284584980237</percentage></vioGenQuery><vioGenQuery id="e10"><comparison>(xcoordinate1 == xcoordinate2)</comparison><percentage>0.1976284584980237</percentage></vioGenQuery><vioGenQuery id="e10"><comparison>(ycoordinate1 != ycoordinate2)</comparison><percentage>0.1976284584980237</percentage></vioGenQuery><vioGenQuery id="e11"><comparison>(xcoordinate1 == xcoordinate2)</comparison><percentage>0.1976284584980237</percentage></vioGenQuery><vioGenQuery id="e11"><comparison>(latitude1 != latitude2)</comparison><percentage>0.1976284584980237</percentage></vioGenQuery><vioGenQuery id="e12"><comparison>(xcoordinate1 == xcoordinate2)</comparison><percentage>0.1976284584980237</percentage></vioGenQuery><vioGenQuery id="e12"><comparison>(longitude1 != longitude2)</comparison><percentage>0.1976284584980237</percentage></vioGenQuery><vioGenQuery id="e13"><comparison>(xcoordinate1 == xcoordinate2)</comparison><percentage>0.1976284584980237</percentage></vioGenQuery><vioGenQuery id="e13"><comparison>(location1 != location2)</comparison><percentage>0.1976284584980237</percentage></vioGenQuery><vioGenQuery id="e14"><comparison>(xcoordinate1 == xcoordinate2)</comparison><percentage>0.1976284584980237</percentage></vioGenQuery><vioGenQuery id="e14"><comparison>(address1 != address2)</comparison><percentage>0.1976284584980237</percentage></vioGenQuery><vioGenQuery id="e15"><comparison>(xcoordinate1 == xcoordinate2)</comparison><percentage>0.1976284584980237</percentage></vioGenQuery><vioGenQuery id="e15"><comparison>(censusblock1 != censusblock2)</comparison><percentage>0.1976284584980237</percentage></vioGenQuery><vioGenQuery id="e16"><comparison>(xcoordinate1 == xcoordinate2)</comparison><percentage>0.1976284584980237</percentage></vioGenQuery><vioGenQuery id="e16"><comparison>(censustract1 != censustract2)</comparison><percentage>0.1976284584980237</percentage></vioGenQuery><vioGenQuery id="e17"><comparison>(xcoordinate1 == xcoordinate2)</comparison><percentage>0.1976284584980237</percentage></vioGenQuery><vioGenQuery id="e17"><comparison>(communityareaname1 != communityareaname2)</comparison><percentage>0.1976284584980237</percentage></vioGenQuery><vioGenQuery id="e18"><comparison>(xcoordinate1 == xcoordinate2)</comparison><percentage>0.1976284584980237</percentage></vioGenQuery><vioGenQuery id="e18"><comparison>(communityarea1 != communityarea2)</comparison><percentage>0.1976284584980237</percentage></vioGenQuery><vioGenQuery id="e19"><comparison>(xcoordinate1 == xcoordinate2)</comparison><percentage>0.1976284584980237</percentage></vioGenQuery><vioGenQuery id="e19"><comparison>(zipcode1 != zipcode2)</comparison><percentage>0.1976284584980237</percentage></vioGenQuery><vioGenQuery id="e20"><comparison>(xcoordinate1 == xcoordinate2)</comparison><percentage>0.1976284584980237</percentage></vioGenQuery><vioGenQuery id="e20"><comparison>(ward1 != ward2)</comparison><percentage>0.1976284584980237</percentage></vioGenQuery><vioGenQuery id="e21"><comparison>(xcoordinate1 == xcoordinate2)</comparison><percentage>0.1976284584980237</percentage></vioGenQuery><vioGenQuery id="e21"><comparison>(buffersize1 != buffersize2)</comparison><percentage>0.1976284584980237</percentage></vioGenQuery><vioGenQuery id="e22"><comparison>(ycoordinate1 == ycoordinate2)</comparison><percentage>0.1976284584980237</percentage></vioGenQuery><vioGenQuery id="e22"><comparison>(xcoordinate1 != xcoordinate2)</comparison><percentage>0.1976284584980237</percentage></vioGenQuery><vioGenQuery id="e23"><comparison>(ycoordinate1 == ycoordinate2)</comparison><percentage>0.1976284584980237</percentage></vioGenQuery><vioGenQuery id="e23"><comparison>(latitude1 != latitude2)</comparison><percentage>0.1976284584980237</percentage></vioGenQuery><vioGenQuery id="e24"><comparison>(ycoordinate1 == ycoordinate2)</comparison><percentage>0.1976284584980237</percentage></vioGenQuery><vioGenQuery id="e24"><comparison>(longitude1 != longitude2)</comparison><percentage>0.1976284584980237</percentage></vioGenQuery><vioGenQuery id="e25"><comparison>(ycoordinate1 == ycoordinate2)</comparison><percentage>0.1976284584980237</percentage></vioGenQuery><vioGenQuery id="e25"><comparison>(location1 != location2)</comparison><percentage>0.1976284584980237</percentage></vioGenQuery><vioGenQuery id="e26"><comparison>(ycoordinate1 == ycoordinate2)</comparison><percentage>0.1976284584980237</percentage></vioGenQuery><vioGenQuery id="e26"><comparison>(address1 != address2)</comparison><percentage>0.1976284584980237</percentage></vioGenQuery></vioGenQueries>
        </errorPercentages>

        <!-- To control the way in which changing the value -->
        <dirtyStrategies>
            <defaultStrategy>
                <strategy> TypoRandom </strategy>
            </defaultStrategy> 
            <!-- possible strategies
                <strategy chars="*" charsToAdd="3">TypoAddString</strategy>
                <strategy chars="*" charsToAdd="3">TypoAppendString</strategy>
                <strategy charsToRemove="3">TypoRemoveString</strategy>
                <strategy charsToSwitch="3">TypoSwitchValue</strategy>
                <strategy>TypoActiveDomain</strategy>
                <strategy>TypoRandom</strategy>
            -->
        </dirtyStrategies>

        <randomErrors>
            <tables>
                <table name="clean"> 
                    <percentage>5</percentage> <!-- Percentage is wrt attributes to dirty in the table -->
                    <attributes>
                    <atrribute>storename</atrribute><atrribute>buffersize</atrribute><atrribute>address</atrribute><atrribute>communityareaname</atrribute><atrribute>location</atrribute></attributes>
                </table>
            </tables>
        </randomErrors>
    
        <outlierErrors>
            <tables>
                <table name="clean">
                    <attributes>
                    <atrribute percentage="0" detectable="true">licenseid</atrribute><atrribute percentage="0" detectable="true">accountnumber</atrribute><atrribute percentage="0" detectable="true">squarefeet</atrribute><atrribute percentage="0" detectable="true">zipcode</atrribute><atrribute percentage="0" detectable="true">communityarea</atrribute><atrribute percentage="0" detectable="true">ward</atrribute><atrribute percentage="0" detectable="true">censustract</atrribute><atrribute percentage="0" detectable="true">censusblock</atrribute><atrribute percentage="0" detectable="true">xcoordinate</atrribute><atrribute percentage="0" detectable="true">ycoordinate</atrribute><atrribute percentage="0" detectable="true">latitude</atrribute><atrribute percentage="0" detectable="true">longitude</atrribute></attributes>
                </table>
            </tables>
        </outlierErrors>
        
        <!-- The following parameters are used to control the sampling process.
            All the fields are optional, but they may be crucial to obtain a good random sample.
            In order to choose the cells to modify, BART will scan the result of a viogen query
            using the following sampling algorithm:
            1) First, a number of tuples are skipped. This is a random number choosed btw 
                0 and (offsetFactor * tableSize)
            2) Then BART will scan the result and will pickup tuples 
            with a probability p = probabilityFactor.
            
            BART uses three kinds of queries
            - Symmetric queries: for symmetric viogen queries (see paper)
            - Inequality queries: for viogen queries without equalities (i.e. inequalities only)
            - Standard queries: for all other viogen queries
        -->
        <vioGenQueriesConfiguration>
            <!-- STANDARD QUERIES -->
            <probabilityFactorForStandardQueries>0.25</probabilityFactorForStandardQueries>
            <offsetFactorForStandardQueries>0.05</offsetFactorForStandardQueries>
            <!-- SYMMETRIC QUERIES -->
            <probabilityFactorForSymmetricQueries>0.25</probabilityFactorForSymmetricQueries>
            <offsetFactorForSymmetricQueries>0.05</offsetFactorForSymmetricQueries>
            <!-- INEQUALITY QUERIES -->
            <probabilityFactorForInequalityQueries>0.05</probabilityFactorForInequalityQueries>
            <offsetFactorForInequalityQueries>0.05</offsetFactorForInequalityQueries>
            <windowSizeFactorForInequalityQueries>1.5</windowSizeFactorForInequalityQueries>
        </vioGenQueriesConfiguration>

    </configuration>
</task>