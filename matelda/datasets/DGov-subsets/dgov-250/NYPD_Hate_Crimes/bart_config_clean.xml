<task>
    <!-- ****************************************************
                      DATABASES
    **************************************************** -->
    <target> 
        <type>DBMS</type>
        <access-configuration>
            <driver>org.postgresql.Driver</driver>
            <uri>jdbc:postgresql://localhost:5433/bartdb</uri>
            <schema>target</schema>
            <login>postgres</login>
            <password>postgres</password>
        </access-configuration>
        <import>
            <input type="csv" separator="," table="clean">/home/fatemeh/ED-Scale/Sandbox_Generation/metanome_input_files/processed/NYPD_Hate_Crimes/clean.csv</input>
        </import>
    </target>

    <!-- ****************************************************
                    DEPENDENCIES
    **************************************************** -->
    <dependencies><![CDATA[DCs: 

            e1: clean(full_complaintid: $full_complaintid1, complaint_year_number: $complaint_year_number1, month_number: $month_number1, record_create_date: $record_create_date1, complaint_precinct_code: $complaint_precinct_code1, patrol_borough_name: $patrol_borough_name1, county: $county1, law_code_category_description: $law_code_category_description1, offense_description: $offense_description1, pd_code_description: $pd_code_description1, bias_motive_description: $bias_motive_description1, offense_category: $offense_category1, arrest_date: $arrest_date1, arrest_id: $arrest_id1),
            clean(full_complaintid: $full_complaintid2, complaint_year_number: $complaint_year_number2, month_number: $month_number2, record_create_date: $record_create_date2, complaint_precinct_code: $complaint_precinct_code2, patrol_borough_name: $patrol_borough_name2, county: $county2, law_code_category_description: $law_code_category_description2, offense_description: $offense_description2, pd_code_description: $pd_code_description2, bias_motive_description: $bias_motive_description2, offense_category: $offense_category2, arrest_date: $arrest_date2, arrest_id: $arrest_id2),
                $full_complaintid1 == $full_complaintid2, $record_create_date1 != $record_create_date2 -> #fail. 

        
            e2: clean(full_complaintid: $full_complaintid1, complaint_year_number: $complaint_year_number1, month_number: $month_number1, record_create_date: $record_create_date1, complaint_precinct_code: $complaint_precinct_code1, patrol_borough_name: $patrol_borough_name1, county: $county1, law_code_category_description: $law_code_category_description1, offense_description: $offense_description1, pd_code_description: $pd_code_description1, bias_motive_description: $bias_motive_description1, offense_category: $offense_category1, arrest_date: $arrest_date1, arrest_id: $arrest_id1),
            clean(full_complaintid: $full_complaintid2, complaint_year_number: $complaint_year_number2, month_number: $month_number2, record_create_date: $record_create_date2, complaint_precinct_code: $complaint_precinct_code2, patrol_borough_name: $patrol_borough_name2, county: $county2, law_code_category_description: $law_code_category_description2, offense_description: $offense_description2, pd_code_description: $pd_code_description2, bias_motive_description: $bias_motive_description2, offense_category: $offense_category2, arrest_date: $arrest_date2, arrest_id: $arrest_id2),
                $full_complaintid1 == $full_complaintid2, $complaint_precinct_code1 != $complaint_precinct_code2 -> #fail. 

        
            e3: clean(full_complaintid: $full_complaintid1, complaint_year_number: $complaint_year_number1, month_number: $month_number1, record_create_date: $record_create_date1, complaint_precinct_code: $complaint_precinct_code1, patrol_borough_name: $patrol_borough_name1, county: $county1, law_code_category_description: $law_code_category_description1, offense_description: $offense_description1, pd_code_description: $pd_code_description1, bias_motive_description: $bias_motive_description1, offense_category: $offense_category1, arrest_date: $arrest_date1, arrest_id: $arrest_id1),
            clean(full_complaintid: $full_complaintid2, complaint_year_number: $complaint_year_number2, month_number: $month_number2, record_create_date: $record_create_date2, complaint_precinct_code: $complaint_precinct_code2, patrol_borough_name: $patrol_borough_name2, county: $county2, law_code_category_description: $law_code_category_description2, offense_description: $offense_description2, pd_code_description: $pd_code_description2, bias_motive_description: $bias_motive_description2, offense_category: $offense_category2, arrest_date: $arrest_date2, arrest_id: $arrest_id2),
                $full_complaintid1 == $full_complaintid2, $pd_code_description1 != $pd_code_description2 -> #fail. 

        
            e4: clean(full_complaintid: $full_complaintid1, complaint_year_number: $complaint_year_number1, month_number: $month_number1, record_create_date: $record_create_date1, complaint_precinct_code: $complaint_precinct_code1, patrol_borough_name: $patrol_borough_name1, county: $county1, law_code_category_description: $law_code_category_description1, offense_description: $offense_description1, pd_code_description: $pd_code_description1, bias_motive_description: $bias_motive_description1, offense_category: $offense_category1, arrest_date: $arrest_date1, arrest_id: $arrest_id1),
            clean(full_complaintid: $full_complaintid2, complaint_year_number: $complaint_year_number2, month_number: $month_number2, record_create_date: $record_create_date2, complaint_precinct_code: $complaint_precinct_code2, patrol_borough_name: $patrol_borough_name2, county: $county2, law_code_category_description: $law_code_category_description2, offense_description: $offense_description2, pd_code_description: $pd_code_description2, bias_motive_description: $bias_motive_description2, offense_category: $offense_category2, arrest_date: $arrest_date2, arrest_id: $arrest_id2),
                $full_complaintid1 == $full_complaintid2, $bias_motive_description1 != $bias_motive_description2 -> #fail. 

        
            e5: clean(full_complaintid: $full_complaintid1, complaint_year_number: $complaint_year_number1, month_number: $month_number1, record_create_date: $record_create_date1, complaint_precinct_code: $complaint_precinct_code1, patrol_borough_name: $patrol_borough_name1, county: $county1, law_code_category_description: $law_code_category_description1, offense_description: $offense_description1, pd_code_description: $pd_code_description1, bias_motive_description: $bias_motive_description1, offense_category: $offense_category1, arrest_date: $arrest_date1, arrest_id: $arrest_id1),
            clean(full_complaintid: $full_complaintid2, complaint_year_number: $complaint_year_number2, month_number: $month_number2, record_create_date: $record_create_date2, complaint_precinct_code: $complaint_precinct_code2, patrol_borough_name: $patrol_borough_name2, county: $county2, law_code_category_description: $law_code_category_description2, offense_description: $offense_description2, pd_code_description: $pd_code_description2, bias_motive_description: $bias_motive_description2, offense_category: $offense_category2, arrest_date: $arrest_date2, arrest_id: $arrest_id2),
                $full_complaintid1 == $full_complaintid2, $offense_description1 != $offense_description2 -> #fail. 

        
            e6: clean(full_complaintid: $full_complaintid1, complaint_year_number: $complaint_year_number1, month_number: $month_number1, record_create_date: $record_create_date1, complaint_precinct_code: $complaint_precinct_code1, patrol_borough_name: $patrol_borough_name1, county: $county1, law_code_category_description: $law_code_category_description1, offense_description: $offense_description1, pd_code_description: $pd_code_description1, bias_motive_description: $bias_motive_description1, offense_category: $offense_category1, arrest_date: $arrest_date1, arrest_id: $arrest_id1),
            clean(full_complaintid: $full_complaintid2, complaint_year_number: $complaint_year_number2, month_number: $month_number2, record_create_date: $record_create_date2, complaint_precinct_code: $complaint_precinct_code2, patrol_borough_name: $patrol_borough_name2, county: $county2, law_code_category_description: $law_code_category_description2, offense_description: $offense_description2, pd_code_description: $pd_code_description2, bias_motive_description: $bias_motive_description2, offense_category: $offense_category2, arrest_date: $arrest_date2, arrest_id: $arrest_id2),
                $full_complaintid1 == $full_complaintid2, $month_number1 != $month_number2 -> #fail. 

        
            e7: clean(full_complaintid: $full_complaintid1, complaint_year_number: $complaint_year_number1, month_number: $month_number1, record_create_date: $record_create_date1, complaint_precinct_code: $complaint_precinct_code1, patrol_borough_name: $patrol_borough_name1, county: $county1, law_code_category_description: $law_code_category_description1, offense_description: $offense_description1, pd_code_description: $pd_code_description1, bias_motive_description: $bias_motive_description1, offense_category: $offense_category1, arrest_date: $arrest_date1, arrest_id: $arrest_id1),
            clean(full_complaintid: $full_complaintid2, complaint_year_number: $complaint_year_number2, month_number: $month_number2, record_create_date: $record_create_date2, complaint_precinct_code: $complaint_precinct_code2, patrol_borough_name: $patrol_borough_name2, county: $county2, law_code_category_description: $law_code_category_description2, offense_description: $offense_description2, pd_code_description: $pd_code_description2, bias_motive_description: $bias_motive_description2, offense_category: $offense_category2, arrest_date: $arrest_date2, arrest_id: $arrest_id2),
                $full_complaintid1 == $full_complaintid2, $patrol_borough_name1 != $patrol_borough_name2 -> #fail. 

        
            e8: clean(full_complaintid: $full_complaintid1, complaint_year_number: $complaint_year_number1, month_number: $month_number1, record_create_date: $record_create_date1, complaint_precinct_code: $complaint_precinct_code1, patrol_borough_name: $patrol_borough_name1, county: $county1, law_code_category_description: $law_code_category_description1, offense_description: $offense_description1, pd_code_description: $pd_code_description1, bias_motive_description: $bias_motive_description1, offense_category: $offense_category1, arrest_date: $arrest_date1, arrest_id: $arrest_id1),
            clean(full_complaintid: $full_complaintid2, complaint_year_number: $complaint_year_number2, month_number: $month_number2, record_create_date: $record_create_date2, complaint_precinct_code: $complaint_precinct_code2, patrol_borough_name: $patrol_borough_name2, county: $county2, law_code_category_description: $law_code_category_description2, offense_description: $offense_description2, pd_code_description: $pd_code_description2, bias_motive_description: $bias_motive_description2, offense_category: $offense_category2, arrest_date: $arrest_date2, arrest_id: $arrest_id2),
                $full_complaintid1 == $full_complaintid2, $offense_category1 != $offense_category2 -> #fail. 

        
            e9: clean(full_complaintid: $full_complaintid1, complaint_year_number: $complaint_year_number1, month_number: $month_number1, record_create_date: $record_create_date1, complaint_precinct_code: $complaint_precinct_code1, patrol_borough_name: $patrol_borough_name1, county: $county1, law_code_category_description: $law_code_category_description1, offense_description: $offense_description1, pd_code_description: $pd_code_description1, bias_motive_description: $bias_motive_description1, offense_category: $offense_category1, arrest_date: $arrest_date1, arrest_id: $arrest_id1),
            clean(full_complaintid: $full_complaintid2, complaint_year_number: $complaint_year_number2, month_number: $month_number2, record_create_date: $record_create_date2, complaint_precinct_code: $complaint_precinct_code2, patrol_borough_name: $patrol_borough_name2, county: $county2, law_code_category_description: $law_code_category_description2, offense_description: $offense_description2, pd_code_description: $pd_code_description2, bias_motive_description: $bias_motive_description2, offense_category: $offense_category2, arrest_date: $arrest_date2, arrest_id: $arrest_id2),
                $full_complaintid1 == $full_complaintid2, $county1 != $county2 -> #fail. 

        
            e10: clean(full_complaintid: $full_complaintid1, complaint_year_number: $complaint_year_number1, month_number: $month_number1, record_create_date: $record_create_date1, complaint_precinct_code: $complaint_precinct_code1, patrol_borough_name: $patrol_borough_name1, county: $county1, law_code_category_description: $law_code_category_description1, offense_description: $offense_description1, pd_code_description: $pd_code_description1, bias_motive_description: $bias_motive_description1, offense_category: $offense_category1, arrest_date: $arrest_date1, arrest_id: $arrest_id1),
            clean(full_complaintid: $full_complaintid2, complaint_year_number: $complaint_year_number2, month_number: $month_number2, record_create_date: $record_create_date2, complaint_precinct_code: $complaint_precinct_code2, patrol_borough_name: $patrol_borough_name2, county: $county2, law_code_category_description: $law_code_category_description2, offense_description: $offense_description2, pd_code_description: $pd_code_description2, bias_motive_description: $bias_motive_description2, offense_category: $offense_category2, arrest_date: $arrest_date2, arrest_id: $arrest_id2),
                $full_complaintid1 == $full_complaintid2, $complaint_year_number1 != $complaint_year_number2 -> #fail. 

        
            e11: clean(full_complaintid: $full_complaintid1, complaint_year_number: $complaint_year_number1, month_number: $month_number1, record_create_date: $record_create_date1, complaint_precinct_code: $complaint_precinct_code1, patrol_borough_name: $patrol_borough_name1, county: $county1, law_code_category_description: $law_code_category_description1, offense_description: $offense_description1, pd_code_description: $pd_code_description1, bias_motive_description: $bias_motive_description1, offense_category: $offense_category1, arrest_date: $arrest_date1, arrest_id: $arrest_id1),
            clean(full_complaintid: $full_complaintid2, complaint_year_number: $complaint_year_number2, month_number: $month_number2, record_create_date: $record_create_date2, complaint_precinct_code: $complaint_precinct_code2, patrol_borough_name: $patrol_borough_name2, county: $county2, law_code_category_description: $law_code_category_description2, offense_description: $offense_description2, pd_code_description: $pd_code_description2, bias_motive_description: $bias_motive_description2, offense_category: $offense_category2, arrest_date: $arrest_date2, arrest_id: $arrest_id2),
                $full_complaintid1 == $full_complaintid2, $law_code_category_description1 != $law_code_category_description2 -> #fail. 

        
            e12: clean(full_complaintid: $full_complaintid1, complaint_year_number: $complaint_year_number1, month_number: $month_number1, record_create_date: $record_create_date1, complaint_precinct_code: $complaint_precinct_code1, patrol_borough_name: $patrol_borough_name1, county: $county1, law_code_category_description: $law_code_category_description1, offense_description: $offense_description1, pd_code_description: $pd_code_description1, bias_motive_description: $bias_motive_description1, offense_category: $offense_category1, arrest_date: $arrest_date1, arrest_id: $arrest_id1),
            clean(full_complaintid: $full_complaintid2, complaint_year_number: $complaint_year_number2, month_number: $month_number2, record_create_date: $record_create_date2, complaint_precinct_code: $complaint_precinct_code2, patrol_borough_name: $patrol_borough_name2, county: $county2, law_code_category_description: $law_code_category_description2, offense_description: $offense_description2, pd_code_description: $pd_code_description2, bias_motive_description: $bias_motive_description2, offense_category: $offense_category2, arrest_date: $arrest_date2, arrest_id: $arrest_id2),
                $arrest_id1 == $arrest_id2, $arrest_date1 != $arrest_date2 -> #fail. 

        
            e13: clean(full_complaintid: $full_complaintid1, complaint_year_number: $complaint_year_number1, month_number: $month_number1, record_create_date: $record_create_date1, complaint_precinct_code: $complaint_precinct_code1, patrol_borough_name: $patrol_borough_name1, county: $county1, law_code_category_description: $law_code_category_description1, offense_description: $offense_description1, pd_code_description: $pd_code_description1, bias_motive_description: $bias_motive_description1, offense_category: $offense_category1, arrest_date: $arrest_date1, arrest_id: $arrest_id1),
            clean(full_complaintid: $full_complaintid2, complaint_year_number: $complaint_year_number2, month_number: $month_number2, record_create_date: $record_create_date2, complaint_precinct_code: $complaint_precinct_code2, patrol_borough_name: $patrol_borough_name2, county: $county2, law_code_category_description: $law_code_category_description2, offense_description: $offense_description2, pd_code_description: $pd_code_description2, bias_motive_description: $bias_motive_description2, offense_category: $offense_category2, arrest_date: $arrest_date2, arrest_id: $arrest_id2),
                $complaint_precinct_code1 == $complaint_precinct_code2, $patrol_borough_name1 != $patrol_borough_name2 -> #fail. 

        
            e14: clean(full_complaintid: $full_complaintid1, complaint_year_number: $complaint_year_number1, month_number: $month_number1, record_create_date: $record_create_date1, complaint_precinct_code: $complaint_precinct_code1, patrol_borough_name: $patrol_borough_name1, county: $county1, law_code_category_description: $law_code_category_description1, offense_description: $offense_description1, pd_code_description: $pd_code_description1, bias_motive_description: $bias_motive_description1, offense_category: $offense_category1, arrest_date: $arrest_date1, arrest_id: $arrest_id1),
            clean(full_complaintid: $full_complaintid2, complaint_year_number: $complaint_year_number2, month_number: $month_number2, record_create_date: $record_create_date2, complaint_precinct_code: $complaint_precinct_code2, patrol_borough_name: $patrol_borough_name2, county: $county2, law_code_category_description: $law_code_category_description2, offense_description: $offense_description2, pd_code_description: $pd_code_description2, bias_motive_description: $bias_motive_description2, offense_category: $offense_category2, arrest_date: $arrest_date2, arrest_id: $arrest_id2),
                $complaint_precinct_code1 == $complaint_precinct_code2, $county1 != $county2 -> #fail. 

        
            e15: clean(full_complaintid: $full_complaintid1, complaint_year_number: $complaint_year_number1, month_number: $month_number1, record_create_date: $record_create_date1, complaint_precinct_code: $complaint_precinct_code1, patrol_borough_name: $patrol_borough_name1, county: $county1, law_code_category_description: $law_code_category_description1, offense_description: $offense_description1, pd_code_description: $pd_code_description1, bias_motive_description: $bias_motive_description1, offense_category: $offense_category1, arrest_date: $arrest_date1, arrest_id: $arrest_id1),
            clean(full_complaintid: $full_complaintid2, complaint_year_number: $complaint_year_number2, month_number: $month_number2, record_create_date: $record_create_date2, complaint_precinct_code: $complaint_precinct_code2, patrol_borough_name: $patrol_borough_name2, county: $county2, law_code_category_description: $law_code_category_description2, offense_description: $offense_description2, pd_code_description: $pd_code_description2, bias_motive_description: $bias_motive_description2, offense_category: $offense_category2, arrest_date: $arrest_date2, arrest_id: $arrest_id2),
                $pd_code_description1 == $pd_code_description2, $offense_description1 != $offense_description2 -> #fail. 

        
            e16: clean(full_complaintid: $full_complaintid1, complaint_year_number: $complaint_year_number1, month_number: $month_number1, record_create_date: $record_create_date1, complaint_precinct_code: $complaint_precinct_code1, patrol_borough_name: $patrol_borough_name1, county: $county1, law_code_category_description: $law_code_category_description1, offense_description: $offense_description1, pd_code_description: $pd_code_description1, bias_motive_description: $bias_motive_description1, offense_category: $offense_category1, arrest_date: $arrest_date1, arrest_id: $arrest_id1),
            clean(full_complaintid: $full_complaintid2, complaint_year_number: $complaint_year_number2, month_number: $month_number2, record_create_date: $record_create_date2, complaint_precinct_code: $complaint_precinct_code2, patrol_borough_name: $patrol_borough_name2, county: $county2, law_code_category_description: $law_code_category_description2, offense_description: $offense_description2, pd_code_description: $pd_code_description2, bias_motive_description: $bias_motive_description2, offense_category: $offense_category2, arrest_date: $arrest_date2, arrest_id: $arrest_id2),
                $pd_code_description1 == $pd_code_description2, $law_code_category_description1 != $law_code_category_description2 -> #fail. 

        
            e17: clean(full_complaintid: $full_complaintid1, complaint_year_number: $complaint_year_number1, month_number: $month_number1, record_create_date: $record_create_date1, complaint_precinct_code: $complaint_precinct_code1, patrol_borough_name: $patrol_borough_name1, county: $county1, law_code_category_description: $law_code_category_description1, offense_description: $offense_description1, pd_code_description: $pd_code_description1, bias_motive_description: $bias_motive_description1, offense_category: $offense_category1, arrest_date: $arrest_date1, arrest_id: $arrest_id1),
            clean(full_complaintid: $full_complaintid2, complaint_year_number: $complaint_year_number2, month_number: $month_number2, record_create_date: $record_create_date2, complaint_precinct_code: $complaint_precinct_code2, patrol_borough_name: $patrol_borough_name2, county: $county2, law_code_category_description: $law_code_category_description2, offense_description: $offense_description2, pd_code_description: $pd_code_description2, bias_motive_description: $bias_motive_description2, offense_category: $offense_category2, arrest_date: $arrest_date2, arrest_id: $arrest_id2),
                $bias_motive_description1 == $bias_motive_description2, $offense_category1 != $offense_category2 -> #fail. 

        
            e18: clean(full_complaintid: $full_complaintid1, complaint_year_number: $complaint_year_number1, month_number: $month_number1, record_create_date: $record_create_date1, complaint_precinct_code: $complaint_precinct_code1, patrol_borough_name: $patrol_borough_name1, county: $county1, law_code_category_description: $law_code_category_description1, offense_description: $offense_description1, pd_code_description: $pd_code_description1, bias_motive_description: $bias_motive_description1, offense_category: $offense_category1, arrest_date: $arrest_date1, arrest_id: $arrest_id1),
            clean(full_complaintid: $full_complaintid2, complaint_year_number: $complaint_year_number2, month_number: $month_number2, record_create_date: $record_create_date2, complaint_precinct_code: $complaint_precinct_code2, patrol_borough_name: $patrol_borough_name2, county: $county2, law_code_category_description: $law_code_category_description2, offense_description: $offense_description2, pd_code_description: $pd_code_description2, bias_motive_description: $bias_motive_description2, offense_category: $offense_category2, arrest_date: $arrest_date2, arrest_id: $arrest_id2),
                $patrol_borough_name1 == $patrol_borough_name2, $county1 != $county2 -> #fail. 

        ]]></dependencies>

    <!-- ****************************************************
                      CONFIGURATION
    **************************************************** -->
    <configuration>
        <!-- To print extra information in the ouput (default = false) -->
        <printLog>true</printLog>

        <!-- To load DB every time on start (default = false) -->
        <recreateDBOnStart>true</recreateDBOnStart>

        <!-- To apply the changes (default = false) -->
        <applyCellChanges>true</applyCellChanges>

        <!-- To  apply cell changes on a copy of the original target, with a custom suffix (default = true) -->
        <cloneTargetSchema>true</cloneTargetSchema>
        <cloneSuffix>_dirty</cloneSuffix>

        <!-- To export the dirty db -->
        <exportDirtyDB>true</exportDirtyDB>
        <exportDirtyDBPath>./</exportDirtyDBPath>
        <exportDirtyDBType>CSV</exportDirtyDBType>

        <!-- To export the changes -->
        <exportCellChanges>true</exportCellChanges>
        <exportCellChangesPath>clean_changes.csv</exportCellChangesPath>

        <!-- To compute an estimate of the reparability (default = false) -->
        <estimateRepairability>true</estimateRepairability>

        <!-- To generate all possible changes (default = false - slow, only for toy examples)-->
        <generateAllChanges>false</generateAllChanges>

        <!-- To avoid interactions among changes. (default = true) -->
        <avoidInteractions>true</avoidInteractions>

        <!-- To check, at the end of the process, if changes are detectable. (default = false) -->
        <checkChanges>true</checkChanges>

        <!-- To compute an estimate of the repairability. Requires checkChanges = true. (default = false) -->
        <estimateRepairability>true</estimateRepairability>

        <!-- To use an optimized strategy for updates. (default = true) -->
        <useDeltaDBForChanges>true</useDeltaDBForChanges>

        <!-- Error percentages for dependencies and comparisons 
        All percentages are wrt table sizes (# tuples) -->
        <errorPercentages>
            <defaultPercentage>0.0</defaultPercentage>
            <vioGenQueries>
            <vioGenQuery id="e1"><comparison>(full_complaintid1 == full_complaintid2)</comparison><percentage>0.11055831951354339</percentage></vioGenQuery><vioGenQuery id="e1"><comparison>(record_create_date1 != record_create_date2)</comparison><percentage>0.11055831951354339</percentage></vioGenQuery><vioGenQuery id="e2"><comparison>(full_complaintid1 == full_complaintid2)</comparison><percentage>0.055279159756771695</percentage></vioGenQuery><vioGenQuery id="e2"><comparison>(complaint_precinct_code1 != complaint_precinct_code2)</comparison><percentage>0.055279159756771695</percentage></vioGenQuery><vioGenQuery id="e3"><comparison>(full_complaintid1 == full_complaintid2)</comparison><percentage>0.055279159756771695</percentage></vioGenQuery><vioGenQuery id="e3"><comparison>(pd_code_description1 != pd_code_description2)</comparison><percentage>0.055279159756771695</percentage></vioGenQuery><vioGenQuery id="e4"><comparison>(full_complaintid1 == full_complaintid2)</comparison><percentage>0.055279159756771695</percentage></vioGenQuery><vioGenQuery id="e4"><comparison>(bias_motive_description1 != bias_motive_description2)</comparison><percentage>0.055279159756771695</percentage></vioGenQuery><vioGenQuery id="e5"><comparison>(full_complaintid1 == full_complaintid2)</comparison><percentage>0.055279159756771695</percentage></vioGenQuery><vioGenQuery id="e5"><comparison>(offense_description1 != offense_description2)</comparison><percentage>0.055279159756771695</percentage></vioGenQuery><vioGenQuery id="e6"><comparison>(full_complaintid1 == full_complaintid2)</comparison><percentage>0.055279159756771695</percentage></vioGenQuery><vioGenQuery id="e6"><comparison>(month_number1 != month_number2)</comparison><percentage>0.055279159756771695</percentage></vioGenQuery><vioGenQuery id="e7"><comparison>(full_complaintid1 == full_complaintid2)</comparison><percentage>0.055279159756771695</percentage></vioGenQuery><vioGenQuery id="e7"><comparison>(patrol_borough_name1 != patrol_borough_name2)</comparison><percentage>0.055279159756771695</percentage></vioGenQuery><vioGenQuery id="e8"><comparison>(full_complaintid1 == full_complaintid2)</comparison><percentage>0.055279159756771695</percentage></vioGenQuery><vioGenQuery id="e8"><comparison>(offense_category1 != offense_category2)</comparison><percentage>0.055279159756771695</percentage></vioGenQuery><vioGenQuery id="e9"><comparison>(full_complaintid1 == full_complaintid2)</comparison><percentage>0.055279159756771695</percentage></vioGenQuery><vioGenQuery id="e9"><comparison>(county1 != county2)</comparison><percentage>0.055279159756771695</percentage></vioGenQuery><vioGenQuery id="e10"><comparison>(full_complaintid1 == full_complaintid2)</comparison><percentage>0.055279159756771695</percentage></vioGenQuery><vioGenQuery id="e10"><comparison>(complaint_year_number1 != complaint_year_number2)</comparison><percentage>0.055279159756771695</percentage></vioGenQuery><vioGenQuery id="e11"><comparison>(full_complaintid1 == full_complaintid2)</comparison><percentage>0.055279159756771695</percentage></vioGenQuery><vioGenQuery id="e11"><comparison>(law_code_category_description1 != law_code_category_description2)</comparison><percentage>0.055279159756771695</percentage></vioGenQuery><vioGenQuery id="e12"><comparison>(arrest_id1 == arrest_id2)</comparison><percentage>0.055279159756771695</percentage></vioGenQuery><vioGenQuery id="e12"><comparison>(arrest_date1 != arrest_date2)</comparison><percentage>0.055279159756771695</percentage></vioGenQuery><vioGenQuery id="e13"><comparison>(complaint_precinct_code1 == complaint_precinct_code2)</comparison><percentage>0.055279159756771695</percentage></vioGenQuery><vioGenQuery id="e13"><comparison>(patrol_borough_name1 != patrol_borough_name2)</comparison><percentage>0.055279159756771695</percentage></vioGenQuery><vioGenQuery id="e14"><comparison>(complaint_precinct_code1 == complaint_precinct_code2)</comparison><percentage>0.055279159756771695</percentage></vioGenQuery><vioGenQuery id="e14"><comparison>(county1 != county2)</comparison><percentage>0.055279159756771695</percentage></vioGenQuery><vioGenQuery id="e15"><comparison>(pd_code_description1 == pd_code_description2)</comparison><percentage>0.055279159756771695</percentage></vioGenQuery><vioGenQuery id="e15"><comparison>(offense_description1 != offense_description2)</comparison><percentage>0.055279159756771695</percentage></vioGenQuery><vioGenQuery id="e16"><comparison>(pd_code_description1 == pd_code_description2)</comparison><percentage>0.055279159756771695</percentage></vioGenQuery><vioGenQuery id="e16"><comparison>(law_code_category_description1 != law_code_category_description2)</comparison><percentage>0.055279159756771695</percentage></vioGenQuery><vioGenQuery id="e17"><comparison>(bias_motive_description1 == bias_motive_description2)</comparison><percentage>0.055279159756771695</percentage></vioGenQuery><vioGenQuery id="e17"><comparison>(offense_category1 != offense_category2)</comparison><percentage>0.055279159756771695</percentage></vioGenQuery><vioGenQuery id="e18"><comparison>(patrol_borough_name1 == patrol_borough_name2)</comparison><percentage>0.055279159756771695</percentage></vioGenQuery><vioGenQuery id="e18"><comparison>(county1 != county2)</comparison><percentage>0.055279159756771695</percentage></vioGenQuery></vioGenQueries>
        </errorPercentages>

        <!-- To control the way in which changing the value -->
        <dirtyStrategies>
            <defaultStrategy>
                <strategy> TypoRandom </strategy>
            </defaultStrategy> 
            <!-- possible strategies
                <strategy chars="*" charsToAdd="3">TypoAddString</strategy>
                <strategy chars="*" charsToAdd="3">TypoAppendString</strategy>
                <strategy charsToRemove="3">TypoRemoveString</strategy>
                <strategy charsToSwitch="3">TypoSwitchValue</strategy>
                <strategy>TypoActiveDomain</strategy>
                <strategy>TypoRandom</strategy>
            -->
        </dirtyStrategies>

        <randomErrors>
            <tables>
                <table name="clean"> 
                    <percentage>2</percentage> <!-- Percentage is wrt attributes to dirty in the table -->
                    <attributes>
                    <atrribute>record_create_date</atrribute><atrribute>patrol_borough_name</atrribute><atrribute>county</atrribute><atrribute>law_code_category_description</atrribute><atrribute>offense_description</atrribute><atrribute>pd_code_description</atrribute><atrribute>bias_motive_description</atrribute><atrribute>offense_category</atrribute><atrribute>arrest_date</atrribute><atrribute>arrest_id</atrribute></attributes>
                </table>
            </tables>
        </randomErrors>
    
        <outlierErrors>
            <tables>
                <table name="clean">
                    <attributes>
                    <atrribute percentage="0" detectable="true">full_complaintid</atrribute><atrribute percentage="0" detectable="true">complaint_year_number</atrribute><atrribute percentage="0" detectable="true">month_number</atrribute><atrribute percentage="0" detectable="true">complaint_precinct_code</atrribute></attributes>
                </table>
            </tables>
        </outlierErrors>
        
        <!-- The following parameters are used to control the sampling process.
            All the fields are optional, but they may be crucial to obtain a good random sample.
            In order to choose the cells to modify, BART will scan the result of a viogen query
            using the following sampling algorithm:
            1) First, a number of tuples are skipped. This is a random number choosed btw 
                0 and (offsetFactor * tableSize)
            2) Then BART will scan the result and will pickup tuples 
            with a probability p = probabilityFactor.
            
            BART uses three kinds of queries
            - Symmetric queries: for symmetric viogen queries (see paper)
            - Inequality queries: for viogen queries without equalities (i.e. inequalities only)
            - Standard queries: for all other viogen queries
        -->
        <vioGenQueriesConfiguration>
            <!-- STANDARD QUERIES -->
            <probabilityFactorForStandardQueries>0.25</probabilityFactorForStandardQueries>
            <offsetFactorForStandardQueries>0.05</offsetFactorForStandardQueries>
            <!-- SYMMETRIC QUERIES -->
            <probabilityFactorForSymmetricQueries>0.25</probabilityFactorForSymmetricQueries>
            <offsetFactorForSymmetricQueries>0.05</offsetFactorForSymmetricQueries>
            <!-- INEQUALITY QUERIES -->
            <probabilityFactorForInequalityQueries>0.05</probabilityFactorForInequalityQueries>
            <offsetFactorForInequalityQueries>0.05</offsetFactorForInequalityQueries>
            <windowSizeFactorForInequalityQueries>1.5</windowSizeFactorForInequalityQueries>
        </vioGenQueriesConfiguration>

    </configuration>
</task>