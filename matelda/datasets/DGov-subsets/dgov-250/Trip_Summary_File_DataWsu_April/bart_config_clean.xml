<task>
    <!-- ****************************************************
                      DATABASES
    **************************************************** -->
    <target> 
        <type>DBMS</type>
        <access-configuration>
            <driver>org.postgresql.Driver</driver>
            <uri>jdbc:postgresql://localhost:5433/bartdb</uri>
            <schema>target</schema>
            <login>postgres</login>
            <password>postgres</password>
        </access-configuration>
        <import>
            <input type="csv" separator="," table="clean">/home/fatemeh/ED-Scale/Sandbox_Generation/metanome_input_files/processed/Trip_Summary_File_DataWsu_April/clean.csv</input>
        </import>
    </target>

    <!-- ****************************************************
                    DEPENDENCIES
    **************************************************** -->
    <dependencies><![CDATA[DCs: 

            e1: clean(device_id: $device_id1, trip_id: $trip_id1, epoch_start_time: $epoch_start_time1, start_date: $start_date1, start_time: $start_time1, epoch_end_time: $epoch_end_time1, end_date: $end_date1, end_time: $end_time1, total_trip_distancekm: $total_trip_distancekm1, distance_over_two_five_mphkm: $distance_over_two_five_mphkm1, distance_over_five_five_mphkm: $distance_over_five_five_mphkm1, trip_durations: $trip_durations1, average_speedms: $average_speedms1, maximum_speedms: $maximum_speedms1, brake_count: $brake_count1, wiper_activated: $wiper_activated1),
            clean(device_id: $device_id2, trip_id: $trip_id2, epoch_start_time: $epoch_start_time2, start_date: $start_date2, start_time: $start_time2, epoch_end_time: $epoch_end_time2, end_date: $end_date2, end_time: $end_time2, total_trip_distancekm: $total_trip_distancekm2, distance_over_two_five_mphkm: $distance_over_two_five_mphkm2, distance_over_five_five_mphkm: $distance_over_five_five_mphkm2, trip_durations: $trip_durations2, average_speedms: $average_speedms2, maximum_speedms: $maximum_speedms2, brake_count: $brake_count2, wiper_activated: $wiper_activated2),
                $total_trip_distancekm1 == $total_trip_distancekm2, $average_speedms1 != $average_speedms2 -> #fail. 

        
            e2: clean(device_id: $device_id1, trip_id: $trip_id1, epoch_start_time: $epoch_start_time1, start_date: $start_date1, start_time: $start_time1, epoch_end_time: $epoch_end_time1, end_date: $end_date1, end_time: $end_time1, total_trip_distancekm: $total_trip_distancekm1, distance_over_two_five_mphkm: $distance_over_two_five_mphkm1, distance_over_five_five_mphkm: $distance_over_five_five_mphkm1, trip_durations: $trip_durations1, average_speedms: $average_speedms1, maximum_speedms: $maximum_speedms1, brake_count: $brake_count1, wiper_activated: $wiper_activated1),
            clean(device_id: $device_id2, trip_id: $trip_id2, epoch_start_time: $epoch_start_time2, start_date: $start_date2, start_time: $start_time2, epoch_end_time: $epoch_end_time2, end_date: $end_date2, end_time: $end_time2, total_trip_distancekm: $total_trip_distancekm2, distance_over_two_five_mphkm: $distance_over_two_five_mphkm2, distance_over_five_five_mphkm: $distance_over_five_five_mphkm2, trip_durations: $trip_durations2, average_speedms: $average_speedms2, maximum_speedms: $maximum_speedms2, brake_count: $brake_count2, wiper_activated: $wiper_activated2),
                $total_trip_distancekm1 == $total_trip_distancekm2, $epoch_end_time1 != $epoch_end_time2 -> #fail. 

        
            e3: clean(device_id: $device_id1, trip_id: $trip_id1, epoch_start_time: $epoch_start_time1, start_date: $start_date1, start_time: $start_time1, epoch_end_time: $epoch_end_time1, end_date: $end_date1, end_time: $end_time1, total_trip_distancekm: $total_trip_distancekm1, distance_over_two_five_mphkm: $distance_over_two_five_mphkm1, distance_over_five_five_mphkm: $distance_over_five_five_mphkm1, trip_durations: $trip_durations1, average_speedms: $average_speedms1, maximum_speedms: $maximum_speedms1, brake_count: $brake_count1, wiper_activated: $wiper_activated1),
            clean(device_id: $device_id2, trip_id: $trip_id2, epoch_start_time: $epoch_start_time2, start_date: $start_date2, start_time: $start_time2, epoch_end_time: $epoch_end_time2, end_date: $end_date2, end_time: $end_time2, total_trip_distancekm: $total_trip_distancekm2, distance_over_two_five_mphkm: $distance_over_two_five_mphkm2, distance_over_five_five_mphkm: $distance_over_five_five_mphkm2, trip_durations: $trip_durations2, average_speedms: $average_speedms2, maximum_speedms: $maximum_speedms2, brake_count: $brake_count2, wiper_activated: $wiper_activated2),
                $total_trip_distancekm1 == $total_trip_distancekm2, $epoch_start_time1 != $epoch_start_time2 -> #fail. 

        
            e4: clean(device_id: $device_id1, trip_id: $trip_id1, epoch_start_time: $epoch_start_time1, start_date: $start_date1, start_time: $start_time1, epoch_end_time: $epoch_end_time1, end_date: $end_date1, end_time: $end_time1, total_trip_distancekm: $total_trip_distancekm1, distance_over_two_five_mphkm: $distance_over_two_five_mphkm1, distance_over_five_five_mphkm: $distance_over_five_five_mphkm1, trip_durations: $trip_durations1, average_speedms: $average_speedms1, maximum_speedms: $maximum_speedms1, brake_count: $brake_count1, wiper_activated: $wiper_activated1),
            clean(device_id: $device_id2, trip_id: $trip_id2, epoch_start_time: $epoch_start_time2, start_date: $start_date2, start_time: $start_time2, epoch_end_time: $epoch_end_time2, end_date: $end_date2, end_time: $end_time2, total_trip_distancekm: $total_trip_distancekm2, distance_over_two_five_mphkm: $distance_over_two_five_mphkm2, distance_over_five_five_mphkm: $distance_over_five_five_mphkm2, trip_durations: $trip_durations2, average_speedms: $average_speedms2, maximum_speedms: $maximum_speedms2, brake_count: $brake_count2, wiper_activated: $wiper_activated2),
                $total_trip_distancekm1 == $total_trip_distancekm2, $distance_over_two_five_mphkm1 != $distance_over_two_five_mphkm2 -> #fail. 

        
            e5: clean(device_id: $device_id1, trip_id: $trip_id1, epoch_start_time: $epoch_start_time1, start_date: $start_date1, start_time: $start_time1, epoch_end_time: $epoch_end_time1, end_date: $end_date1, end_time: $end_time1, total_trip_distancekm: $total_trip_distancekm1, distance_over_two_five_mphkm: $distance_over_two_five_mphkm1, distance_over_five_five_mphkm: $distance_over_five_five_mphkm1, trip_durations: $trip_durations1, average_speedms: $average_speedms1, maximum_speedms: $maximum_speedms1, brake_count: $brake_count1, wiper_activated: $wiper_activated1),
            clean(device_id: $device_id2, trip_id: $trip_id2, epoch_start_time: $epoch_start_time2, start_date: $start_date2, start_time: $start_time2, epoch_end_time: $epoch_end_time2, end_date: $end_date2, end_time: $end_time2, total_trip_distancekm: $total_trip_distancekm2, distance_over_two_five_mphkm: $distance_over_two_five_mphkm2, distance_over_five_five_mphkm: $distance_over_five_five_mphkm2, trip_durations: $trip_durations2, average_speedms: $average_speedms2, maximum_speedms: $maximum_speedms2, brake_count: $brake_count2, wiper_activated: $wiper_activated2),
                $total_trip_distancekm1 == $total_trip_distancekm2, $end_time1 != $end_time2 -> #fail. 

        
            e6: clean(device_id: $device_id1, trip_id: $trip_id1, epoch_start_time: $epoch_start_time1, start_date: $start_date1, start_time: $start_time1, epoch_end_time: $epoch_end_time1, end_date: $end_date1, end_time: $end_time1, total_trip_distancekm: $total_trip_distancekm1, distance_over_two_five_mphkm: $distance_over_two_five_mphkm1, distance_over_five_five_mphkm: $distance_over_five_five_mphkm1, trip_durations: $trip_durations1, average_speedms: $average_speedms1, maximum_speedms: $maximum_speedms1, brake_count: $brake_count1, wiper_activated: $wiper_activated1),
            clean(device_id: $device_id2, trip_id: $trip_id2, epoch_start_time: $epoch_start_time2, start_date: $start_date2, start_time: $start_time2, epoch_end_time: $epoch_end_time2, end_date: $end_date2, end_time: $end_time2, total_trip_distancekm: $total_trip_distancekm2, distance_over_two_five_mphkm: $distance_over_two_five_mphkm2, distance_over_five_five_mphkm: $distance_over_five_five_mphkm2, trip_durations: $trip_durations2, average_speedms: $average_speedms2, maximum_speedms: $maximum_speedms2, brake_count: $brake_count2, wiper_activated: $wiper_activated2),
                $total_trip_distancekm1 == $total_trip_distancekm2, $start_time1 != $start_time2 -> #fail. 

        
            e7: clean(device_id: $device_id1, trip_id: $trip_id1, epoch_start_time: $epoch_start_time1, start_date: $start_date1, start_time: $start_time1, epoch_end_time: $epoch_end_time1, end_date: $end_date1, end_time: $end_time1, total_trip_distancekm: $total_trip_distancekm1, distance_over_two_five_mphkm: $distance_over_two_five_mphkm1, distance_over_five_five_mphkm: $distance_over_five_five_mphkm1, trip_durations: $trip_durations1, average_speedms: $average_speedms1, maximum_speedms: $maximum_speedms1, brake_count: $brake_count1, wiper_activated: $wiper_activated1),
            clean(device_id: $device_id2, trip_id: $trip_id2, epoch_start_time: $epoch_start_time2, start_date: $start_date2, start_time: $start_time2, epoch_end_time: $epoch_end_time2, end_date: $end_date2, end_time: $end_time2, total_trip_distancekm: $total_trip_distancekm2, distance_over_two_five_mphkm: $distance_over_two_five_mphkm2, distance_over_five_five_mphkm: $distance_over_five_five_mphkm2, trip_durations: $trip_durations2, average_speedms: $average_speedms2, maximum_speedms: $maximum_speedms2, brake_count: $brake_count2, wiper_activated: $wiper_activated2),
                $total_trip_distancekm1 == $total_trip_distancekm2, $trip_durations1 != $trip_durations2 -> #fail. 

        
            e8: clean(device_id: $device_id1, trip_id: $trip_id1, epoch_start_time: $epoch_start_time1, start_date: $start_date1, start_time: $start_time1, epoch_end_time: $epoch_end_time1, end_date: $end_date1, end_time: $end_time1, total_trip_distancekm: $total_trip_distancekm1, distance_over_two_five_mphkm: $distance_over_two_five_mphkm1, distance_over_five_five_mphkm: $distance_over_five_five_mphkm1, trip_durations: $trip_durations1, average_speedms: $average_speedms1, maximum_speedms: $maximum_speedms1, brake_count: $brake_count1, wiper_activated: $wiper_activated1),
            clean(device_id: $device_id2, trip_id: $trip_id2, epoch_start_time: $epoch_start_time2, start_date: $start_date2, start_time: $start_time2, epoch_end_time: $epoch_end_time2, end_date: $end_date2, end_time: $end_time2, total_trip_distancekm: $total_trip_distancekm2, distance_over_two_five_mphkm: $distance_over_two_five_mphkm2, distance_over_five_five_mphkm: $distance_over_five_five_mphkm2, trip_durations: $trip_durations2, average_speedms: $average_speedms2, maximum_speedms: $maximum_speedms2, brake_count: $brake_count2, wiper_activated: $wiper_activated2),
                $total_trip_distancekm1 == $total_trip_distancekm2, $maximum_speedms1 != $maximum_speedms2 -> #fail. 

        
            e9: clean(device_id: $device_id1, trip_id: $trip_id1, epoch_start_time: $epoch_start_time1, start_date: $start_date1, start_time: $start_time1, epoch_end_time: $epoch_end_time1, end_date: $end_date1, end_time: $end_time1, total_trip_distancekm: $total_trip_distancekm1, distance_over_two_five_mphkm: $distance_over_two_five_mphkm1, distance_over_five_five_mphkm: $distance_over_five_five_mphkm1, trip_durations: $trip_durations1, average_speedms: $average_speedms1, maximum_speedms: $maximum_speedms1, brake_count: $brake_count1, wiper_activated: $wiper_activated1),
            clean(device_id: $device_id2, trip_id: $trip_id2, epoch_start_time: $epoch_start_time2, start_date: $start_date2, start_time: $start_time2, epoch_end_time: $epoch_end_time2, end_date: $end_date2, end_time: $end_time2, total_trip_distancekm: $total_trip_distancekm2, distance_over_two_five_mphkm: $distance_over_two_five_mphkm2, distance_over_five_five_mphkm: $distance_over_five_five_mphkm2, trip_durations: $trip_durations2, average_speedms: $average_speedms2, maximum_speedms: $maximum_speedms2, brake_count: $brake_count2, wiper_activated: $wiper_activated2),
                $total_trip_distancekm1 == $total_trip_distancekm2, $distance_over_five_five_mphkm1 != $distance_over_five_five_mphkm2 -> #fail. 

        
            e10: clean(device_id: $device_id1, trip_id: $trip_id1, epoch_start_time: $epoch_start_time1, start_date: $start_date1, start_time: $start_time1, epoch_end_time: $epoch_end_time1, end_date: $end_date1, end_time: $end_time1, total_trip_distancekm: $total_trip_distancekm1, distance_over_two_five_mphkm: $distance_over_two_five_mphkm1, distance_over_five_five_mphkm: $distance_over_five_five_mphkm1, trip_durations: $trip_durations1, average_speedms: $average_speedms1, maximum_speedms: $maximum_speedms1, brake_count: $brake_count1, wiper_activated: $wiper_activated1),
            clean(device_id: $device_id2, trip_id: $trip_id2, epoch_start_time: $epoch_start_time2, start_date: $start_date2, start_time: $start_time2, epoch_end_time: $epoch_end_time2, end_date: $end_date2, end_time: $end_time2, total_trip_distancekm: $total_trip_distancekm2, distance_over_two_five_mphkm: $distance_over_two_five_mphkm2, distance_over_five_five_mphkm: $distance_over_five_five_mphkm2, trip_durations: $trip_durations2, average_speedms: $average_speedms2, maximum_speedms: $maximum_speedms2, brake_count: $brake_count2, wiper_activated: $wiper_activated2),
                $total_trip_distancekm1 == $total_trip_distancekm2, $trip_id1 != $trip_id2 -> #fail. 

        
            e11: clean(device_id: $device_id1, trip_id: $trip_id1, epoch_start_time: $epoch_start_time1, start_date: $start_date1, start_time: $start_time1, epoch_end_time: $epoch_end_time1, end_date: $end_date1, end_time: $end_time1, total_trip_distancekm: $total_trip_distancekm1, distance_over_two_five_mphkm: $distance_over_two_five_mphkm1, distance_over_five_five_mphkm: $distance_over_five_five_mphkm1, trip_durations: $trip_durations1, average_speedms: $average_speedms1, maximum_speedms: $maximum_speedms1, brake_count: $brake_count1, wiper_activated: $wiper_activated1),
            clean(device_id: $device_id2, trip_id: $trip_id2, epoch_start_time: $epoch_start_time2, start_date: $start_date2, start_time: $start_time2, epoch_end_time: $epoch_end_time2, end_date: $end_date2, end_time: $end_time2, total_trip_distancekm: $total_trip_distancekm2, distance_over_two_five_mphkm: $distance_over_two_five_mphkm2, distance_over_five_five_mphkm: $distance_over_five_five_mphkm2, trip_durations: $trip_durations2, average_speedms: $average_speedms2, maximum_speedms: $maximum_speedms2, brake_count: $brake_count2, wiper_activated: $wiper_activated2),
                $total_trip_distancekm1 == $total_trip_distancekm2, $brake_count1 != $brake_count2 -> #fail. 

        
            e12: clean(device_id: $device_id1, trip_id: $trip_id1, epoch_start_time: $epoch_start_time1, start_date: $start_date1, start_time: $start_time1, epoch_end_time: $epoch_end_time1, end_date: $end_date1, end_time: $end_time1, total_trip_distancekm: $total_trip_distancekm1, distance_over_two_five_mphkm: $distance_over_two_five_mphkm1, distance_over_five_five_mphkm: $distance_over_five_five_mphkm1, trip_durations: $trip_durations1, average_speedms: $average_speedms1, maximum_speedms: $maximum_speedms1, brake_count: $brake_count1, wiper_activated: $wiper_activated1),
            clean(device_id: $device_id2, trip_id: $trip_id2, epoch_start_time: $epoch_start_time2, start_date: $start_date2, start_time: $start_time2, epoch_end_time: $epoch_end_time2, end_date: $end_date2, end_time: $end_time2, total_trip_distancekm: $total_trip_distancekm2, distance_over_two_five_mphkm: $distance_over_two_five_mphkm2, distance_over_five_five_mphkm: $distance_over_five_five_mphkm2, trip_durations: $trip_durations2, average_speedms: $average_speedms2, maximum_speedms: $maximum_speedms2, brake_count: $brake_count2, wiper_activated: $wiper_activated2),
                $total_trip_distancekm1 == $total_trip_distancekm2, $device_id1 != $device_id2 -> #fail. 

        
            e13: clean(device_id: $device_id1, trip_id: $trip_id1, epoch_start_time: $epoch_start_time1, start_date: $start_date1, start_time: $start_time1, epoch_end_time: $epoch_end_time1, end_date: $end_date1, end_time: $end_time1, total_trip_distancekm: $total_trip_distancekm1, distance_over_two_five_mphkm: $distance_over_two_five_mphkm1, distance_over_five_five_mphkm: $distance_over_five_five_mphkm1, trip_durations: $trip_durations1, average_speedms: $average_speedms1, maximum_speedms: $maximum_speedms1, brake_count: $brake_count1, wiper_activated: $wiper_activated1),
            clean(device_id: $device_id2, trip_id: $trip_id2, epoch_start_time: $epoch_start_time2, start_date: $start_date2, start_time: $start_time2, epoch_end_time: $epoch_end_time2, end_date: $end_date2, end_time: $end_time2, total_trip_distancekm: $total_trip_distancekm2, distance_over_two_five_mphkm: $distance_over_two_five_mphkm2, distance_over_five_five_mphkm: $distance_over_five_five_mphkm2, trip_durations: $trip_durations2, average_speedms: $average_speedms2, maximum_speedms: $maximum_speedms2, brake_count: $brake_count2, wiper_activated: $wiper_activated2),
                $total_trip_distancekm1 == $total_trip_distancekm2, $start_date1 != $start_date2 -> #fail. 

        
            e14: clean(device_id: $device_id1, trip_id: $trip_id1, epoch_start_time: $epoch_start_time1, start_date: $start_date1, start_time: $start_time1, epoch_end_time: $epoch_end_time1, end_date: $end_date1, end_time: $end_time1, total_trip_distancekm: $total_trip_distancekm1, distance_over_two_five_mphkm: $distance_over_two_five_mphkm1, distance_over_five_five_mphkm: $distance_over_five_five_mphkm1, trip_durations: $trip_durations1, average_speedms: $average_speedms1, maximum_speedms: $maximum_speedms1, brake_count: $brake_count1, wiper_activated: $wiper_activated1),
            clean(device_id: $device_id2, trip_id: $trip_id2, epoch_start_time: $epoch_start_time2, start_date: $start_date2, start_time: $start_time2, epoch_end_time: $epoch_end_time2, end_date: $end_date2, end_time: $end_time2, total_trip_distancekm: $total_trip_distancekm2, distance_over_two_five_mphkm: $distance_over_two_five_mphkm2, distance_over_five_five_mphkm: $distance_over_five_five_mphkm2, trip_durations: $trip_durations2, average_speedms: $average_speedms2, maximum_speedms: $maximum_speedms2, brake_count: $brake_count2, wiper_activated: $wiper_activated2),
                $total_trip_distancekm1 == $total_trip_distancekm2, $end_date1 != $end_date2 -> #fail. 

        
            e15: clean(device_id: $device_id1, trip_id: $trip_id1, epoch_start_time: $epoch_start_time1, start_date: $start_date1, start_time: $start_time1, epoch_end_time: $epoch_end_time1, end_date: $end_date1, end_time: $end_time1, total_trip_distancekm: $total_trip_distancekm1, distance_over_two_five_mphkm: $distance_over_two_five_mphkm1, distance_over_five_five_mphkm: $distance_over_five_five_mphkm1, trip_durations: $trip_durations1, average_speedms: $average_speedms1, maximum_speedms: $maximum_speedms1, brake_count: $brake_count1, wiper_activated: $wiper_activated1),
            clean(device_id: $device_id2, trip_id: $trip_id2, epoch_start_time: $epoch_start_time2, start_date: $start_date2, start_time: $start_time2, epoch_end_time: $epoch_end_time2, end_date: $end_date2, end_time: $end_time2, total_trip_distancekm: $total_trip_distancekm2, distance_over_two_five_mphkm: $distance_over_two_five_mphkm2, distance_over_five_five_mphkm: $distance_over_five_five_mphkm2, trip_durations: $trip_durations2, average_speedms: $average_speedms2, maximum_speedms: $maximum_speedms2, brake_count: $brake_count2, wiper_activated: $wiper_activated2),
                $average_speedms1 == $average_speedms2, $trip_durations1 != $trip_durations2 -> #fail. 

        
            e16: clean(device_id: $device_id1, trip_id: $trip_id1, epoch_start_time: $epoch_start_time1, start_date: $start_date1, start_time: $start_time1, epoch_end_time: $epoch_end_time1, end_date: $end_date1, end_time: $end_time1, total_trip_distancekm: $total_trip_distancekm1, distance_over_two_five_mphkm: $distance_over_two_five_mphkm1, distance_over_five_five_mphkm: $distance_over_five_five_mphkm1, trip_durations: $trip_durations1, average_speedms: $average_speedms1, maximum_speedms: $maximum_speedms1, brake_count: $brake_count1, wiper_activated: $wiper_activated1),
            clean(device_id: $device_id2, trip_id: $trip_id2, epoch_start_time: $epoch_start_time2, start_date: $start_date2, start_time: $start_time2, epoch_end_time: $epoch_end_time2, end_date: $end_date2, end_time: $end_time2, total_trip_distancekm: $total_trip_distancekm2, distance_over_two_five_mphkm: $distance_over_two_five_mphkm2, distance_over_five_five_mphkm: $distance_over_five_five_mphkm2, trip_durations: $trip_durations2, average_speedms: $average_speedms2, maximum_speedms: $maximum_speedms2, brake_count: $brake_count2, wiper_activated: $wiper_activated2),
                $average_speedms1 == $average_speedms2, $distance_over_five_five_mphkm1 != $distance_over_five_five_mphkm2 -> #fail. 

        
            e17: clean(device_id: $device_id1, trip_id: $trip_id1, epoch_start_time: $epoch_start_time1, start_date: $start_date1, start_time: $start_time1, epoch_end_time: $epoch_end_time1, end_date: $end_date1, end_time: $end_time1, total_trip_distancekm: $total_trip_distancekm1, distance_over_two_five_mphkm: $distance_over_two_five_mphkm1, distance_over_five_five_mphkm: $distance_over_five_five_mphkm1, trip_durations: $trip_durations1, average_speedms: $average_speedms1, maximum_speedms: $maximum_speedms1, brake_count: $brake_count1, wiper_activated: $wiper_activated1),
            clean(device_id: $device_id2, trip_id: $trip_id2, epoch_start_time: $epoch_start_time2, start_date: $start_date2, start_time: $start_time2, epoch_end_time: $epoch_end_time2, end_date: $end_date2, end_time: $end_time2, total_trip_distancekm: $total_trip_distancekm2, distance_over_two_five_mphkm: $distance_over_two_five_mphkm2, distance_over_five_five_mphkm: $distance_over_five_five_mphkm2, trip_durations: $trip_durations2, average_speedms: $average_speedms2, maximum_speedms: $maximum_speedms2, brake_count: $brake_count2, wiper_activated: $wiper_activated2),
                $average_speedms1 == $average_speedms2, $brake_count1 != $brake_count2 -> #fail. 

        
            e18: clean(device_id: $device_id1, trip_id: $trip_id1, epoch_start_time: $epoch_start_time1, start_date: $start_date1, start_time: $start_time1, epoch_end_time: $epoch_end_time1, end_date: $end_date1, end_time: $end_time1, total_trip_distancekm: $total_trip_distancekm1, distance_over_two_five_mphkm: $distance_over_two_five_mphkm1, distance_over_five_five_mphkm: $distance_over_five_five_mphkm1, trip_durations: $trip_durations1, average_speedms: $average_speedms1, maximum_speedms: $maximum_speedms1, brake_count: $brake_count1, wiper_activated: $wiper_activated1),
            clean(device_id: $device_id2, trip_id: $trip_id2, epoch_start_time: $epoch_start_time2, start_date: $start_date2, start_time: $start_time2, epoch_end_time: $epoch_end_time2, end_date: $end_date2, end_time: $end_time2, total_trip_distancekm: $total_trip_distancekm2, distance_over_two_five_mphkm: $distance_over_two_five_mphkm2, distance_over_five_five_mphkm: $distance_over_five_five_mphkm2, trip_durations: $trip_durations2, average_speedms: $average_speedms2, maximum_speedms: $maximum_speedms2, brake_count: $brake_count2, wiper_activated: $wiper_activated2),
                $epoch_end_time1 == $epoch_end_time2, $end_time1 != $end_time2 -> #fail. 

        
            e19: clean(device_id: $device_id1, trip_id: $trip_id1, epoch_start_time: $epoch_start_time1, start_date: $start_date1, start_time: $start_time1, epoch_end_time: $epoch_end_time1, end_date: $end_date1, end_time: $end_time1, total_trip_distancekm: $total_trip_distancekm1, distance_over_two_five_mphkm: $distance_over_two_five_mphkm1, distance_over_five_five_mphkm: $distance_over_five_five_mphkm1, trip_durations: $trip_durations1, average_speedms: $average_speedms1, maximum_speedms: $maximum_speedms1, brake_count: $brake_count1, wiper_activated: $wiper_activated1),
            clean(device_id: $device_id2, trip_id: $trip_id2, epoch_start_time: $epoch_start_time2, start_date: $start_date2, start_time: $start_time2, epoch_end_time: $epoch_end_time2, end_date: $end_date2, end_time: $end_time2, total_trip_distancekm: $total_trip_distancekm2, distance_over_two_five_mphkm: $distance_over_two_five_mphkm2, distance_over_five_five_mphkm: $distance_over_five_five_mphkm2, trip_durations: $trip_durations2, average_speedms: $average_speedms2, maximum_speedms: $maximum_speedms2, brake_count: $brake_count2, wiper_activated: $wiper_activated2),
                $epoch_end_time1 == $epoch_end_time2, $start_date1 != $start_date2 -> #fail. 

        
            e20: clean(device_id: $device_id1, trip_id: $trip_id1, epoch_start_time: $epoch_start_time1, start_date: $start_date1, start_time: $start_time1, epoch_end_time: $epoch_end_time1, end_date: $end_date1, end_time: $end_time1, total_trip_distancekm: $total_trip_distancekm1, distance_over_two_five_mphkm: $distance_over_two_five_mphkm1, distance_over_five_five_mphkm: $distance_over_five_five_mphkm1, trip_durations: $trip_durations1, average_speedms: $average_speedms1, maximum_speedms: $maximum_speedms1, brake_count: $brake_count1, wiper_activated: $wiper_activated1),
            clean(device_id: $device_id2, trip_id: $trip_id2, epoch_start_time: $epoch_start_time2, start_date: $start_date2, start_time: $start_time2, epoch_end_time: $epoch_end_time2, end_date: $end_date2, end_time: $end_time2, total_trip_distancekm: $total_trip_distancekm2, distance_over_two_five_mphkm: $distance_over_two_five_mphkm2, distance_over_five_five_mphkm: $distance_over_five_five_mphkm2, trip_durations: $trip_durations2, average_speedms: $average_speedms2, maximum_speedms: $maximum_speedms2, brake_count: $brake_count2, wiper_activated: $wiper_activated2),
                $epoch_end_time1 == $epoch_end_time2, $end_date1 != $end_date2 -> #fail. 

        
            e21: clean(device_id: $device_id1, trip_id: $trip_id1, epoch_start_time: $epoch_start_time1, start_date: $start_date1, start_time: $start_time1, epoch_end_time: $epoch_end_time1, end_date: $end_date1, end_time: $end_time1, total_trip_distancekm: $total_trip_distancekm1, distance_over_two_five_mphkm: $distance_over_two_five_mphkm1, distance_over_five_five_mphkm: $distance_over_five_five_mphkm1, trip_durations: $trip_durations1, average_speedms: $average_speedms1, maximum_speedms: $maximum_speedms1, brake_count: $brake_count1, wiper_activated: $wiper_activated1),
            clean(device_id: $device_id2, trip_id: $trip_id2, epoch_start_time: $epoch_start_time2, start_date: $start_date2, start_time: $start_time2, epoch_end_time: $epoch_end_time2, end_date: $end_date2, end_time: $end_time2, total_trip_distancekm: $total_trip_distancekm2, distance_over_two_five_mphkm: $distance_over_two_five_mphkm2, distance_over_five_five_mphkm: $distance_over_five_five_mphkm2, trip_durations: $trip_durations2, average_speedms: $average_speedms2, maximum_speedms: $maximum_speedms2, brake_count: $brake_count2, wiper_activated: $wiper_activated2),
                $epoch_start_time1 == $epoch_start_time2, $start_time1 != $start_time2 -> #fail. 

        
            e22: clean(device_id: $device_id1, trip_id: $trip_id1, epoch_start_time: $epoch_start_time1, start_date: $start_date1, start_time: $start_time1, epoch_end_time: $epoch_end_time1, end_date: $end_date1, end_time: $end_time1, total_trip_distancekm: $total_trip_distancekm1, distance_over_two_five_mphkm: $distance_over_two_five_mphkm1, distance_over_five_five_mphkm: $distance_over_five_five_mphkm1, trip_durations: $trip_durations1, average_speedms: $average_speedms1, maximum_speedms: $maximum_speedms1, brake_count: $brake_count1, wiper_activated: $wiper_activated1),
            clean(device_id: $device_id2, trip_id: $trip_id2, epoch_start_time: $epoch_start_time2, start_date: $start_date2, start_time: $start_time2, epoch_end_time: $epoch_end_time2, end_date: $end_date2, end_time: $end_time2, total_trip_distancekm: $total_trip_distancekm2, distance_over_two_five_mphkm: $distance_over_two_five_mphkm2, distance_over_five_five_mphkm: $distance_over_five_five_mphkm2, trip_durations: $trip_durations2, average_speedms: $average_speedms2, maximum_speedms: $maximum_speedms2, brake_count: $brake_count2, wiper_activated: $wiper_activated2),
                $epoch_start_time1 == $epoch_start_time2, $start_date1 != $start_date2 -> #fail. 

        
            e23: clean(device_id: $device_id1, trip_id: $trip_id1, epoch_start_time: $epoch_start_time1, start_date: $start_date1, start_time: $start_time1, epoch_end_time: $epoch_end_time1, end_date: $end_date1, end_time: $end_time1, total_trip_distancekm: $total_trip_distancekm1, distance_over_two_five_mphkm: $distance_over_two_five_mphkm1, distance_over_five_five_mphkm: $distance_over_five_five_mphkm1, trip_durations: $trip_durations1, average_speedms: $average_speedms1, maximum_speedms: $maximum_speedms1, brake_count: $brake_count1, wiper_activated: $wiper_activated1),
            clean(device_id: $device_id2, trip_id: $trip_id2, epoch_start_time: $epoch_start_time2, start_date: $start_date2, start_time: $start_time2, epoch_end_time: $epoch_end_time2, end_date: $end_date2, end_time: $end_time2, total_trip_distancekm: $total_trip_distancekm2, distance_over_two_five_mphkm: $distance_over_two_five_mphkm2, distance_over_five_five_mphkm: $distance_over_five_five_mphkm2, trip_durations: $trip_durations2, average_speedms: $average_speedms2, maximum_speedms: $maximum_speedms2, brake_count: $brake_count2, wiper_activated: $wiper_activated2),
                $epoch_start_time1 == $epoch_start_time2, $end_date1 != $end_date2 -> #fail. 

        ]]></dependencies>

    <!-- ****************************************************
                      CONFIGURATION
    **************************************************** -->
    <configuration>
        <!-- To print extra information in the ouput (default = false) -->
        <printLog>true</printLog>

        <!-- To load DB every time on start (default = false) -->
        <recreateDBOnStart>true</recreateDBOnStart>

        <!-- To apply the changes (default = false) -->
        <applyCellChanges>true</applyCellChanges>

        <!-- To  apply cell changes on a copy of the original target, with a custom suffix (default = true) -->
        <cloneTargetSchema>true</cloneTargetSchema>
        <cloneSuffix>_dirty</cloneSuffix>

        <!-- To export the dirty db -->
        <exportDirtyDB>true</exportDirtyDB>
        <exportDirtyDBPath>./</exportDirtyDBPath>
        <exportDirtyDBType>CSV</exportDirtyDBType>

        <!-- To export the changes -->
        <exportCellChanges>true</exportCellChanges>
        <exportCellChangesPath>clean_changes.csv</exportCellChangesPath>

        <!-- To compute an estimate of the reparability (default = false) -->
        <estimateRepairability>true</estimateRepairability>

        <!-- To generate all possible changes (default = false - slow, only for toy examples)-->
        <generateAllChanges>false</generateAllChanges>

        <!-- To avoid interactions among changes. (default = true) -->
        <avoidInteractions>true</avoidInteractions>

        <!-- To check, at the end of the process, if changes are detectable. (default = false) -->
        <checkChanges>true</checkChanges>

        <!-- To compute an estimate of the repairability. Requires checkChanges = true. (default = false) -->
        <estimateRepairability>true</estimateRepairability>

        <!-- To use an optimized strategy for updates. (default = true) -->
        <useDeltaDBForChanges>true</useDeltaDBForChanges>

        <!-- Error percentages for dependencies and comparisons 
        All percentages are wrt table sizes (# tuples) -->
        <errorPercentages>
            <defaultPercentage>0.0</defaultPercentage>
            <vioGenQueries>
            <vioGenQuery id="e1"><comparison>(total_trip_distancekm1 == total_trip_distancekm2)</comparison><percentage>0.05025125628140704</percentage></vioGenQuery><vioGenQuery id="e1"><comparison>(average_speedms1 != average_speedms2)</comparison><percentage>0.05025125628140704</percentage></vioGenQuery><vioGenQuery id="e2"><comparison>(total_trip_distancekm1 == total_trip_distancekm2)</comparison><percentage>0.05025125628140704</percentage></vioGenQuery><vioGenQuery id="e2"><comparison>(epoch_end_time1 != epoch_end_time2)</comparison><percentage>0.05025125628140704</percentage></vioGenQuery><vioGenQuery id="e3"><comparison>(total_trip_distancekm1 == total_trip_distancekm2)</comparison><percentage>0.05025125628140704</percentage></vioGenQuery><vioGenQuery id="e3"><comparison>(epoch_start_time1 != epoch_start_time2)</comparison><percentage>0.05025125628140704</percentage></vioGenQuery><vioGenQuery id="e4"><comparison>(total_trip_distancekm1 == total_trip_distancekm2)</comparison><percentage>0.05025125628140704</percentage></vioGenQuery><vioGenQuery id="e4"><comparison>(distance_over_two_five_mphkm1 != distance_over_two_five_mphkm2)</comparison><percentage>0.05025125628140704</percentage></vioGenQuery><vioGenQuery id="e5"><comparison>(total_trip_distancekm1 == total_trip_distancekm2)</comparison><percentage>0.05025125628140704</percentage></vioGenQuery><vioGenQuery id="e5"><comparison>(end_time1 != end_time2)</comparison><percentage>0.05025125628140704</percentage></vioGenQuery><vioGenQuery id="e6"><comparison>(total_trip_distancekm1 == total_trip_distancekm2)</comparison><percentage>0.05025125628140704</percentage></vioGenQuery><vioGenQuery id="e6"><comparison>(start_time1 != start_time2)</comparison><percentage>0.05025125628140704</percentage></vioGenQuery><vioGenQuery id="e7"><comparison>(total_trip_distancekm1 == total_trip_distancekm2)</comparison><percentage>0.05025125628140704</percentage></vioGenQuery><vioGenQuery id="e7"><comparison>(trip_durations1 != trip_durations2)</comparison><percentage>0.05025125628140704</percentage></vioGenQuery><vioGenQuery id="e8"><comparison>(total_trip_distancekm1 == total_trip_distancekm2)</comparison><percentage>0.05025125628140704</percentage></vioGenQuery><vioGenQuery id="e8"><comparison>(maximum_speedms1 != maximum_speedms2)</comparison><percentage>0.05025125628140704</percentage></vioGenQuery><vioGenQuery id="e9"><comparison>(total_trip_distancekm1 == total_trip_distancekm2)</comparison><percentage>0.05025125628140704</percentage></vioGenQuery><vioGenQuery id="e9"><comparison>(distance_over_five_five_mphkm1 != distance_over_five_five_mphkm2)</comparison><percentage>0.05025125628140704</percentage></vioGenQuery><vioGenQuery id="e10"><comparison>(total_trip_distancekm1 == total_trip_distancekm2)</comparison><percentage>0.05025125628140704</percentage></vioGenQuery><vioGenQuery id="e10"><comparison>(trip_id1 != trip_id2)</comparison><percentage>0.05025125628140704</percentage></vioGenQuery><vioGenQuery id="e11"><comparison>(total_trip_distancekm1 == total_trip_distancekm2)</comparison><percentage>0.05025125628140704</percentage></vioGenQuery><vioGenQuery id="e11"><comparison>(brake_count1 != brake_count2)</comparison><percentage>0.05025125628140704</percentage></vioGenQuery><vioGenQuery id="e12"><comparison>(total_trip_distancekm1 == total_trip_distancekm2)</comparison><percentage>0.03768844221105528</percentage></vioGenQuery><vioGenQuery id="e12"><comparison>(device_id1 != device_id2)</comparison><percentage>0.03768844221105528</percentage></vioGenQuery><vioGenQuery id="e13"><comparison>(total_trip_distancekm1 == total_trip_distancekm2)</comparison><percentage>0.03768844221105528</percentage></vioGenQuery><vioGenQuery id="e13"><comparison>(start_date1 != start_date2)</comparison><percentage>0.03768844221105528</percentage></vioGenQuery><vioGenQuery id="e14"><comparison>(total_trip_distancekm1 == total_trip_distancekm2)</comparison><percentage>0.03768844221105528</percentage></vioGenQuery><vioGenQuery id="e14"><comparison>(end_date1 != end_date2)</comparison><percentage>0.03768844221105528</percentage></vioGenQuery><vioGenQuery id="e15"><comparison>(average_speedms1 == average_speedms2)</comparison><percentage>0.03768844221105528</percentage></vioGenQuery><vioGenQuery id="e15"><comparison>(trip_durations1 != trip_durations2)</comparison><percentage>0.03768844221105528</percentage></vioGenQuery><vioGenQuery id="e16"><comparison>(average_speedms1 == average_speedms2)</comparison><percentage>0.03768844221105528</percentage></vioGenQuery><vioGenQuery id="e16"><comparison>(distance_over_five_five_mphkm1 != distance_over_five_five_mphkm2)</comparison><percentage>0.03768844221105528</percentage></vioGenQuery><vioGenQuery id="e17"><comparison>(average_speedms1 == average_speedms2)</comparison><percentage>0.03768844221105528</percentage></vioGenQuery><vioGenQuery id="e17"><comparison>(brake_count1 != brake_count2)</comparison><percentage>0.03768844221105528</percentage></vioGenQuery><vioGenQuery id="e18"><comparison>(epoch_end_time1 == epoch_end_time2)</comparison><percentage>0.03768844221105528</percentage></vioGenQuery><vioGenQuery id="e18"><comparison>(end_time1 != end_time2)</comparison><percentage>0.03768844221105528</percentage></vioGenQuery><vioGenQuery id="e19"><comparison>(epoch_end_time1 == epoch_end_time2)</comparison><percentage>0.03768844221105528</percentage></vioGenQuery><vioGenQuery id="e19"><comparison>(start_date1 != start_date2)</comparison><percentage>0.03768844221105528</percentage></vioGenQuery><vioGenQuery id="e20"><comparison>(epoch_end_time1 == epoch_end_time2)</comparison><percentage>0.03768844221105528</percentage></vioGenQuery><vioGenQuery id="e20"><comparison>(end_date1 != end_date2)</comparison><percentage>0.03768844221105528</percentage></vioGenQuery><vioGenQuery id="e21"><comparison>(epoch_start_time1 == epoch_start_time2)</comparison><percentage>0.03768844221105528</percentage></vioGenQuery><vioGenQuery id="e21"><comparison>(start_time1 != start_time2)</comparison><percentage>0.03768844221105528</percentage></vioGenQuery><vioGenQuery id="e22"><comparison>(epoch_start_time1 == epoch_start_time2)</comparison><percentage>0.03768844221105528</percentage></vioGenQuery><vioGenQuery id="e22"><comparison>(start_date1 != start_date2)</comparison><percentage>0.03768844221105528</percentage></vioGenQuery><vioGenQuery id="e23"><comparison>(epoch_start_time1 == epoch_start_time2)</comparison><percentage>0.03768844221105528</percentage></vioGenQuery><vioGenQuery id="e23"><comparison>(end_date1 != end_date2)</comparison><percentage>0.03768844221105528</percentage></vioGenQuery></vioGenQueries>
        </errorPercentages>

        <!-- To control the way in which changing the value -->
        <dirtyStrategies>
            <defaultStrategy>
                <strategy> TypoRandom </strategy>
            </defaultStrategy> 
            <!-- possible strategies
                <strategy chars="*" charsToAdd="3">TypoAddString</strategy>
                <strategy chars="*" charsToAdd="3">TypoAppendString</strategy>
                <strategy charsToRemove="3">TypoRemoveString</strategy>
                <strategy charsToSwitch="3">TypoSwitchValue</strategy>
                <strategy>TypoActiveDomain</strategy>
                <strategy>TypoRandom</strategy>
            -->
        </dirtyStrategies>

        <randomErrors>
            <tables>
                <table name="clean"> 
                    <percentage>2</percentage> <!-- Percentage is wrt attributes to dirty in the table -->
                    <attributes>
                    <atrribute>start_date</atrribute><atrribute>start_time</atrribute><atrribute>end_date</atrribute><atrribute>end_time</atrribute><atrribute>wiper_activated</atrribute></attributes>
                </table>
            </tables>
        </randomErrors>
    
        <outlierErrors>
            <tables>
                <table name="clean">
                    <attributes>
                    <atrribute percentage="0" detectable="true">device_id</atrribute><atrribute percentage="0" detectable="true">trip_id</atrribute><atrribute percentage="0" detectable="true">epoch_start_time</atrribute><atrribute percentage="0" detectable="true">epoch_end_time</atrribute><atrribute percentage="0" detectable="true">total_trip_distancekm</atrribute><atrribute percentage="0" detectable="true">distance_over_two_five_mphkm</atrribute><atrribute percentage="0" detectable="true">distance_over_five_five_mphkm</atrribute><atrribute percentage="0" detectable="true">trip_durations</atrribute><atrribute percentage="0" detectable="true">average_speedms</atrribute><atrribute percentage="0" detectable="true">maximum_speedms</atrribute><atrribute percentage="0" detectable="true">brake_count</atrribute></attributes>
                </table>
            </tables>
        </outlierErrors>
        
        <!-- The following parameters are used to control the sampling process.
            All the fields are optional, but they may be crucial to obtain a good random sample.
            In order to choose the cells to modify, BART will scan the result of a viogen query
            using the following sampling algorithm:
            1) First, a number of tuples are skipped. This is a random number choosed btw 
                0 and (offsetFactor * tableSize)
            2) Then BART will scan the result and will pickup tuples 
            with a probability p = probabilityFactor.
            
            BART uses three kinds of queries
            - Symmetric queries: for symmetric viogen queries (see paper)
            - Inequality queries: for viogen queries without equalities (i.e. inequalities only)
            - Standard queries: for all other viogen queries
        -->
        <vioGenQueriesConfiguration>
            <!-- STANDARD QUERIES -->
            <probabilityFactorForStandardQueries>0.25</probabilityFactorForStandardQueries>
            <offsetFactorForStandardQueries>0.05</offsetFactorForStandardQueries>
            <!-- SYMMETRIC QUERIES -->
            <probabilityFactorForSymmetricQueries>0.25</probabilityFactorForSymmetricQueries>
            <offsetFactorForSymmetricQueries>0.05</offsetFactorForSymmetricQueries>
            <!-- INEQUALITY QUERIES -->
            <probabilityFactorForInequalityQueries>0.05</probabilityFactorForInequalityQueries>
            <offsetFactorForInequalityQueries>0.05</offsetFactorForInequalityQueries>
            <windowSizeFactorForInequalityQueries>1.5</windowSizeFactorForInequalityQueries>
        </vioGenQueriesConfiguration>

    </configuration>
</task>