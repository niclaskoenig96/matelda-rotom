<task>
    <!-- ****************************************************
                      DATABASES
    **************************************************** -->
    <target> 
        <type>DBMS</type>
        <access-configuration>
            <driver>org.postgresql.Driver</driver>
            <uri>jdbc:postgresql://localhost:5433/bartdb</uri>
            <schema>target</schema>
            <login>postgres</login>
            <password>postgres</password>
        </access-configuration>
        <import>
            <input type="csv" separator="," table="clean">/home/fatemeh/ED-Scale/Sandbox_Generation/metanome_input_files/processed/Weather_Data_April_01_31_2013/clean.csv</input>
        </import>
    </target>

    <!-- ****************************************************
                    DEPENDENCIES
    **************************************************** -->
    <dependencies><![CDATA[DCs: 

            e1: clean(usaf: $usaf1, wban: $wban1, yrmodahrmn: $yrmodahrmn1, dir: $dir1, spd: $spd1, gus: $gus1, clg: $clg1, skc: $skc1, l: $l1, m: $m1, h: $h1, vsb: $vsb1, mw: $mw1, mw_one: $mw_one1, mw_two: $mw_two1, mw_three: $mw_three1, aw: $aw1, aw_one: $aw_one1, aw_two: $aw_two1, aw_three: $aw_three1, w: $w1, temp: $temp1, dewp: $dewp1, slp: $slp1, alt: $alt1, stp: $stp1, max: $max1, min: $min1, pcp_zero_one: $pcp_zero_one1, pcp_zero_six: $pcp_zero_six1, pcp_two_four: $pcp_two_four1, pcpxx: $pcpxx1, sd: $sd1),
            clean(usaf: $usaf2, wban: $wban2, yrmodahrmn: $yrmodahrmn2, dir: $dir2, spd: $spd2, gus: $gus2, clg: $clg2, skc: $skc2, l: $l2, m: $m2, h: $h2, vsb: $vsb2, mw: $mw2, mw_one: $mw_one2, mw_two: $mw_two2, mw_three: $mw_three2, aw: $aw2, aw_one: $aw_one2, aw_two: $aw_two2, aw_three: $aw_three2, w: $w2, temp: $temp2, dewp: $dewp2, slp: $slp2, alt: $alt2, stp: $stp2, max: $max2, min: $min2, pcp_zero_one: $pcp_zero_one2, pcp_zero_six: $pcp_zero_six2, pcp_two_four: $pcp_two_four2, pcpxx: $pcpxx2, sd: $sd2),
                $wban1 == $wban2, $dewp1 != $dewp2 -> #fail. 

        
            e2: clean(usaf: $usaf1, wban: $wban1, yrmodahrmn: $yrmodahrmn1, dir: $dir1, spd: $spd1, gus: $gus1, clg: $clg1, skc: $skc1, l: $l1, m: $m1, h: $h1, vsb: $vsb1, mw: $mw1, mw_one: $mw_one1, mw_two: $mw_two1, mw_three: $mw_three1, aw: $aw1, aw_one: $aw_one1, aw_two: $aw_two1, aw_three: $aw_three1, w: $w1, temp: $temp1, dewp: $dewp1, slp: $slp1, alt: $alt1, stp: $stp1, max: $max1, min: $min1, pcp_zero_one: $pcp_zero_one1, pcp_zero_six: $pcp_zero_six1, pcp_two_four: $pcp_two_four1, pcpxx: $pcpxx1, sd: $sd1),
            clean(usaf: $usaf2, wban: $wban2, yrmodahrmn: $yrmodahrmn2, dir: $dir2, spd: $spd2, gus: $gus2, clg: $clg2, skc: $skc2, l: $l2, m: $m2, h: $h2, vsb: $vsb2, mw: $mw2, mw_one: $mw_one2, mw_two: $mw_two2, mw_three: $mw_three2, aw: $aw2, aw_one: $aw_one2, aw_two: $aw_two2, aw_three: $aw_three2, w: $w2, temp: $temp2, dewp: $dewp2, slp: $slp2, alt: $alt2, stp: $stp2, max: $max2, min: $min2, pcp_zero_one: $pcp_zero_one2, pcp_zero_six: $pcp_zero_six2, pcp_two_four: $pcp_two_four2, pcpxx: $pcpxx2, sd: $sd2),
                $wban1 == $wban2, $slp1 != $slp2 -> #fail. 

        
            e3: clean(usaf: $usaf1, wban: $wban1, yrmodahrmn: $yrmodahrmn1, dir: $dir1, spd: $spd1, gus: $gus1, clg: $clg1, skc: $skc1, l: $l1, m: $m1, h: $h1, vsb: $vsb1, mw: $mw1, mw_one: $mw_one1, mw_two: $mw_two1, mw_three: $mw_three1, aw: $aw1, aw_one: $aw_one1, aw_two: $aw_two1, aw_three: $aw_three1, w: $w1, temp: $temp1, dewp: $dewp1, slp: $slp1, alt: $alt1, stp: $stp1, max: $max1, min: $min1, pcp_zero_one: $pcp_zero_one1, pcp_zero_six: $pcp_zero_six1, pcp_two_four: $pcp_two_four1, pcpxx: $pcpxx1, sd: $sd1),
            clean(usaf: $usaf2, wban: $wban2, yrmodahrmn: $yrmodahrmn2, dir: $dir2, spd: $spd2, gus: $gus2, clg: $clg2, skc: $skc2, l: $l2, m: $m2, h: $h2, vsb: $vsb2, mw: $mw2, mw_one: $mw_one2, mw_two: $mw_two2, mw_three: $mw_three2, aw: $aw2, aw_one: $aw_one2, aw_two: $aw_two2, aw_three: $aw_three2, w: $w2, temp: $temp2, dewp: $dewp2, slp: $slp2, alt: $alt2, stp: $stp2, max: $max2, min: $min2, pcp_zero_one: $pcp_zero_one2, pcp_zero_six: $pcp_zero_six2, pcp_two_four: $pcp_two_four2, pcpxx: $pcpxx2, sd: $sd2),
                $wban1 == $wban2, $alt1 != $alt2 -> #fail. 

        
            e4: clean(usaf: $usaf1, wban: $wban1, yrmodahrmn: $yrmodahrmn1, dir: $dir1, spd: $spd1, gus: $gus1, clg: $clg1, skc: $skc1, l: $l1, m: $m1, h: $h1, vsb: $vsb1, mw: $mw1, mw_one: $mw_one1, mw_two: $mw_two1, mw_three: $mw_three1, aw: $aw1, aw_one: $aw_one1, aw_two: $aw_two1, aw_three: $aw_three1, w: $w1, temp: $temp1, dewp: $dewp1, slp: $slp1, alt: $alt1, stp: $stp1, max: $max1, min: $min1, pcp_zero_one: $pcp_zero_one1, pcp_zero_six: $pcp_zero_six1, pcp_two_four: $pcp_two_four1, pcpxx: $pcpxx1, sd: $sd1),
            clean(usaf: $usaf2, wban: $wban2, yrmodahrmn: $yrmodahrmn2, dir: $dir2, spd: $spd2, gus: $gus2, clg: $clg2, skc: $skc2, l: $l2, m: $m2, h: $h2, vsb: $vsb2, mw: $mw2, mw_one: $mw_one2, mw_two: $mw_two2, mw_three: $mw_three2, aw: $aw2, aw_one: $aw_one2, aw_two: $aw_two2, aw_three: $aw_three2, w: $w2, temp: $temp2, dewp: $dewp2, slp: $slp2, alt: $alt2, stp: $stp2, max: $max2, min: $min2, pcp_zero_one: $pcp_zero_one2, pcp_zero_six: $pcp_zero_six2, pcp_two_four: $pcp_two_four2, pcpxx: $pcpxx2, sd: $sd2),
                $wban1 == $wban2, $gus1 != $gus2 -> #fail. 

        
            e5: clean(usaf: $usaf1, wban: $wban1, yrmodahrmn: $yrmodahrmn1, dir: $dir1, spd: $spd1, gus: $gus1, clg: $clg1, skc: $skc1, l: $l1, m: $m1, h: $h1, vsb: $vsb1, mw: $mw1, mw_one: $mw_one1, mw_two: $mw_two1, mw_three: $mw_three1, aw: $aw1, aw_one: $aw_one1, aw_two: $aw_two1, aw_three: $aw_three1, w: $w1, temp: $temp1, dewp: $dewp1, slp: $slp1, alt: $alt1, stp: $stp1, max: $max1, min: $min1, pcp_zero_one: $pcp_zero_one1, pcp_zero_six: $pcp_zero_six1, pcp_two_four: $pcp_two_four1, pcpxx: $pcpxx1, sd: $sd1),
            clean(usaf: $usaf2, wban: $wban2, yrmodahrmn: $yrmodahrmn2, dir: $dir2, spd: $spd2, gus: $gus2, clg: $clg2, skc: $skc2, l: $l2, m: $m2, h: $h2, vsb: $vsb2, mw: $mw2, mw_one: $mw_one2, mw_two: $mw_two2, mw_three: $mw_three2, aw: $aw2, aw_one: $aw_one2, aw_two: $aw_two2, aw_three: $aw_three2, w: $w2, temp: $temp2, dewp: $dewp2, slp: $slp2, alt: $alt2, stp: $stp2, max: $max2, min: $min2, pcp_zero_one: $pcp_zero_one2, pcp_zero_six: $pcp_zero_six2, pcp_two_four: $pcp_two_four2, pcpxx: $pcpxx2, sd: $sd2),
                $wban1 == $wban2, $w1 != $w2 -> #fail. 

        
            e6: clean(usaf: $usaf1, wban: $wban1, yrmodahrmn: $yrmodahrmn1, dir: $dir1, spd: $spd1, gus: $gus1, clg: $clg1, skc: $skc1, l: $l1, m: $m1, h: $h1, vsb: $vsb1, mw: $mw1, mw_one: $mw_one1, mw_two: $mw_two1, mw_three: $mw_three1, aw: $aw1, aw_one: $aw_one1, aw_two: $aw_two1, aw_three: $aw_three1, w: $w1, temp: $temp1, dewp: $dewp1, slp: $slp1, alt: $alt1, stp: $stp1, max: $max1, min: $min1, pcp_zero_one: $pcp_zero_one1, pcp_zero_six: $pcp_zero_six1, pcp_two_four: $pcp_two_four1, pcpxx: $pcpxx1, sd: $sd1),
            clean(usaf: $usaf2, wban: $wban2, yrmodahrmn: $yrmodahrmn2, dir: $dir2, spd: $spd2, gus: $gus2, clg: $clg2, skc: $skc2, l: $l2, m: $m2, h: $h2, vsb: $vsb2, mw: $mw2, mw_one: $mw_one2, mw_two: $mw_two2, mw_three: $mw_three2, aw: $aw2, aw_one: $aw_one2, aw_two: $aw_two2, aw_three: $aw_three2, w: $w2, temp: $temp2, dewp: $dewp2, slp: $slp2, alt: $alt2, stp: $stp2, max: $max2, min: $min2, pcp_zero_one: $pcp_zero_one2, pcp_zero_six: $pcp_zero_six2, pcp_two_four: $pcp_two_four2, pcpxx: $pcpxx2, sd: $sd2),
                $wban1 == $wban2, $temp1 != $temp2 -> #fail. 

        
            e7: clean(usaf: $usaf1, wban: $wban1, yrmodahrmn: $yrmodahrmn1, dir: $dir1, spd: $spd1, gus: $gus1, clg: $clg1, skc: $skc1, l: $l1, m: $m1, h: $h1, vsb: $vsb1, mw: $mw1, mw_one: $mw_one1, mw_two: $mw_two1, mw_three: $mw_three1, aw: $aw1, aw_one: $aw_one1, aw_two: $aw_two1, aw_three: $aw_three1, w: $w1, temp: $temp1, dewp: $dewp1, slp: $slp1, alt: $alt1, stp: $stp1, max: $max1, min: $min1, pcp_zero_one: $pcp_zero_one1, pcp_zero_six: $pcp_zero_six1, pcp_two_four: $pcp_two_four1, pcpxx: $pcpxx1, sd: $sd1),
            clean(usaf: $usaf2, wban: $wban2, yrmodahrmn: $yrmodahrmn2, dir: $dir2, spd: $spd2, gus: $gus2, clg: $clg2, skc: $skc2, l: $l2, m: $m2, h: $h2, vsb: $vsb2, mw: $mw2, mw_one: $mw_one2, mw_two: $mw_two2, mw_three: $mw_three2, aw: $aw2, aw_one: $aw_one2, aw_two: $aw_two2, aw_three: $aw_three2, w: $w2, temp: $temp2, dewp: $dewp2, slp: $slp2, alt: $alt2, stp: $stp2, max: $max2, min: $min2, pcp_zero_one: $pcp_zero_one2, pcp_zero_six: $pcp_zero_six2, pcp_two_four: $pcp_two_four2, pcpxx: $pcpxx2, sd: $sd2),
                $wban1 == $wban2, $stp1 != $stp2 -> #fail. 

        
            e8: clean(usaf: $usaf1, wban: $wban1, yrmodahrmn: $yrmodahrmn1, dir: $dir1, spd: $spd1, gus: $gus1, clg: $clg1, skc: $skc1, l: $l1, m: $m1, h: $h1, vsb: $vsb1, mw: $mw1, mw_one: $mw_one1, mw_two: $mw_two1, mw_three: $mw_three1, aw: $aw1, aw_one: $aw_one1, aw_two: $aw_two1, aw_three: $aw_three1, w: $w1, temp: $temp1, dewp: $dewp1, slp: $slp1, alt: $alt1, stp: $stp1, max: $max1, min: $min1, pcp_zero_one: $pcp_zero_one1, pcp_zero_six: $pcp_zero_six1, pcp_two_four: $pcp_two_four1, pcpxx: $pcpxx1, sd: $sd1),
            clean(usaf: $usaf2, wban: $wban2, yrmodahrmn: $yrmodahrmn2, dir: $dir2, spd: $spd2, gus: $gus2, clg: $clg2, skc: $skc2, l: $l2, m: $m2, h: $h2, vsb: $vsb2, mw: $mw2, mw_one: $mw_one2, mw_two: $mw_two2, mw_three: $mw_three2, aw: $aw2, aw_one: $aw_one2, aw_two: $aw_two2, aw_three: $aw_three2, w: $w2, temp: $temp2, dewp: $dewp2, slp: $slp2, alt: $alt2, stp: $stp2, max: $max2, min: $min2, pcp_zero_one: $pcp_zero_one2, pcp_zero_six: $pcp_zero_six2, pcp_two_four: $pcp_two_four2, pcpxx: $pcpxx2, sd: $sd2),
                $wban1 == $wban2, $max1 != $max2 -> #fail. 

        
            e9: clean(usaf: $usaf1, wban: $wban1, yrmodahrmn: $yrmodahrmn1, dir: $dir1, spd: $spd1, gus: $gus1, clg: $clg1, skc: $skc1, l: $l1, m: $m1, h: $h1, vsb: $vsb1, mw: $mw1, mw_one: $mw_one1, mw_two: $mw_two1, mw_three: $mw_three1, aw: $aw1, aw_one: $aw_one1, aw_two: $aw_two1, aw_three: $aw_three1, w: $w1, temp: $temp1, dewp: $dewp1, slp: $slp1, alt: $alt1, stp: $stp1, max: $max1, min: $min1, pcp_zero_one: $pcp_zero_one1, pcp_zero_six: $pcp_zero_six1, pcp_two_four: $pcp_two_four1, pcpxx: $pcpxx1, sd: $sd1),
            clean(usaf: $usaf2, wban: $wban2, yrmodahrmn: $yrmodahrmn2, dir: $dir2, spd: $spd2, gus: $gus2, clg: $clg2, skc: $skc2, l: $l2, m: $m2, h: $h2, vsb: $vsb2, mw: $mw2, mw_one: $mw_one2, mw_two: $mw_two2, mw_three: $mw_three2, aw: $aw2, aw_one: $aw_one2, aw_two: $aw_two2, aw_three: $aw_three2, w: $w2, temp: $temp2, dewp: $dewp2, slp: $slp2, alt: $alt2, stp: $stp2, max: $max2, min: $min2, pcp_zero_one: $pcp_zero_one2, pcp_zero_six: $pcp_zero_six2, pcp_two_four: $pcp_two_four2, pcpxx: $pcpxx2, sd: $sd2),
                $wban1 == $wban2, $yrmodahrmn1 != $yrmodahrmn2 -> #fail. 

        
            e10: clean(usaf: $usaf1, wban: $wban1, yrmodahrmn: $yrmodahrmn1, dir: $dir1, spd: $spd1, gus: $gus1, clg: $clg1, skc: $skc1, l: $l1, m: $m1, h: $h1, vsb: $vsb1, mw: $mw1, mw_one: $mw_one1, mw_two: $mw_two1, mw_three: $mw_three1, aw: $aw1, aw_one: $aw_one1, aw_two: $aw_two1, aw_three: $aw_three1, w: $w1, temp: $temp1, dewp: $dewp1, slp: $slp1, alt: $alt1, stp: $stp1, max: $max1, min: $min1, pcp_zero_one: $pcp_zero_one1, pcp_zero_six: $pcp_zero_six1, pcp_two_four: $pcp_two_four1, pcpxx: $pcpxx1, sd: $sd1),
            clean(usaf: $usaf2, wban: $wban2, yrmodahrmn: $yrmodahrmn2, dir: $dir2, spd: $spd2, gus: $gus2, clg: $clg2, skc: $skc2, l: $l2, m: $m2, h: $h2, vsb: $vsb2, mw: $mw2, mw_one: $mw_one2, mw_two: $mw_two2, mw_three: $mw_three2, aw: $aw2, aw_one: $aw_one2, aw_two: $aw_two2, aw_three: $aw_three2, w: $w2, temp: $temp2, dewp: $dewp2, slp: $slp2, alt: $alt2, stp: $stp2, max: $max2, min: $min2, pcp_zero_one: $pcp_zero_one2, pcp_zero_six: $pcp_zero_six2, pcp_two_four: $pcp_two_four2, pcpxx: $pcpxx2, sd: $sd2),
                $wban1 == $wban2, $min1 != $min2 -> #fail. 

        
            e11: clean(usaf: $usaf1, wban: $wban1, yrmodahrmn: $yrmodahrmn1, dir: $dir1, spd: $spd1, gus: $gus1, clg: $clg1, skc: $skc1, l: $l1, m: $m1, h: $h1, vsb: $vsb1, mw: $mw1, mw_one: $mw_one1, mw_two: $mw_two1, mw_three: $mw_three1, aw: $aw1, aw_one: $aw_one1, aw_two: $aw_two1, aw_three: $aw_three1, w: $w1, temp: $temp1, dewp: $dewp1, slp: $slp1, alt: $alt1, stp: $stp1, max: $max1, min: $min1, pcp_zero_one: $pcp_zero_one1, pcp_zero_six: $pcp_zero_six1, pcp_two_four: $pcp_two_four1, pcpxx: $pcpxx1, sd: $sd1),
            clean(usaf: $usaf2, wban: $wban2, yrmodahrmn: $yrmodahrmn2, dir: $dir2, spd: $spd2, gus: $gus2, clg: $clg2, skc: $skc2, l: $l2, m: $m2, h: $h2, vsb: $vsb2, mw: $mw2, mw_one: $mw_one2, mw_two: $mw_two2, mw_three: $mw_three2, aw: $aw2, aw_one: $aw_one2, aw_two: $aw_two2, aw_three: $aw_three2, w: $w2, temp: $temp2, dewp: $dewp2, slp: $slp2, alt: $alt2, stp: $stp2, max: $max2, min: $min2, pcp_zero_one: $pcp_zero_one2, pcp_zero_six: $pcp_zero_six2, pcp_two_four: $pcp_two_four2, pcpxx: $pcpxx2, sd: $sd2),
                $wban1 == $wban2, $dir1 != $dir2 -> #fail. 

        
            e12: clean(usaf: $usaf1, wban: $wban1, yrmodahrmn: $yrmodahrmn1, dir: $dir1, spd: $spd1, gus: $gus1, clg: $clg1, skc: $skc1, l: $l1, m: $m1, h: $h1, vsb: $vsb1, mw: $mw1, mw_one: $mw_one1, mw_two: $mw_two1, mw_three: $mw_three1, aw: $aw1, aw_one: $aw_one1, aw_two: $aw_two1, aw_three: $aw_three1, w: $w1, temp: $temp1, dewp: $dewp1, slp: $slp1, alt: $alt1, stp: $stp1, max: $max1, min: $min1, pcp_zero_one: $pcp_zero_one1, pcp_zero_six: $pcp_zero_six1, pcp_two_four: $pcp_two_four1, pcpxx: $pcpxx1, sd: $sd1),
            clean(usaf: $usaf2, wban: $wban2, yrmodahrmn: $yrmodahrmn2, dir: $dir2, spd: $spd2, gus: $gus2, clg: $clg2, skc: $skc2, l: $l2, m: $m2, h: $h2, vsb: $vsb2, mw: $mw2, mw_one: $mw_one2, mw_two: $mw_two2, mw_three: $mw_three2, aw: $aw2, aw_one: $aw_one2, aw_two: $aw_two2, aw_three: $aw_three2, w: $w2, temp: $temp2, dewp: $dewp2, slp: $slp2, alt: $alt2, stp: $stp2, max: $max2, min: $min2, pcp_zero_one: $pcp_zero_one2, pcp_zero_six: $pcp_zero_six2, pcp_two_four: $pcp_two_four2, pcpxx: $pcpxx2, sd: $sd2),
                $wban1 == $wban2, $spd1 != $spd2 -> #fail. 

        
            e13: clean(usaf: $usaf1, wban: $wban1, yrmodahrmn: $yrmodahrmn1, dir: $dir1, spd: $spd1, gus: $gus1, clg: $clg1, skc: $skc1, l: $l1, m: $m1, h: $h1, vsb: $vsb1, mw: $mw1, mw_one: $mw_one1, mw_two: $mw_two1, mw_three: $mw_three1, aw: $aw1, aw_one: $aw_one1, aw_two: $aw_two1, aw_three: $aw_three1, w: $w1, temp: $temp1, dewp: $dewp1, slp: $slp1, alt: $alt1, stp: $stp1, max: $max1, min: $min1, pcp_zero_one: $pcp_zero_one1, pcp_zero_six: $pcp_zero_six1, pcp_two_four: $pcp_two_four1, pcpxx: $pcpxx1, sd: $sd1),
            clean(usaf: $usaf2, wban: $wban2, yrmodahrmn: $yrmodahrmn2, dir: $dir2, spd: $spd2, gus: $gus2, clg: $clg2, skc: $skc2, l: $l2, m: $m2, h: $h2, vsb: $vsb2, mw: $mw2, mw_one: $mw_one2, mw_two: $mw_two2, mw_three: $mw_three2, aw: $aw2, aw_one: $aw_one2, aw_two: $aw_two2, aw_three: $aw_three2, w: $w2, temp: $temp2, dewp: $dewp2, slp: $slp2, alt: $alt2, stp: $stp2, max: $max2, min: $min2, pcp_zero_one: $pcp_zero_one2, pcp_zero_six: $pcp_zero_six2, pcp_two_four: $pcp_two_four2, pcpxx: $pcpxx2, sd: $sd2),
                $wban1 == $wban2, $pcp_zero_six1 != $pcp_zero_six2 -> #fail. 

        
            e14: clean(usaf: $usaf1, wban: $wban1, yrmodahrmn: $yrmodahrmn1, dir: $dir1, spd: $spd1, gus: $gus1, clg: $clg1, skc: $skc1, l: $l1, m: $m1, h: $h1, vsb: $vsb1, mw: $mw1, mw_one: $mw_one1, mw_two: $mw_two1, mw_three: $mw_three1, aw: $aw1, aw_one: $aw_one1, aw_two: $aw_two1, aw_three: $aw_three1, w: $w1, temp: $temp1, dewp: $dewp1, slp: $slp1, alt: $alt1, stp: $stp1, max: $max1, min: $min1, pcp_zero_one: $pcp_zero_one1, pcp_zero_six: $pcp_zero_six1, pcp_two_four: $pcp_two_four1, pcpxx: $pcpxx1, sd: $sd1),
            clean(usaf: $usaf2, wban: $wban2, yrmodahrmn: $yrmodahrmn2, dir: $dir2, spd: $spd2, gus: $gus2, clg: $clg2, skc: $skc2, l: $l2, m: $m2, h: $h2, vsb: $vsb2, mw: $mw2, mw_one: $mw_one2, mw_two: $mw_two2, mw_three: $mw_three2, aw: $aw2, aw_one: $aw_one2, aw_two: $aw_two2, aw_three: $aw_three2, w: $w2, temp: $temp2, dewp: $dewp2, slp: $slp2, alt: $alt2, stp: $stp2, max: $max2, min: $min2, pcp_zero_one: $pcp_zero_one2, pcp_zero_six: $pcp_zero_six2, pcp_two_four: $pcp_two_four2, pcpxx: $pcpxx2, sd: $sd2),
                $wban1 == $wban2, $pcp_zero_one1 != $pcp_zero_one2 -> #fail. 

        
            e15: clean(usaf: $usaf1, wban: $wban1, yrmodahrmn: $yrmodahrmn1, dir: $dir1, spd: $spd1, gus: $gus1, clg: $clg1, skc: $skc1, l: $l1, m: $m1, h: $h1, vsb: $vsb1, mw: $mw1, mw_one: $mw_one1, mw_two: $mw_two1, mw_three: $mw_three1, aw: $aw1, aw_one: $aw_one1, aw_two: $aw_two1, aw_three: $aw_three1, w: $w1, temp: $temp1, dewp: $dewp1, slp: $slp1, alt: $alt1, stp: $stp1, max: $max1, min: $min1, pcp_zero_one: $pcp_zero_one1, pcp_zero_six: $pcp_zero_six1, pcp_two_four: $pcp_two_four1, pcpxx: $pcpxx1, sd: $sd1),
            clean(usaf: $usaf2, wban: $wban2, yrmodahrmn: $yrmodahrmn2, dir: $dir2, spd: $spd2, gus: $gus2, clg: $clg2, skc: $skc2, l: $l2, m: $m2, h: $h2, vsb: $vsb2, mw: $mw2, mw_one: $mw_one2, mw_two: $mw_two2, mw_three: $mw_three2, aw: $aw2, aw_one: $aw_one2, aw_two: $aw_two2, aw_three: $aw_three2, w: $w2, temp: $temp2, dewp: $dewp2, slp: $slp2, alt: $alt2, stp: $stp2, max: $max2, min: $min2, pcp_zero_one: $pcp_zero_one2, pcp_zero_six: $pcp_zero_six2, pcp_two_four: $pcp_two_four2, pcpxx: $pcpxx2, sd: $sd2),
                $wban1 == $wban2, $pcp_two_four1 != $pcp_two_four2 -> #fail. 

        
            e16: clean(usaf: $usaf1, wban: $wban1, yrmodahrmn: $yrmodahrmn1, dir: $dir1, spd: $spd1, gus: $gus1, clg: $clg1, skc: $skc1, l: $l1, m: $m1, h: $h1, vsb: $vsb1, mw: $mw1, mw_one: $mw_one1, mw_two: $mw_two1, mw_three: $mw_three1, aw: $aw1, aw_one: $aw_one1, aw_two: $aw_two1, aw_three: $aw_three1, w: $w1, temp: $temp1, dewp: $dewp1, slp: $slp1, alt: $alt1, stp: $stp1, max: $max1, min: $min1, pcp_zero_one: $pcp_zero_one1, pcp_zero_six: $pcp_zero_six1, pcp_two_four: $pcp_two_four1, pcpxx: $pcpxx1, sd: $sd1),
            clean(usaf: $usaf2, wban: $wban2, yrmodahrmn: $yrmodahrmn2, dir: $dir2, spd: $spd2, gus: $gus2, clg: $clg2, skc: $skc2, l: $l2, m: $m2, h: $h2, vsb: $vsb2, mw: $mw2, mw_one: $mw_one2, mw_two: $mw_two2, mw_three: $mw_three2, aw: $aw2, aw_one: $aw_one2, aw_two: $aw_two2, aw_three: $aw_three2, w: $w2, temp: $temp2, dewp: $dewp2, slp: $slp2, alt: $alt2, stp: $stp2, max: $max2, min: $min2, pcp_zero_one: $pcp_zero_one2, pcp_zero_six: $pcp_zero_six2, pcp_two_four: $pcp_two_four2, pcpxx: $pcpxx2, sd: $sd2),
                $wban1 == $wban2, $h1 != $h2 -> #fail. 

        
            e17: clean(usaf: $usaf1, wban: $wban1, yrmodahrmn: $yrmodahrmn1, dir: $dir1, spd: $spd1, gus: $gus1, clg: $clg1, skc: $skc1, l: $l1, m: $m1, h: $h1, vsb: $vsb1, mw: $mw1, mw_one: $mw_one1, mw_two: $mw_two1, mw_three: $mw_three1, aw: $aw1, aw_one: $aw_one1, aw_two: $aw_two1, aw_three: $aw_three1, w: $w1, temp: $temp1, dewp: $dewp1, slp: $slp1, alt: $alt1, stp: $stp1, max: $max1, min: $min1, pcp_zero_one: $pcp_zero_one1, pcp_zero_six: $pcp_zero_six1, pcp_two_four: $pcp_two_four1, pcpxx: $pcpxx1, sd: $sd1),
            clean(usaf: $usaf2, wban: $wban2, yrmodahrmn: $yrmodahrmn2, dir: $dir2, spd: $spd2, gus: $gus2, clg: $clg2, skc: $skc2, l: $l2, m: $m2, h: $h2, vsb: $vsb2, mw: $mw2, mw_one: $mw_one2, mw_two: $mw_two2, mw_three: $mw_three2, aw: $aw2, aw_one: $aw_one2, aw_two: $aw_two2, aw_three: $aw_three2, w: $w2, temp: $temp2, dewp: $dewp2, slp: $slp2, alt: $alt2, stp: $stp2, max: $max2, min: $min2, pcp_zero_one: $pcp_zero_one2, pcp_zero_six: $pcp_zero_six2, pcp_two_four: $pcp_two_four2, pcpxx: $pcpxx2, sd: $sd2),
                $wban1 == $wban2, $mw_three1 != $mw_three2 -> #fail. 

        
            e18: clean(usaf: $usaf1, wban: $wban1, yrmodahrmn: $yrmodahrmn1, dir: $dir1, spd: $spd1, gus: $gus1, clg: $clg1, skc: $skc1, l: $l1, m: $m1, h: $h1, vsb: $vsb1, mw: $mw1, mw_one: $mw_one1, mw_two: $mw_two1, mw_three: $mw_three1, aw: $aw1, aw_one: $aw_one1, aw_two: $aw_two1, aw_three: $aw_three1, w: $w1, temp: $temp1, dewp: $dewp1, slp: $slp1, alt: $alt1, stp: $stp1, max: $max1, min: $min1, pcp_zero_one: $pcp_zero_one1, pcp_zero_six: $pcp_zero_six1, pcp_two_four: $pcp_two_four1, pcpxx: $pcpxx1, sd: $sd1),
            clean(usaf: $usaf2, wban: $wban2, yrmodahrmn: $yrmodahrmn2, dir: $dir2, spd: $spd2, gus: $gus2, clg: $clg2, skc: $skc2, l: $l2, m: $m2, h: $h2, vsb: $vsb2, mw: $mw2, mw_one: $mw_one2, mw_two: $mw_two2, mw_three: $mw_three2, aw: $aw2, aw_one: $aw_one2, aw_two: $aw_two2, aw_three: $aw_three2, w: $w2, temp: $temp2, dewp: $dewp2, slp: $slp2, alt: $alt2, stp: $stp2, max: $max2, min: $min2, pcp_zero_one: $pcp_zero_one2, pcp_zero_six: $pcp_zero_six2, pcp_two_four: $pcp_two_four2, pcpxx: $pcpxx2, sd: $sd2),
                $wban1 == $wban2, $vsb1 != $vsb2 -> #fail. 

        
            e19: clean(usaf: $usaf1, wban: $wban1, yrmodahrmn: $yrmodahrmn1, dir: $dir1, spd: $spd1, gus: $gus1, clg: $clg1, skc: $skc1, l: $l1, m: $m1, h: $h1, vsb: $vsb1, mw: $mw1, mw_one: $mw_one1, mw_two: $mw_two1, mw_three: $mw_three1, aw: $aw1, aw_one: $aw_one1, aw_two: $aw_two1, aw_three: $aw_three1, w: $w1, temp: $temp1, dewp: $dewp1, slp: $slp1, alt: $alt1, stp: $stp1, max: $max1, min: $min1, pcp_zero_one: $pcp_zero_one1, pcp_zero_six: $pcp_zero_six1, pcp_two_four: $pcp_two_four1, pcpxx: $pcpxx1, sd: $sd1),
            clean(usaf: $usaf2, wban: $wban2, yrmodahrmn: $yrmodahrmn2, dir: $dir2, spd: $spd2, gus: $gus2, clg: $clg2, skc: $skc2, l: $l2, m: $m2, h: $h2, vsb: $vsb2, mw: $mw2, mw_one: $mw_one2, mw_two: $mw_two2, mw_three: $mw_three2, aw: $aw2, aw_one: $aw_one2, aw_two: $aw_two2, aw_three: $aw_three2, w: $w2, temp: $temp2, dewp: $dewp2, slp: $slp2, alt: $alt2, stp: $stp2, max: $max2, min: $min2, pcp_zero_one: $pcp_zero_one2, pcp_zero_six: $pcp_zero_six2, pcp_two_four: $pcp_two_four2, pcpxx: $pcpxx2, sd: $sd2),
                $wban1 == $wban2, $aw1 != $aw2 -> #fail. 

        
            e20: clean(usaf: $usaf1, wban: $wban1, yrmodahrmn: $yrmodahrmn1, dir: $dir1, spd: $spd1, gus: $gus1, clg: $clg1, skc: $skc1, l: $l1, m: $m1, h: $h1, vsb: $vsb1, mw: $mw1, mw_one: $mw_one1, mw_two: $mw_two1, mw_three: $mw_three1, aw: $aw1, aw_one: $aw_one1, aw_two: $aw_two1, aw_three: $aw_three1, w: $w1, temp: $temp1, dewp: $dewp1, slp: $slp1, alt: $alt1, stp: $stp1, max: $max1, min: $min1, pcp_zero_one: $pcp_zero_one1, pcp_zero_six: $pcp_zero_six1, pcp_two_four: $pcp_two_four1, pcpxx: $pcpxx1, sd: $sd1),
            clean(usaf: $usaf2, wban: $wban2, yrmodahrmn: $yrmodahrmn2, dir: $dir2, spd: $spd2, gus: $gus2, clg: $clg2, skc: $skc2, l: $l2, m: $m2, h: $h2, vsb: $vsb2, mw: $mw2, mw_one: $mw_one2, mw_two: $mw_two2, mw_three: $mw_three2, aw: $aw2, aw_one: $aw_one2, aw_two: $aw_two2, aw_three: $aw_three2, w: $w2, temp: $temp2, dewp: $dewp2, slp: $slp2, alt: $alt2, stp: $stp2, max: $max2, min: $min2, pcp_zero_one: $pcp_zero_one2, pcp_zero_six: $pcp_zero_six2, pcp_two_four: $pcp_two_four2, pcpxx: $pcpxx2, sd: $sd2),
                $wban1 == $wban2, $clg1 != $clg2 -> #fail. 

        
            e21: clean(usaf: $usaf1, wban: $wban1, yrmodahrmn: $yrmodahrmn1, dir: $dir1, spd: $spd1, gus: $gus1, clg: $clg1, skc: $skc1, l: $l1, m: $m1, h: $h1, vsb: $vsb1, mw: $mw1, mw_one: $mw_one1, mw_two: $mw_two1, mw_three: $mw_three1, aw: $aw1, aw_one: $aw_one1, aw_two: $aw_two1, aw_three: $aw_three1, w: $w1, temp: $temp1, dewp: $dewp1, slp: $slp1, alt: $alt1, stp: $stp1, max: $max1, min: $min1, pcp_zero_one: $pcp_zero_one1, pcp_zero_six: $pcp_zero_six1, pcp_two_four: $pcp_two_four1, pcpxx: $pcpxx1, sd: $sd1),
            clean(usaf: $usaf2, wban: $wban2, yrmodahrmn: $yrmodahrmn2, dir: $dir2, spd: $spd2, gus: $gus2, clg: $clg2, skc: $skc2, l: $l2, m: $m2, h: $h2, vsb: $vsb2, mw: $mw2, mw_one: $mw_one2, mw_two: $mw_two2, mw_three: $mw_three2, aw: $aw2, aw_one: $aw_one2, aw_two: $aw_two2, aw_three: $aw_three2, w: $w2, temp: $temp2, dewp: $dewp2, slp: $slp2, alt: $alt2, stp: $stp2, max: $max2, min: $min2, pcp_zero_one: $pcp_zero_one2, pcp_zero_six: $pcp_zero_six2, pcp_two_four: $pcp_two_four2, pcpxx: $pcpxx2, sd: $sd2),
                $wban1 == $wban2, $mw1 != $mw2 -> #fail. 

        
            e22: clean(usaf: $usaf1, wban: $wban1, yrmodahrmn: $yrmodahrmn1, dir: $dir1, spd: $spd1, gus: $gus1, clg: $clg1, skc: $skc1, l: $l1, m: $m1, h: $h1, vsb: $vsb1, mw: $mw1, mw_one: $mw_one1, mw_two: $mw_two1, mw_three: $mw_three1, aw: $aw1, aw_one: $aw_one1, aw_two: $aw_two1, aw_three: $aw_three1, w: $w1, temp: $temp1, dewp: $dewp1, slp: $slp1, alt: $alt1, stp: $stp1, max: $max1, min: $min1, pcp_zero_one: $pcp_zero_one1, pcp_zero_six: $pcp_zero_six1, pcp_two_four: $pcp_two_four1, pcpxx: $pcpxx1, sd: $sd1),
            clean(usaf: $usaf2, wban: $wban2, yrmodahrmn: $yrmodahrmn2, dir: $dir2, spd: $spd2, gus: $gus2, clg: $clg2, skc: $skc2, l: $l2, m: $m2, h: $h2, vsb: $vsb2, mw: $mw2, mw_one: $mw_one2, mw_two: $mw_two2, mw_three: $mw_three2, aw: $aw2, aw_one: $aw_one2, aw_two: $aw_two2, aw_three: $aw_three2, w: $w2, temp: $temp2, dewp: $dewp2, slp: $slp2, alt: $alt2, stp: $stp2, max: $max2, min: $min2, pcp_zero_one: $pcp_zero_one2, pcp_zero_six: $pcp_zero_six2, pcp_two_four: $pcp_two_four2, pcpxx: $pcpxx2, sd: $sd2),
                $wban1 == $wban2, $aw_one1 != $aw_one2 -> #fail. 

        
            e23: clean(usaf: $usaf1, wban: $wban1, yrmodahrmn: $yrmodahrmn1, dir: $dir1, spd: $spd1, gus: $gus1, clg: $clg1, skc: $skc1, l: $l1, m: $m1, h: $h1, vsb: $vsb1, mw: $mw1, mw_one: $mw_one1, mw_two: $mw_two1, mw_three: $mw_three1, aw: $aw1, aw_one: $aw_one1, aw_two: $aw_two1, aw_three: $aw_three1, w: $w1, temp: $temp1, dewp: $dewp1, slp: $slp1, alt: $alt1, stp: $stp1, max: $max1, min: $min1, pcp_zero_one: $pcp_zero_one1, pcp_zero_six: $pcp_zero_six1, pcp_two_four: $pcp_two_four1, pcpxx: $pcpxx1, sd: $sd1),
            clean(usaf: $usaf2, wban: $wban2, yrmodahrmn: $yrmodahrmn2, dir: $dir2, spd: $spd2, gus: $gus2, clg: $clg2, skc: $skc2, l: $l2, m: $m2, h: $h2, vsb: $vsb2, mw: $mw2, mw_one: $mw_one2, mw_two: $mw_two2, mw_three: $mw_three2, aw: $aw2, aw_one: $aw_one2, aw_two: $aw_two2, aw_three: $aw_three2, w: $w2, temp: $temp2, dewp: $dewp2, slp: $slp2, alt: $alt2, stp: $stp2, max: $max2, min: $min2, pcp_zero_one: $pcp_zero_one2, pcp_zero_six: $pcp_zero_six2, pcp_two_four: $pcp_two_four2, pcpxx: $pcpxx2, sd: $sd2),
                $wban1 == $wban2, $mw_one1 != $mw_one2 -> #fail. 

        
            e24: clean(usaf: $usaf1, wban: $wban1, yrmodahrmn: $yrmodahrmn1, dir: $dir1, spd: $spd1, gus: $gus1, clg: $clg1, skc: $skc1, l: $l1, m: $m1, h: $h1, vsb: $vsb1, mw: $mw1, mw_one: $mw_one1, mw_two: $mw_two1, mw_three: $mw_three1, aw: $aw1, aw_one: $aw_one1, aw_two: $aw_two1, aw_three: $aw_three1, w: $w1, temp: $temp1, dewp: $dewp1, slp: $slp1, alt: $alt1, stp: $stp1, max: $max1, min: $min1, pcp_zero_one: $pcp_zero_one1, pcp_zero_six: $pcp_zero_six1, pcp_two_four: $pcp_two_four1, pcpxx: $pcpxx1, sd: $sd1),
            clean(usaf: $usaf2, wban: $wban2, yrmodahrmn: $yrmodahrmn2, dir: $dir2, spd: $spd2, gus: $gus2, clg: $clg2, skc: $skc2, l: $l2, m: $m2, h: $h2, vsb: $vsb2, mw: $mw2, mw_one: $mw_one2, mw_two: $mw_two2, mw_three: $mw_three2, aw: $aw2, aw_one: $aw_one2, aw_two: $aw_two2, aw_three: $aw_three2, w: $w2, temp: $temp2, dewp: $dewp2, slp: $slp2, alt: $alt2, stp: $stp2, max: $max2, min: $min2, pcp_zero_one: $pcp_zero_one2, pcp_zero_six: $pcp_zero_six2, pcp_two_four: $pcp_two_four2, pcpxx: $pcpxx2, sd: $sd2),
                $wban1 == $wban2, $aw_two1 != $aw_two2 -> #fail. 

        
            e25: clean(usaf: $usaf1, wban: $wban1, yrmodahrmn: $yrmodahrmn1, dir: $dir1, spd: $spd1, gus: $gus1, clg: $clg1, skc: $skc1, l: $l1, m: $m1, h: $h1, vsb: $vsb1, mw: $mw1, mw_one: $mw_one1, mw_two: $mw_two1, mw_three: $mw_three1, aw: $aw1, aw_one: $aw_one1, aw_two: $aw_two1, aw_three: $aw_three1, w: $w1, temp: $temp1, dewp: $dewp1, slp: $slp1, alt: $alt1, stp: $stp1, max: $max1, min: $min1, pcp_zero_one: $pcp_zero_one1, pcp_zero_six: $pcp_zero_six1, pcp_two_four: $pcp_two_four1, pcpxx: $pcpxx1, sd: $sd1),
            clean(usaf: $usaf2, wban: $wban2, yrmodahrmn: $yrmodahrmn2, dir: $dir2, spd: $spd2, gus: $gus2, clg: $clg2, skc: $skc2, l: $l2, m: $m2, h: $h2, vsb: $vsb2, mw: $mw2, mw_one: $mw_one2, mw_two: $mw_two2, mw_three: $mw_three2, aw: $aw2, aw_one: $aw_one2, aw_two: $aw_two2, aw_three: $aw_three2, w: $w2, temp: $temp2, dewp: $dewp2, slp: $slp2, alt: $alt2, stp: $stp2, max: $max2, min: $min2, pcp_zero_one: $pcp_zero_one2, pcp_zero_six: $pcp_zero_six2, pcp_two_four: $pcp_two_four2, pcpxx: $pcpxx2, sd: $sd2),
                $wban1 == $wban2, $pcpxx1 != $pcpxx2 -> #fail. 

        
            e26: clean(usaf: $usaf1, wban: $wban1, yrmodahrmn: $yrmodahrmn1, dir: $dir1, spd: $spd1, gus: $gus1, clg: $clg1, skc: $skc1, l: $l1, m: $m1, h: $h1, vsb: $vsb1, mw: $mw1, mw_one: $mw_one1, mw_two: $mw_two1, mw_three: $mw_three1, aw: $aw1, aw_one: $aw_one1, aw_two: $aw_two1, aw_three: $aw_three1, w: $w1, temp: $temp1, dewp: $dewp1, slp: $slp1, alt: $alt1, stp: $stp1, max: $max1, min: $min1, pcp_zero_one: $pcp_zero_one1, pcp_zero_six: $pcp_zero_six1, pcp_two_four: $pcp_two_four1, pcpxx: $pcpxx1, sd: $sd1),
            clean(usaf: $usaf2, wban: $wban2, yrmodahrmn: $yrmodahrmn2, dir: $dir2, spd: $spd2, gus: $gus2, clg: $clg2, skc: $skc2, l: $l2, m: $m2, h: $h2, vsb: $vsb2, mw: $mw2, mw_one: $mw_one2, mw_two: $mw_two2, mw_three: $mw_three2, aw: $aw2, aw_one: $aw_one2, aw_two: $aw_two2, aw_three: $aw_three2, w: $w2, temp: $temp2, dewp: $dewp2, slp: $slp2, alt: $alt2, stp: $stp2, max: $max2, min: $min2, pcp_zero_one: $pcp_zero_one2, pcp_zero_six: $pcp_zero_six2, pcp_two_four: $pcp_two_four2, pcpxx: $pcpxx2, sd: $sd2),
                $slp1 == $slp2, $alt1 != $alt2 -> #fail. 

        
            e27: clean(usaf: $usaf1, wban: $wban1, yrmodahrmn: $yrmodahrmn1, dir: $dir1, spd: $spd1, gus: $gus1, clg: $clg1, skc: $skc1, l: $l1, m: $m1, h: $h1, vsb: $vsb1, mw: $mw1, mw_one: $mw_one1, mw_two: $mw_two1, mw_three: $mw_three1, aw: $aw1, aw_one: $aw_one1, aw_two: $aw_two1, aw_three: $aw_three1, w: $w1, temp: $temp1, dewp: $dewp1, slp: $slp1, alt: $alt1, stp: $stp1, max: $max1, min: $min1, pcp_zero_one: $pcp_zero_one1, pcp_zero_six: $pcp_zero_six1, pcp_two_four: $pcp_two_four1, pcpxx: $pcpxx1, sd: $sd1),
            clean(usaf: $usaf2, wban: $wban2, yrmodahrmn: $yrmodahrmn2, dir: $dir2, spd: $spd2, gus: $gus2, clg: $clg2, skc: $skc2, l: $l2, m: $m2, h: $h2, vsb: $vsb2, mw: $mw2, mw_one: $mw_one2, mw_two: $mw_two2, mw_three: $mw_three2, aw: $aw2, aw_one: $aw_one2, aw_two: $aw_two2, aw_three: $aw_three2, w: $w2, temp: $temp2, dewp: $dewp2, slp: $slp2, alt: $alt2, stp: $stp2, max: $max2, min: $min2, pcp_zero_one: $pcp_zero_one2, pcp_zero_six: $pcp_zero_six2, pcp_two_four: $pcp_two_four2, pcpxx: $pcpxx2, sd: $sd2),
                $alt1 == $alt2, $slp1 != $slp2 -> #fail. 

        
            e28: clean(usaf: $usaf1, wban: $wban1, yrmodahrmn: $yrmodahrmn1, dir: $dir1, spd: $spd1, gus: $gus1, clg: $clg1, skc: $skc1, l: $l1, m: $m1, h: $h1, vsb: $vsb1, mw: $mw1, mw_one: $mw_one1, mw_two: $mw_two1, mw_three: $mw_three1, aw: $aw1, aw_one: $aw_one1, aw_two: $aw_two1, aw_three: $aw_three1, w: $w1, temp: $temp1, dewp: $dewp1, slp: $slp1, alt: $alt1, stp: $stp1, max: $max1, min: $min1, pcp_zero_one: $pcp_zero_one1, pcp_zero_six: $pcp_zero_six1, pcp_two_four: $pcp_two_four1, pcpxx: $pcpxx1, sd: $sd1),
            clean(usaf: $usaf2, wban: $wban2, yrmodahrmn: $yrmodahrmn2, dir: $dir2, spd: $spd2, gus: $gus2, clg: $clg2, skc: $skc2, l: $l2, m: $m2, h: $h2, vsb: $vsb2, mw: $mw2, mw_one: $mw_one2, mw_two: $mw_two2, mw_three: $mw_three2, aw: $aw2, aw_one: $aw_one2, aw_two: $aw_two2, aw_three: $aw_three2, w: $w2, temp: $temp2, dewp: $dewp2, slp: $slp2, alt: $alt2, stp: $stp2, max: $max2, min: $min2, pcp_zero_one: $pcp_zero_one2, pcp_zero_six: $pcp_zero_six2, pcp_two_four: $pcp_two_four2, pcpxx: $pcpxx2, sd: $sd2),
                $pcp_two_four1 == $pcp_two_four2, $pcpxx1 != $pcpxx2 -> #fail. 

        
            e29: clean(usaf: $usaf1, wban: $wban1, yrmodahrmn: $yrmodahrmn1, dir: $dir1, spd: $spd1, gus: $gus1, clg: $clg1, skc: $skc1, l: $l1, m: $m1, h: $h1, vsb: $vsb1, mw: $mw1, mw_one: $mw_one1, mw_two: $mw_two1, mw_three: $mw_three1, aw: $aw1, aw_one: $aw_one1, aw_two: $aw_two1, aw_three: $aw_three1, w: $w1, temp: $temp1, dewp: $dewp1, slp: $slp1, alt: $alt1, stp: $stp1, max: $max1, min: $min1, pcp_zero_one: $pcp_zero_one1, pcp_zero_six: $pcp_zero_six1, pcp_two_four: $pcp_two_four1, pcpxx: $pcpxx1, sd: $sd1),
            clean(usaf: $usaf2, wban: $wban2, yrmodahrmn: $yrmodahrmn2, dir: $dir2, spd: $spd2, gus: $gus2, clg: $clg2, skc: $skc2, l: $l2, m: $m2, h: $h2, vsb: $vsb2, mw: $mw2, mw_one: $mw_one2, mw_two: $mw_two2, mw_three: $mw_three2, aw: $aw2, aw_one: $aw_one2, aw_two: $aw_two2, aw_three: $aw_three2, w: $w2, temp: $temp2, dewp: $dewp2, slp: $slp2, alt: $alt2, stp: $stp2, max: $max2, min: $min2, pcp_zero_one: $pcp_zero_one2, pcp_zero_six: $pcp_zero_six2, pcp_two_four: $pcp_two_four2, pcpxx: $pcpxx2, sd: $sd2),
                $mw_three1 == $mw_three2, $aw_two1 != $aw_two2 -> #fail. 

        
            e30: clean(usaf: $usaf1, wban: $wban1, yrmodahrmn: $yrmodahrmn1, dir: $dir1, spd: $spd1, gus: $gus1, clg: $clg1, skc: $skc1, l: $l1, m: $m1, h: $h1, vsb: $vsb1, mw: $mw1, mw_one: $mw_one1, mw_two: $mw_two1, mw_three: $mw_three1, aw: $aw1, aw_one: $aw_one1, aw_two: $aw_two1, aw_three: $aw_three1, w: $w1, temp: $temp1, dewp: $dewp1, slp: $slp1, alt: $alt1, stp: $stp1, max: $max1, min: $min1, pcp_zero_one: $pcp_zero_one1, pcp_zero_six: $pcp_zero_six1, pcp_two_four: $pcp_two_four1, pcpxx: $pcpxx1, sd: $sd1),
            clean(usaf: $usaf2, wban: $wban2, yrmodahrmn: $yrmodahrmn2, dir: $dir2, spd: $spd2, gus: $gus2, clg: $clg2, skc: $skc2, l: $l2, m: $m2, h: $h2, vsb: $vsb2, mw: $mw2, mw_one: $mw_one2, mw_two: $mw_two2, mw_three: $mw_three2, aw: $aw2, aw_one: $aw_one2, aw_two: $aw_two2, aw_three: $aw_three2, w: $w2, temp: $temp2, dewp: $dewp2, slp: $slp2, alt: $alt2, stp: $stp2, max: $max2, min: $min2, pcp_zero_one: $pcp_zero_one2, pcp_zero_six: $pcp_zero_six2, pcp_two_four: $pcp_two_four2, pcpxx: $pcpxx2, sd: $sd2),
                $aw1 == $aw2, $aw_two1 != $aw_two2 -> #fail. 

        
            e31: clean(usaf: $usaf1, wban: $wban1, yrmodahrmn: $yrmodahrmn1, dir: $dir1, spd: $spd1, gus: $gus1, clg: $clg1, skc: $skc1, l: $l1, m: $m1, h: $h1, vsb: $vsb1, mw: $mw1, mw_one: $mw_one1, mw_two: $mw_two1, mw_three: $mw_three1, aw: $aw1, aw_one: $aw_one1, aw_two: $aw_two1, aw_three: $aw_three1, w: $w1, temp: $temp1, dewp: $dewp1, slp: $slp1, alt: $alt1, stp: $stp1, max: $max1, min: $min1, pcp_zero_one: $pcp_zero_one1, pcp_zero_six: $pcp_zero_six1, pcp_two_four: $pcp_two_four1, pcpxx: $pcpxx1, sd: $sd1),
            clean(usaf: $usaf2, wban: $wban2, yrmodahrmn: $yrmodahrmn2, dir: $dir2, spd: $spd2, gus: $gus2, clg: $clg2, skc: $skc2, l: $l2, m: $m2, h: $h2, vsb: $vsb2, mw: $mw2, mw_one: $mw_one2, mw_two: $mw_two2, mw_three: $mw_three2, aw: $aw2, aw_one: $aw_one2, aw_two: $aw_two2, aw_three: $aw_three2, w: $w2, temp: $temp2, dewp: $dewp2, slp: $slp2, alt: $alt2, stp: $stp2, max: $max2, min: $min2, pcp_zero_one: $pcp_zero_one2, pcp_zero_six: $pcp_zero_six2, pcp_two_four: $pcp_two_four2, pcpxx: $pcpxx2, sd: $sd2),
                $aw_one1 == $aw_one2, $aw_two1 != $aw_two2 -> #fail. 

        ]]></dependencies>

    <!-- ****************************************************
                      CONFIGURATION
    **************************************************** -->
    <configuration>
        <!-- To print extra information in the ouput (default = false) -->
        <printLog>true</printLog>

        <!-- To load DB every time on start (default = false) -->
        <recreateDBOnStart>true</recreateDBOnStart>

        <!-- To apply the changes (default = false) -->
        <applyCellChanges>true</applyCellChanges>

        <!-- To  apply cell changes on a copy of the original target, with a custom suffix (default = true) -->
        <cloneTargetSchema>true</cloneTargetSchema>
        <cloneSuffix>_dirty</cloneSuffix>

        <!-- To export the dirty db -->
        <exportDirtyDB>true</exportDirtyDB>
        <exportDirtyDBPath>./</exportDirtyDBPath>
        <exportDirtyDBType>CSV</exportDirtyDBType>

        <!-- To export the changes -->
        <exportCellChanges>true</exportCellChanges>
        <exportCellChangesPath>clean_changes.csv</exportCellChangesPath>

        <!-- To compute an estimate of the reparability (default = false) -->
        <estimateRepairability>true</estimateRepairability>

        <!-- To generate all possible changes (default = false - slow, only for toy examples)-->
        <generateAllChanges>false</generateAllChanges>

        <!-- To avoid interactions among changes. (default = true) -->
        <avoidInteractions>true</avoidInteractions>

        <!-- To check, at the end of the process, if changes are detectable. (default = false) -->
        <checkChanges>true</checkChanges>

        <!-- To compute an estimate of the repairability. Requires checkChanges = true. (default = false) -->
        <estimateRepairability>true</estimateRepairability>

        <!-- To use an optimized strategy for updates. (default = true) -->
        <useDeltaDBForChanges>true</useDeltaDBForChanges>

        <!-- Error percentages for dependencies and comparisons 
        All percentages are wrt table sizes (# tuples) -->
        <errorPercentages>
            <defaultPercentage>0.0</defaultPercentage>
            <vioGenQueries>
            <vioGenQuery id="e1"><comparison>(wban1 == wban2)</comparison><percentage>0.19175455417066153</percentage></vioGenQuery><vioGenQuery id="e1"><comparison>(dewp1 != dewp2)</comparison><percentage>0.19175455417066153</percentage></vioGenQuery><vioGenQuery id="e2"><comparison>(wban1 == wban2)</comparison><percentage>0.19175455417066153</percentage></vioGenQuery><vioGenQuery id="e2"><comparison>(slp1 != slp2)</comparison><percentage>0.19175455417066153</percentage></vioGenQuery><vioGenQuery id="e3"><comparison>(wban1 == wban2)</comparison><percentage>0.19175455417066153</percentage></vioGenQuery><vioGenQuery id="e3"><comparison>(alt1 != alt2)</comparison><percentage>0.19175455417066153</percentage></vioGenQuery><vioGenQuery id="e4"><comparison>(wban1 == wban2)</comparison><percentage>0.19175455417066153</percentage></vioGenQuery><vioGenQuery id="e4"><comparison>(gus1 != gus2)</comparison><percentage>0.19175455417066153</percentage></vioGenQuery><vioGenQuery id="e5"><comparison>(wban1 == wban2)</comparison><percentage>0.19175455417066153</percentage></vioGenQuery><vioGenQuery id="e5"><comparison>(w1 != w2)</comparison><percentage>0.19175455417066153</percentage></vioGenQuery><vioGenQuery id="e6"><comparison>(wban1 == wban2)</comparison><percentage>0.19175455417066153</percentage></vioGenQuery><vioGenQuery id="e6"><comparison>(temp1 != temp2)</comparison><percentage>0.19175455417066153</percentage></vioGenQuery><vioGenQuery id="e7"><comparison>(wban1 == wban2)</comparison><percentage>0.19175455417066153</percentage></vioGenQuery><vioGenQuery id="e7"><comparison>(stp1 != stp2)</comparison><percentage>0.19175455417066153</percentage></vioGenQuery><vioGenQuery id="e8"><comparison>(wban1 == wban2)</comparison><percentage>0.19175455417066153</percentage></vioGenQuery><vioGenQuery id="e8"><comparison>(max1 != max2)</comparison><percentage>0.19175455417066153</percentage></vioGenQuery><vioGenQuery id="e9"><comparison>(wban1 == wban2)</comparison><percentage>0.19175455417066153</percentage></vioGenQuery><vioGenQuery id="e9"><comparison>(yrmodahrmn1 != yrmodahrmn2)</comparison><percentage>0.19175455417066153</percentage></vioGenQuery><vioGenQuery id="e10"><comparison>(wban1 == wban2)</comparison><percentage>0.19175455417066153</percentage></vioGenQuery><vioGenQuery id="e10"><comparison>(min1 != min2)</comparison><percentage>0.19175455417066153</percentage></vioGenQuery><vioGenQuery id="e11"><comparison>(wban1 == wban2)</comparison><percentage>0.19175455417066153</percentage></vioGenQuery><vioGenQuery id="e11"><comparison>(dir1 != dir2)</comparison><percentage>0.19175455417066153</percentage></vioGenQuery><vioGenQuery id="e12"><comparison>(wban1 == wban2)</comparison><percentage>0.09587727708533077</percentage></vioGenQuery><vioGenQuery id="e12"><comparison>(spd1 != spd2)</comparison><percentage>0.09587727708533077</percentage></vioGenQuery><vioGenQuery id="e13"><comparison>(wban1 == wban2)</comparison><percentage>0.09587727708533077</percentage></vioGenQuery><vioGenQuery id="e13"><comparison>(pcp_zero_six1 != pcp_zero_six2)</comparison><percentage>0.09587727708533077</percentage></vioGenQuery><vioGenQuery id="e14"><comparison>(wban1 == wban2)</comparison><percentage>0.09587727708533077</percentage></vioGenQuery><vioGenQuery id="e14"><comparison>(pcp_zero_one1 != pcp_zero_one2)</comparison><percentage>0.09587727708533077</percentage></vioGenQuery><vioGenQuery id="e15"><comparison>(wban1 == wban2)</comparison><percentage>0.09587727708533077</percentage></vioGenQuery><vioGenQuery id="e15"><comparison>(pcp_two_four1 != pcp_two_four2)</comparison><percentage>0.09587727708533077</percentage></vioGenQuery><vioGenQuery id="e16"><comparison>(wban1 == wban2)</comparison><percentage>0.09587727708533077</percentage></vioGenQuery><vioGenQuery id="e16"><comparison>(h1 != h2)</comparison><percentage>0.09587727708533077</percentage></vioGenQuery><vioGenQuery id="e17"><comparison>(wban1 == wban2)</comparison><percentage>0.09587727708533077</percentage></vioGenQuery><vioGenQuery id="e17"><comparison>(mw_three1 != mw_three2)</comparison><percentage>0.09587727708533077</percentage></vioGenQuery><vioGenQuery id="e18"><comparison>(wban1 == wban2)</comparison><percentage>0.09587727708533077</percentage></vioGenQuery><vioGenQuery id="e18"><comparison>(vsb1 != vsb2)</comparison><percentage>0.09587727708533077</percentage></vioGenQuery><vioGenQuery id="e19"><comparison>(wban1 == wban2)</comparison><percentage>0.09587727708533077</percentage></vioGenQuery><vioGenQuery id="e19"><comparison>(aw1 != aw2)</comparison><percentage>0.09587727708533077</percentage></vioGenQuery><vioGenQuery id="e20"><comparison>(wban1 == wban2)</comparison><percentage>0.09587727708533077</percentage></vioGenQuery><vioGenQuery id="e20"><comparison>(clg1 != clg2)</comparison><percentage>0.09587727708533077</percentage></vioGenQuery><vioGenQuery id="e21"><comparison>(wban1 == wban2)</comparison><percentage>0.09587727708533077</percentage></vioGenQuery><vioGenQuery id="e21"><comparison>(mw1 != mw2)</comparison><percentage>0.09587727708533077</percentage></vioGenQuery><vioGenQuery id="e22"><comparison>(wban1 == wban2)</comparison><percentage>0.09587727708533077</percentage></vioGenQuery><vioGenQuery id="e22"><comparison>(aw_one1 != aw_one2)</comparison><percentage>0.09587727708533077</percentage></vioGenQuery><vioGenQuery id="e23"><comparison>(wban1 == wban2)</comparison><percentage>0.09587727708533077</percentage></vioGenQuery><vioGenQuery id="e23"><comparison>(mw_one1 != mw_one2)</comparison><percentage>0.09587727708533077</percentage></vioGenQuery><vioGenQuery id="e24"><comparison>(wban1 == wban2)</comparison><percentage>0.09587727708533077</percentage></vioGenQuery><vioGenQuery id="e24"><comparison>(aw_two1 != aw_two2)</comparison><percentage>0.09587727708533077</percentage></vioGenQuery><vioGenQuery id="e25"><comparison>(wban1 == wban2)</comparison><percentage>0.09587727708533077</percentage></vioGenQuery><vioGenQuery id="e25"><comparison>(pcpxx1 != pcpxx2)</comparison><percentage>0.09587727708533077</percentage></vioGenQuery><vioGenQuery id="e26"><comparison>(slp1 == slp2)</comparison><percentage>0.09587727708533077</percentage></vioGenQuery><vioGenQuery id="e26"><comparison>(alt1 != alt2)</comparison><percentage>0.09587727708533077</percentage></vioGenQuery><vioGenQuery id="e27"><comparison>(alt1 == alt2)</comparison><percentage>0.09587727708533077</percentage></vioGenQuery><vioGenQuery id="e27"><comparison>(slp1 != slp2)</comparison><percentage>0.09587727708533077</percentage></vioGenQuery><vioGenQuery id="e28"><comparison>(pcp_two_four1 == pcp_two_four2)</comparison><percentage>0.09587727708533077</percentage></vioGenQuery><vioGenQuery id="e28"><comparison>(pcpxx1 != pcpxx2)</comparison><percentage>0.09587727708533077</percentage></vioGenQuery><vioGenQuery id="e29"><comparison>(mw_three1 == mw_three2)</comparison><percentage>0.09587727708533077</percentage></vioGenQuery><vioGenQuery id="e29"><comparison>(aw_two1 != aw_two2)</comparison><percentage>0.09587727708533077</percentage></vioGenQuery><vioGenQuery id="e30"><comparison>(aw1 == aw2)</comparison><percentage>0.09587727708533077</percentage></vioGenQuery><vioGenQuery id="e30"><comparison>(aw_two1 != aw_two2)</comparison><percentage>0.09587727708533077</percentage></vioGenQuery><vioGenQuery id="e31"><comparison>(aw_one1 == aw_one2)</comparison><percentage>0.09587727708533077</percentage></vioGenQuery><vioGenQuery id="e31"><comparison>(aw_two1 != aw_two2)</comparison><percentage>0.09587727708533077</percentage></vioGenQuery></vioGenQueries>
        </errorPercentages>

        <!-- To control the way in which changing the value -->
        <dirtyStrategies>
            <defaultStrategy>
                <strategy> TypoRandom </strategy>
            </defaultStrategy> 
            <!-- possible strategies
                <strategy chars="*" charsToAdd="3">TypoAddString</strategy>
                <strategy chars="*" charsToAdd="3">TypoAppendString</strategy>
                <strategy charsToRemove="3">TypoRemoveString</strategy>
                <strategy charsToSwitch="3">TypoSwitchValue</strategy>
                <strategy>TypoActiveDomain</strategy>
                <strategy>TypoRandom</strategy>
            -->
        </dirtyStrategies>

        <randomErrors>
            <tables>
                <table name="clean"> 
                    <percentage>4</percentage> <!-- Percentage is wrt attributes to dirty in the table -->
                    <attributes>
                    <atrribute>yrmodahrmn</atrribute><atrribute>dir</atrribute><atrribute>spd</atrribute><atrribute>gus</atrribute><atrribute>clg</atrribute><atrribute>skc</atrribute><atrribute>l</atrribute><atrribute>m</atrribute><atrribute>h</atrribute><atrribute>vsb</atrribute><atrribute>mw</atrribute><atrribute>mw_one</atrribute><atrribute>mw_two</atrribute><atrribute>mw_three</atrribute><atrribute>aw</atrribute><atrribute>aw_one</atrribute><atrribute>aw_two</atrribute><atrribute>aw_three</atrribute><atrribute>w</atrribute><atrribute>temp</atrribute><atrribute>dewp</atrribute><atrribute>slp</atrribute><atrribute>alt</atrribute><atrribute>stp</atrribute><atrribute>max</atrribute><atrribute>min</atrribute><atrribute>pcp_zero_one</atrribute><atrribute>pcp_zero_six</atrribute><atrribute>pcp_two_four</atrribute><atrribute>pcpxx</atrribute></attributes>
                </table>
            </tables>
        </randomErrors>
    
        <outlierErrors>
            <tables>
                <table name="clean">
                    <attributes>
                    <atrribute percentage="1" detectable="true">usaf</atrribute><atrribute percentage="1" detectable="true">wban</atrribute><atrribute percentage="1" detectable="true">sd</atrribute></attributes>
                </table>
            </tables>
        </outlierErrors>
        
        <!-- The following parameters are used to control the sampling process.
            All the fields are optional, but they may be crucial to obtain a good random sample.
            In order to choose the cells to modify, BART will scan the result of a viogen query
            using the following sampling algorithm:
            1) First, a number of tuples are skipped. This is a random number choosed btw 
                0 and (offsetFactor * tableSize)
            2) Then BART will scan the result and will pickup tuples 
            with a probability p = probabilityFactor.
            
            BART uses three kinds of queries
            - Symmetric queries: for symmetric viogen queries (see paper)
            - Inequality queries: for viogen queries without equalities (i.e. inequalities only)
            - Standard queries: for all other viogen queries
        -->
        <vioGenQueriesConfiguration>
            <!-- STANDARD QUERIES -->
            <probabilityFactorForStandardQueries>0.25</probabilityFactorForStandardQueries>
            <offsetFactorForStandardQueries>0.05</offsetFactorForStandardQueries>
            <!-- SYMMETRIC QUERIES -->
            <probabilityFactorForSymmetricQueries>0.25</probabilityFactorForSymmetricQueries>
            <offsetFactorForSymmetricQueries>0.05</offsetFactorForSymmetricQueries>
            <!-- INEQUALITY QUERIES -->
            <probabilityFactorForInequalityQueries>0.05</probabilityFactorForInequalityQueries>
            <offsetFactorForInequalityQueries>0.05</offsetFactorForInequalityQueries>
            <windowSizeFactorForInequalityQueries>1.5</windowSizeFactorForInequalityQueries>
        </vioGenQueriesConfiguration>

    </configuration>
</task>