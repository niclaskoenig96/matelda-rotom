<task>
    <!-- ****************************************************
                      DATABASES
    **************************************************** -->
    <target> 
        <type>DBMS</type>
        <access-configuration>
            <driver>org.postgresql.Driver</driver>
            <uri>jdbc:postgresql://localhost:5433/bartdb</uri>
            <schema>target</schema>
            <login>postgres</login>
            <password>postgres</password>
        </access-configuration>
        <import>
            <input type="csv" separator="," table="clean">/home/fatemeh/ED-Scale/Sandbox_Generation/metanome_input_files/processed/COVID-19_Cases__Tests__and_Deaths_by_ZIP_Code/clean.csv</input>
        </import>
    </target>

    <!-- ****************************************************
                    DEPENDENCIES
    **************************************************** -->
    <dependencies><![CDATA[DCs: 

            e1: clean(zip_code: $zip_code1, week_number: $week_number1, week_start: $week_start1, week_end: $week_end1, cases_weekly: $cases_weekly1, cases_cumulative: $cases_cumulative1, case_rate_weekly: $case_rate_weekly1, case_rate_cumulative: $case_rate_cumulative1, tests_weekly: $tests_weekly1, tests_cumulative: $tests_cumulative1, test_rate_weekly: $test_rate_weekly1, test_rate_cumulative: $test_rate_cumulative1, percent_tested_positive_weekly: $percent_tested_positive_weekly1, percent_tested_positive_cumulative: $percent_tested_positive_cumulative1, deaths_weekly: $deaths_weekly1, deaths_cumulative: $deaths_cumulative1, death_rate_weekly: $death_rate_weekly1, death_rate_cumulative: $death_rate_cumulative1, population: $population1, rowid: $rowid1, zip_code_location: $zip_code_location1),
            clean(zip_code: $zip_code2, week_number: $week_number2, week_start: $week_start2, week_end: $week_end2, cases_weekly: $cases_weekly2, cases_cumulative: $cases_cumulative2, case_rate_weekly: $case_rate_weekly2, case_rate_cumulative: $case_rate_cumulative2, tests_weekly: $tests_weekly2, tests_cumulative: $tests_cumulative2, test_rate_weekly: $test_rate_weekly2, test_rate_cumulative: $test_rate_cumulative2, percent_tested_positive_weekly: $percent_tested_positive_weekly2, percent_tested_positive_cumulative: $percent_tested_positive_cumulative2, deaths_weekly: $deaths_weekly2, deaths_cumulative: $deaths_cumulative2, death_rate_weekly: $death_rate_weekly2, death_rate_cumulative: $death_rate_cumulative2, population: $population2, rowid: $rowid2, zip_code_location: $zip_code_location2),
                $rowid1 == $rowid2, $test_rate_cumulative1 != $test_rate_cumulative2 -> #fail. 

        
            e2: clean(zip_code: $zip_code1, week_number: $week_number1, week_start: $week_start1, week_end: $week_end1, cases_weekly: $cases_weekly1, cases_cumulative: $cases_cumulative1, case_rate_weekly: $case_rate_weekly1, case_rate_cumulative: $case_rate_cumulative1, tests_weekly: $tests_weekly1, tests_cumulative: $tests_cumulative1, test_rate_weekly: $test_rate_weekly1, test_rate_cumulative: $test_rate_cumulative1, percent_tested_positive_weekly: $percent_tested_positive_weekly1, percent_tested_positive_cumulative: $percent_tested_positive_cumulative1, deaths_weekly: $deaths_weekly1, deaths_cumulative: $deaths_cumulative1, death_rate_weekly: $death_rate_weekly1, death_rate_cumulative: $death_rate_cumulative1, population: $population1, rowid: $rowid1, zip_code_location: $zip_code_location1),
            clean(zip_code: $zip_code2, week_number: $week_number2, week_start: $week_start2, week_end: $week_end2, cases_weekly: $cases_weekly2, cases_cumulative: $cases_cumulative2, case_rate_weekly: $case_rate_weekly2, case_rate_cumulative: $case_rate_cumulative2, tests_weekly: $tests_weekly2, tests_cumulative: $tests_cumulative2, test_rate_weekly: $test_rate_weekly2, test_rate_cumulative: $test_rate_cumulative2, percent_tested_positive_weekly: $percent_tested_positive_weekly2, percent_tested_positive_cumulative: $percent_tested_positive_cumulative2, deaths_weekly: $deaths_weekly2, deaths_cumulative: $deaths_cumulative2, death_rate_weekly: $death_rate_weekly2, death_rate_cumulative: $death_rate_cumulative2, population: $population2, rowid: $rowid2, zip_code_location: $zip_code_location2),
                $rowid1 == $rowid2, $case_rate_cumulative1 != $case_rate_cumulative2 -> #fail. 

        
            e3: clean(zip_code: $zip_code1, week_number: $week_number1, week_start: $week_start1, week_end: $week_end1, cases_weekly: $cases_weekly1, cases_cumulative: $cases_cumulative1, case_rate_weekly: $case_rate_weekly1, case_rate_cumulative: $case_rate_cumulative1, tests_weekly: $tests_weekly1, tests_cumulative: $tests_cumulative1, test_rate_weekly: $test_rate_weekly1, test_rate_cumulative: $test_rate_cumulative1, percent_tested_positive_weekly: $percent_tested_positive_weekly1, percent_tested_positive_cumulative: $percent_tested_positive_cumulative1, deaths_weekly: $deaths_weekly1, deaths_cumulative: $deaths_cumulative1, death_rate_weekly: $death_rate_weekly1, death_rate_cumulative: $death_rate_cumulative1, population: $population1, rowid: $rowid1, zip_code_location: $zip_code_location1),
            clean(zip_code: $zip_code2, week_number: $week_number2, week_start: $week_start2, week_end: $week_end2, cases_weekly: $cases_weekly2, cases_cumulative: $cases_cumulative2, case_rate_weekly: $case_rate_weekly2, case_rate_cumulative: $case_rate_cumulative2, tests_weekly: $tests_weekly2, tests_cumulative: $tests_cumulative2, test_rate_weekly: $test_rate_weekly2, test_rate_cumulative: $test_rate_cumulative2, percent_tested_positive_weekly: $percent_tested_positive_weekly2, percent_tested_positive_cumulative: $percent_tested_positive_cumulative2, deaths_weekly: $deaths_weekly2, deaths_cumulative: $deaths_cumulative2, death_rate_weekly: $death_rate_weekly2, death_rate_cumulative: $death_rate_cumulative2, population: $population2, rowid: $rowid2, zip_code_location: $zip_code_location2),
                $rowid1 == $rowid2, $tests_cumulative1 != $tests_cumulative2 -> #fail. 

        
            e4: clean(zip_code: $zip_code1, week_number: $week_number1, week_start: $week_start1, week_end: $week_end1, cases_weekly: $cases_weekly1, cases_cumulative: $cases_cumulative1, case_rate_weekly: $case_rate_weekly1, case_rate_cumulative: $case_rate_cumulative1, tests_weekly: $tests_weekly1, tests_cumulative: $tests_cumulative1, test_rate_weekly: $test_rate_weekly1, test_rate_cumulative: $test_rate_cumulative1, percent_tested_positive_weekly: $percent_tested_positive_weekly1, percent_tested_positive_cumulative: $percent_tested_positive_cumulative1, deaths_weekly: $deaths_weekly1, deaths_cumulative: $deaths_cumulative1, death_rate_weekly: $death_rate_weekly1, death_rate_cumulative: $death_rate_cumulative1, population: $population1, rowid: $rowid1, zip_code_location: $zip_code_location1),
            clean(zip_code: $zip_code2, week_number: $week_number2, week_start: $week_start2, week_end: $week_end2, cases_weekly: $cases_weekly2, cases_cumulative: $cases_cumulative2, case_rate_weekly: $case_rate_weekly2, case_rate_cumulative: $case_rate_cumulative2, tests_weekly: $tests_weekly2, tests_cumulative: $tests_cumulative2, test_rate_weekly: $test_rate_weekly2, test_rate_cumulative: $test_rate_cumulative2, percent_tested_positive_weekly: $percent_tested_positive_weekly2, percent_tested_positive_cumulative: $percent_tested_positive_cumulative2, deaths_weekly: $deaths_weekly2, deaths_cumulative: $deaths_cumulative2, death_rate_weekly: $death_rate_weekly2, death_rate_cumulative: $death_rate_cumulative2, population: $population2, rowid: $rowid2, zip_code_location: $zip_code_location2),
                $rowid1 == $rowid2, $cases_cumulative1 != $cases_cumulative2 -> #fail. 

        
            e5: clean(zip_code: $zip_code1, week_number: $week_number1, week_start: $week_start1, week_end: $week_end1, cases_weekly: $cases_weekly1, cases_cumulative: $cases_cumulative1, case_rate_weekly: $case_rate_weekly1, case_rate_cumulative: $case_rate_cumulative1, tests_weekly: $tests_weekly1, tests_cumulative: $tests_cumulative1, test_rate_weekly: $test_rate_weekly1, test_rate_cumulative: $test_rate_cumulative1, percent_tested_positive_weekly: $percent_tested_positive_weekly1, percent_tested_positive_cumulative: $percent_tested_positive_cumulative1, deaths_weekly: $deaths_weekly1, deaths_cumulative: $deaths_cumulative1, death_rate_weekly: $death_rate_weekly1, death_rate_cumulative: $death_rate_cumulative1, population: $population1, rowid: $rowid1, zip_code_location: $zip_code_location1),
            clean(zip_code: $zip_code2, week_number: $week_number2, week_start: $week_start2, week_end: $week_end2, cases_weekly: $cases_weekly2, cases_cumulative: $cases_cumulative2, case_rate_weekly: $case_rate_weekly2, case_rate_cumulative: $case_rate_cumulative2, tests_weekly: $tests_weekly2, tests_cumulative: $tests_cumulative2, test_rate_weekly: $test_rate_weekly2, test_rate_cumulative: $test_rate_cumulative2, percent_tested_positive_weekly: $percent_tested_positive_weekly2, percent_tested_positive_cumulative: $percent_tested_positive_cumulative2, deaths_weekly: $deaths_weekly2, deaths_cumulative: $deaths_cumulative2, death_rate_weekly: $death_rate_weekly2, death_rate_cumulative: $death_rate_cumulative2, population: $population2, rowid: $rowid2, zip_code_location: $zip_code_location2),
                $rowid1 == $rowid2, $test_rate_weekly1 != $test_rate_weekly2 -> #fail. 

        
            e6: clean(zip_code: $zip_code1, week_number: $week_number1, week_start: $week_start1, week_end: $week_end1, cases_weekly: $cases_weekly1, cases_cumulative: $cases_cumulative1, case_rate_weekly: $case_rate_weekly1, case_rate_cumulative: $case_rate_cumulative1, tests_weekly: $tests_weekly1, tests_cumulative: $tests_cumulative1, test_rate_weekly: $test_rate_weekly1, test_rate_cumulative: $test_rate_cumulative1, percent_tested_positive_weekly: $percent_tested_positive_weekly1, percent_tested_positive_cumulative: $percent_tested_positive_cumulative1, deaths_weekly: $deaths_weekly1, deaths_cumulative: $deaths_cumulative1, death_rate_weekly: $death_rate_weekly1, death_rate_cumulative: $death_rate_cumulative1, population: $population1, rowid: $rowid1, zip_code_location: $zip_code_location1),
            clean(zip_code: $zip_code2, week_number: $week_number2, week_start: $week_start2, week_end: $week_end2, cases_weekly: $cases_weekly2, cases_cumulative: $cases_cumulative2, case_rate_weekly: $case_rate_weekly2, case_rate_cumulative: $case_rate_cumulative2, tests_weekly: $tests_weekly2, tests_cumulative: $tests_cumulative2, test_rate_weekly: $test_rate_weekly2, test_rate_cumulative: $test_rate_cumulative2, percent_tested_positive_weekly: $percent_tested_positive_weekly2, percent_tested_positive_cumulative: $percent_tested_positive_cumulative2, deaths_weekly: $deaths_weekly2, deaths_cumulative: $deaths_cumulative2, death_rate_weekly: $death_rate_weekly2, death_rate_cumulative: $death_rate_cumulative2, population: $population2, rowid: $rowid2, zip_code_location: $zip_code_location2),
                $rowid1 == $rowid2, $tests_weekly1 != $tests_weekly2 -> #fail. 

        
            e7: clean(zip_code: $zip_code1, week_number: $week_number1, week_start: $week_start1, week_end: $week_end1, cases_weekly: $cases_weekly1, cases_cumulative: $cases_cumulative1, case_rate_weekly: $case_rate_weekly1, case_rate_cumulative: $case_rate_cumulative1, tests_weekly: $tests_weekly1, tests_cumulative: $tests_cumulative1, test_rate_weekly: $test_rate_weekly1, test_rate_cumulative: $test_rate_cumulative1, percent_tested_positive_weekly: $percent_tested_positive_weekly1, percent_tested_positive_cumulative: $percent_tested_positive_cumulative1, deaths_weekly: $deaths_weekly1, deaths_cumulative: $deaths_cumulative1, death_rate_weekly: $death_rate_weekly1, death_rate_cumulative: $death_rate_cumulative1, population: $population1, rowid: $rowid1, zip_code_location: $zip_code_location1),
            clean(zip_code: $zip_code2, week_number: $week_number2, week_start: $week_start2, week_end: $week_end2, cases_weekly: $cases_weekly2, cases_cumulative: $cases_cumulative2, case_rate_weekly: $case_rate_weekly2, case_rate_cumulative: $case_rate_cumulative2, tests_weekly: $tests_weekly2, tests_cumulative: $tests_cumulative2, test_rate_weekly: $test_rate_weekly2, test_rate_cumulative: $test_rate_cumulative2, percent_tested_positive_weekly: $percent_tested_positive_weekly2, percent_tested_positive_cumulative: $percent_tested_positive_cumulative2, deaths_weekly: $deaths_weekly2, deaths_cumulative: $deaths_cumulative2, death_rate_weekly: $death_rate_weekly2, death_rate_cumulative: $death_rate_cumulative2, population: $population2, rowid: $rowid2, zip_code_location: $zip_code_location2),
                $rowid1 == $rowid2, $death_rate_cumulative1 != $death_rate_cumulative2 -> #fail. 

        
            e8: clean(zip_code: $zip_code1, week_number: $week_number1, week_start: $week_start1, week_end: $week_end1, cases_weekly: $cases_weekly1, cases_cumulative: $cases_cumulative1, case_rate_weekly: $case_rate_weekly1, case_rate_cumulative: $case_rate_cumulative1, tests_weekly: $tests_weekly1, tests_cumulative: $tests_cumulative1, test_rate_weekly: $test_rate_weekly1, test_rate_cumulative: $test_rate_cumulative1, percent_tested_positive_weekly: $percent_tested_positive_weekly1, percent_tested_positive_cumulative: $percent_tested_positive_cumulative1, deaths_weekly: $deaths_weekly1, deaths_cumulative: $deaths_cumulative1, death_rate_weekly: $death_rate_weekly1, death_rate_cumulative: $death_rate_cumulative1, population: $population1, rowid: $rowid1, zip_code_location: $zip_code_location1),
            clean(zip_code: $zip_code2, week_number: $week_number2, week_start: $week_start2, week_end: $week_end2, cases_weekly: $cases_weekly2, cases_cumulative: $cases_cumulative2, case_rate_weekly: $case_rate_weekly2, case_rate_cumulative: $case_rate_cumulative2, tests_weekly: $tests_weekly2, tests_cumulative: $tests_cumulative2, test_rate_weekly: $test_rate_weekly2, test_rate_cumulative: $test_rate_cumulative2, percent_tested_positive_weekly: $percent_tested_positive_weekly2, percent_tested_positive_cumulative: $percent_tested_positive_cumulative2, deaths_weekly: $deaths_weekly2, deaths_cumulative: $deaths_cumulative2, death_rate_weekly: $death_rate_weekly2, death_rate_cumulative: $death_rate_cumulative2, population: $population2, rowid: $rowid2, zip_code_location: $zip_code_location2),
                $rowid1 == $rowid2, $case_rate_weekly1 != $case_rate_weekly2 -> #fail. 

        
            e9: clean(zip_code: $zip_code1, week_number: $week_number1, week_start: $week_start1, week_end: $week_end1, cases_weekly: $cases_weekly1, cases_cumulative: $cases_cumulative1, case_rate_weekly: $case_rate_weekly1, case_rate_cumulative: $case_rate_cumulative1, tests_weekly: $tests_weekly1, tests_cumulative: $tests_cumulative1, test_rate_weekly: $test_rate_weekly1, test_rate_cumulative: $test_rate_cumulative1, percent_tested_positive_weekly: $percent_tested_positive_weekly1, percent_tested_positive_cumulative: $percent_tested_positive_cumulative1, deaths_weekly: $deaths_weekly1, deaths_cumulative: $deaths_cumulative1, death_rate_weekly: $death_rate_weekly1, death_rate_cumulative: $death_rate_cumulative1, population: $population1, rowid: $rowid1, zip_code_location: $zip_code_location1),
            clean(zip_code: $zip_code2, week_number: $week_number2, week_start: $week_start2, week_end: $week_end2, cases_weekly: $cases_weekly2, cases_cumulative: $cases_cumulative2, case_rate_weekly: $case_rate_weekly2, case_rate_cumulative: $case_rate_cumulative2, tests_weekly: $tests_weekly2, tests_cumulative: $tests_cumulative2, test_rate_weekly: $test_rate_weekly2, test_rate_cumulative: $test_rate_cumulative2, percent_tested_positive_weekly: $percent_tested_positive_weekly2, percent_tested_positive_cumulative: $percent_tested_positive_cumulative2, deaths_weekly: $deaths_weekly2, deaths_cumulative: $deaths_cumulative2, death_rate_weekly: $death_rate_weekly2, death_rate_cumulative: $death_rate_cumulative2, population: $population2, rowid: $rowid2, zip_code_location: $zip_code_location2),
                $rowid1 == $rowid2, $cases_weekly1 != $cases_weekly2 -> #fail. 

        
            e10: clean(zip_code: $zip_code1, week_number: $week_number1, week_start: $week_start1, week_end: $week_end1, cases_weekly: $cases_weekly1, cases_cumulative: $cases_cumulative1, case_rate_weekly: $case_rate_weekly1, case_rate_cumulative: $case_rate_cumulative1, tests_weekly: $tests_weekly1, tests_cumulative: $tests_cumulative1, test_rate_weekly: $test_rate_weekly1, test_rate_cumulative: $test_rate_cumulative1, percent_tested_positive_weekly: $percent_tested_positive_weekly1, percent_tested_positive_cumulative: $percent_tested_positive_cumulative1, deaths_weekly: $deaths_weekly1, deaths_cumulative: $deaths_cumulative1, death_rate_weekly: $death_rate_weekly1, death_rate_cumulative: $death_rate_cumulative1, population: $population1, rowid: $rowid1, zip_code_location: $zip_code_location1),
            clean(zip_code: $zip_code2, week_number: $week_number2, week_start: $week_start2, week_end: $week_end2, cases_weekly: $cases_weekly2, cases_cumulative: $cases_cumulative2, case_rate_weekly: $case_rate_weekly2, case_rate_cumulative: $case_rate_cumulative2, tests_weekly: $tests_weekly2, tests_cumulative: $tests_cumulative2, test_rate_weekly: $test_rate_weekly2, test_rate_cumulative: $test_rate_cumulative2, percent_tested_positive_weekly: $percent_tested_positive_weekly2, percent_tested_positive_cumulative: $percent_tested_positive_cumulative2, deaths_weekly: $deaths_weekly2, deaths_cumulative: $deaths_cumulative2, death_rate_weekly: $death_rate_weekly2, death_rate_cumulative: $death_rate_cumulative2, population: $population2, rowid: $rowid2, zip_code_location: $zip_code_location2),
                $rowid1 == $rowid2, $deaths_cumulative1 != $deaths_cumulative2 -> #fail. 

        
            e11: clean(zip_code: $zip_code1, week_number: $week_number1, week_start: $week_start1, week_end: $week_end1, cases_weekly: $cases_weekly1, cases_cumulative: $cases_cumulative1, case_rate_weekly: $case_rate_weekly1, case_rate_cumulative: $case_rate_cumulative1, tests_weekly: $tests_weekly1, tests_cumulative: $tests_cumulative1, test_rate_weekly: $test_rate_weekly1, test_rate_cumulative: $test_rate_cumulative1, percent_tested_positive_weekly: $percent_tested_positive_weekly1, percent_tested_positive_cumulative: $percent_tested_positive_cumulative1, deaths_weekly: $deaths_weekly1, deaths_cumulative: $deaths_cumulative1, death_rate_weekly: $death_rate_weekly1, death_rate_cumulative: $death_rate_cumulative1, population: $population1, rowid: $rowid1, zip_code_location: $zip_code_location1),
            clean(zip_code: $zip_code2, week_number: $week_number2, week_start: $week_start2, week_end: $week_end2, cases_weekly: $cases_weekly2, cases_cumulative: $cases_cumulative2, case_rate_weekly: $case_rate_weekly2, case_rate_cumulative: $case_rate_cumulative2, tests_weekly: $tests_weekly2, tests_cumulative: $tests_cumulative2, test_rate_weekly: $test_rate_weekly2, test_rate_cumulative: $test_rate_cumulative2, percent_tested_positive_weekly: $percent_tested_positive_weekly2, percent_tested_positive_cumulative: $percent_tested_positive_cumulative2, deaths_weekly: $deaths_weekly2, deaths_cumulative: $deaths_cumulative2, death_rate_weekly: $death_rate_weekly2, death_rate_cumulative: $death_rate_cumulative2, population: $population2, rowid: $rowid2, zip_code_location: $zip_code_location2),
                $rowid1 == $rowid2, $death_rate_weekly1 != $death_rate_weekly2 -> #fail. 

        
            e12: clean(zip_code: $zip_code1, week_number: $week_number1, week_start: $week_start1, week_end: $week_end1, cases_weekly: $cases_weekly1, cases_cumulative: $cases_cumulative1, case_rate_weekly: $case_rate_weekly1, case_rate_cumulative: $case_rate_cumulative1, tests_weekly: $tests_weekly1, tests_cumulative: $tests_cumulative1, test_rate_weekly: $test_rate_weekly1, test_rate_cumulative: $test_rate_cumulative1, percent_tested_positive_weekly: $percent_tested_positive_weekly1, percent_tested_positive_cumulative: $percent_tested_positive_cumulative1, deaths_weekly: $deaths_weekly1, deaths_cumulative: $deaths_cumulative1, death_rate_weekly: $death_rate_weekly1, death_rate_cumulative: $death_rate_cumulative1, population: $population1, rowid: $rowid1, zip_code_location: $zip_code_location1),
            clean(zip_code: $zip_code2, week_number: $week_number2, week_start: $week_start2, week_end: $week_end2, cases_weekly: $cases_weekly2, cases_cumulative: $cases_cumulative2, case_rate_weekly: $case_rate_weekly2, case_rate_cumulative: $case_rate_cumulative2, tests_weekly: $tests_weekly2, tests_cumulative: $tests_cumulative2, test_rate_weekly: $test_rate_weekly2, test_rate_cumulative: $test_rate_cumulative2, percent_tested_positive_weekly: $percent_tested_positive_weekly2, percent_tested_positive_cumulative: $percent_tested_positive_cumulative2, deaths_weekly: $deaths_weekly2, deaths_cumulative: $deaths_cumulative2, death_rate_weekly: $death_rate_weekly2, death_rate_cumulative: $death_rate_cumulative2, population: $population2, rowid: $rowid2, zip_code_location: $zip_code_location2),
                $rowid1 == $rowid2, $week_start1 != $week_start2 -> #fail. 

        
            e13: clean(zip_code: $zip_code1, week_number: $week_number1, week_start: $week_start1, week_end: $week_end1, cases_weekly: $cases_weekly1, cases_cumulative: $cases_cumulative1, case_rate_weekly: $case_rate_weekly1, case_rate_cumulative: $case_rate_cumulative1, tests_weekly: $tests_weekly1, tests_cumulative: $tests_cumulative1, test_rate_weekly: $test_rate_weekly1, test_rate_cumulative: $test_rate_cumulative1, percent_tested_positive_weekly: $percent_tested_positive_weekly1, percent_tested_positive_cumulative: $percent_tested_positive_cumulative1, deaths_weekly: $deaths_weekly1, deaths_cumulative: $deaths_cumulative1, death_rate_weekly: $death_rate_weekly1, death_rate_cumulative: $death_rate_cumulative1, population: $population1, rowid: $rowid1, zip_code_location: $zip_code_location1),
            clean(zip_code: $zip_code2, week_number: $week_number2, week_start: $week_start2, week_end: $week_end2, cases_weekly: $cases_weekly2, cases_cumulative: $cases_cumulative2, case_rate_weekly: $case_rate_weekly2, case_rate_cumulative: $case_rate_cumulative2, tests_weekly: $tests_weekly2, tests_cumulative: $tests_cumulative2, test_rate_weekly: $test_rate_weekly2, test_rate_cumulative: $test_rate_cumulative2, percent_tested_positive_weekly: $percent_tested_positive_weekly2, percent_tested_positive_cumulative: $percent_tested_positive_cumulative2, deaths_weekly: $deaths_weekly2, deaths_cumulative: $deaths_cumulative2, death_rate_weekly: $death_rate_weekly2, death_rate_cumulative: $death_rate_cumulative2, population: $population2, rowid: $rowid2, zip_code_location: $zip_code_location2),
                $rowid1 == $rowid2, $week_end1 != $week_end2 -> #fail. 

        
            e14: clean(zip_code: $zip_code1, week_number: $week_number1, week_start: $week_start1, week_end: $week_end1, cases_weekly: $cases_weekly1, cases_cumulative: $cases_cumulative1, case_rate_weekly: $case_rate_weekly1, case_rate_cumulative: $case_rate_cumulative1, tests_weekly: $tests_weekly1, tests_cumulative: $tests_cumulative1, test_rate_weekly: $test_rate_weekly1, test_rate_cumulative: $test_rate_cumulative1, percent_tested_positive_weekly: $percent_tested_positive_weekly1, percent_tested_positive_cumulative: $percent_tested_positive_cumulative1, deaths_weekly: $deaths_weekly1, deaths_cumulative: $deaths_cumulative1, death_rate_weekly: $death_rate_weekly1, death_rate_cumulative: $death_rate_cumulative1, population: $population1, rowid: $rowid1, zip_code_location: $zip_code_location1),
            clean(zip_code: $zip_code2, week_number: $week_number2, week_start: $week_start2, week_end: $week_end2, cases_weekly: $cases_weekly2, cases_cumulative: $cases_cumulative2, case_rate_weekly: $case_rate_weekly2, case_rate_cumulative: $case_rate_cumulative2, tests_weekly: $tests_weekly2, tests_cumulative: $tests_cumulative2, test_rate_weekly: $test_rate_weekly2, test_rate_cumulative: $test_rate_cumulative2, percent_tested_positive_weekly: $percent_tested_positive_weekly2, percent_tested_positive_cumulative: $percent_tested_positive_cumulative2, deaths_weekly: $deaths_weekly2, deaths_cumulative: $deaths_cumulative2, death_rate_weekly: $death_rate_weekly2, death_rate_cumulative: $death_rate_cumulative2, population: $population2, rowid: $rowid2, zip_code_location: $zip_code_location2),
                $rowid1 == $rowid2, $zip_code1 != $zip_code2 -> #fail. 

        
            e15: clean(zip_code: $zip_code1, week_number: $week_number1, week_start: $week_start1, week_end: $week_end1, cases_weekly: $cases_weekly1, cases_cumulative: $cases_cumulative1, case_rate_weekly: $case_rate_weekly1, case_rate_cumulative: $case_rate_cumulative1, tests_weekly: $tests_weekly1, tests_cumulative: $tests_cumulative1, test_rate_weekly: $test_rate_weekly1, test_rate_cumulative: $test_rate_cumulative1, percent_tested_positive_weekly: $percent_tested_positive_weekly1, percent_tested_positive_cumulative: $percent_tested_positive_cumulative1, deaths_weekly: $deaths_weekly1, deaths_cumulative: $deaths_cumulative1, death_rate_weekly: $death_rate_weekly1, death_rate_cumulative: $death_rate_cumulative1, population: $population1, rowid: $rowid1, zip_code_location: $zip_code_location1),
            clean(zip_code: $zip_code2, week_number: $week_number2, week_start: $week_start2, week_end: $week_end2, cases_weekly: $cases_weekly2, cases_cumulative: $cases_cumulative2, case_rate_weekly: $case_rate_weekly2, case_rate_cumulative: $case_rate_cumulative2, tests_weekly: $tests_weekly2, tests_cumulative: $tests_cumulative2, test_rate_weekly: $test_rate_weekly2, test_rate_cumulative: $test_rate_cumulative2, percent_tested_positive_weekly: $percent_tested_positive_weekly2, percent_tested_positive_cumulative: $percent_tested_positive_cumulative2, deaths_weekly: $deaths_weekly2, deaths_cumulative: $deaths_cumulative2, death_rate_weekly: $death_rate_weekly2, death_rate_cumulative: $death_rate_cumulative2, population: $population2, rowid: $rowid2, zip_code_location: $zip_code_location2),
                $rowid1 == $rowid2, $zip_code_location1 != $zip_code_location2 -> #fail. 

        
            e16: clean(zip_code: $zip_code1, week_number: $week_number1, week_start: $week_start1, week_end: $week_end1, cases_weekly: $cases_weekly1, cases_cumulative: $cases_cumulative1, case_rate_weekly: $case_rate_weekly1, case_rate_cumulative: $case_rate_cumulative1, tests_weekly: $tests_weekly1, tests_cumulative: $tests_cumulative1, test_rate_weekly: $test_rate_weekly1, test_rate_cumulative: $test_rate_cumulative1, percent_tested_positive_weekly: $percent_tested_positive_weekly1, percent_tested_positive_cumulative: $percent_tested_positive_cumulative1, deaths_weekly: $deaths_weekly1, deaths_cumulative: $deaths_cumulative1, death_rate_weekly: $death_rate_weekly1, death_rate_cumulative: $death_rate_cumulative1, population: $population1, rowid: $rowid1, zip_code_location: $zip_code_location1),
            clean(zip_code: $zip_code2, week_number: $week_number2, week_start: $week_start2, week_end: $week_end2, cases_weekly: $cases_weekly2, cases_cumulative: $cases_cumulative2, case_rate_weekly: $case_rate_weekly2, case_rate_cumulative: $case_rate_cumulative2, tests_weekly: $tests_weekly2, tests_cumulative: $tests_cumulative2, test_rate_weekly: $test_rate_weekly2, test_rate_cumulative: $test_rate_cumulative2, percent_tested_positive_weekly: $percent_tested_positive_weekly2, percent_tested_positive_cumulative: $percent_tested_positive_cumulative2, deaths_weekly: $deaths_weekly2, deaths_cumulative: $deaths_cumulative2, death_rate_weekly: $death_rate_weekly2, death_rate_cumulative: $death_rate_cumulative2, population: $population2, rowid: $rowid2, zip_code_location: $zip_code_location2),
                $rowid1 == $rowid2, $population1 != $population2 -> #fail. 

        
            e17: clean(zip_code: $zip_code1, week_number: $week_number1, week_start: $week_start1, week_end: $week_end1, cases_weekly: $cases_weekly1, cases_cumulative: $cases_cumulative1, case_rate_weekly: $case_rate_weekly1, case_rate_cumulative: $case_rate_cumulative1, tests_weekly: $tests_weekly1, tests_cumulative: $tests_cumulative1, test_rate_weekly: $test_rate_weekly1, test_rate_cumulative: $test_rate_cumulative1, percent_tested_positive_weekly: $percent_tested_positive_weekly1, percent_tested_positive_cumulative: $percent_tested_positive_cumulative1, deaths_weekly: $deaths_weekly1, deaths_cumulative: $deaths_cumulative1, death_rate_weekly: $death_rate_weekly1, death_rate_cumulative: $death_rate_cumulative1, population: $population1, rowid: $rowid1, zip_code_location: $zip_code_location1),
            clean(zip_code: $zip_code2, week_number: $week_number2, week_start: $week_start2, week_end: $week_end2, cases_weekly: $cases_weekly2, cases_cumulative: $cases_cumulative2, case_rate_weekly: $case_rate_weekly2, case_rate_cumulative: $case_rate_cumulative2, tests_weekly: $tests_weekly2, tests_cumulative: $tests_cumulative2, test_rate_weekly: $test_rate_weekly2, test_rate_cumulative: $test_rate_cumulative2, percent_tested_positive_weekly: $percent_tested_positive_weekly2, percent_tested_positive_cumulative: $percent_tested_positive_cumulative2, deaths_weekly: $deaths_weekly2, deaths_cumulative: $deaths_cumulative2, death_rate_weekly: $death_rate_weekly2, death_rate_cumulative: $death_rate_cumulative2, population: $population2, rowid: $rowid2, zip_code_location: $zip_code_location2),
                $rowid1 == $rowid2, $week_number1 != $week_number2 -> #fail. 

        
            e18: clean(zip_code: $zip_code1, week_number: $week_number1, week_start: $week_start1, week_end: $week_end1, cases_weekly: $cases_weekly1, cases_cumulative: $cases_cumulative1, case_rate_weekly: $case_rate_weekly1, case_rate_cumulative: $case_rate_cumulative1, tests_weekly: $tests_weekly1, tests_cumulative: $tests_cumulative1, test_rate_weekly: $test_rate_weekly1, test_rate_cumulative: $test_rate_cumulative1, percent_tested_positive_weekly: $percent_tested_positive_weekly1, percent_tested_positive_cumulative: $percent_tested_positive_cumulative1, deaths_weekly: $deaths_weekly1, deaths_cumulative: $deaths_cumulative1, death_rate_weekly: $death_rate_weekly1, death_rate_cumulative: $death_rate_cumulative1, population: $population1, rowid: $rowid1, zip_code_location: $zip_code_location1),
            clean(zip_code: $zip_code2, week_number: $week_number2, week_start: $week_start2, week_end: $week_end2, cases_weekly: $cases_weekly2, cases_cumulative: $cases_cumulative2, case_rate_weekly: $case_rate_weekly2, case_rate_cumulative: $case_rate_cumulative2, tests_weekly: $tests_weekly2, tests_cumulative: $tests_cumulative2, test_rate_weekly: $test_rate_weekly2, test_rate_cumulative: $test_rate_cumulative2, percent_tested_positive_weekly: $percent_tested_positive_weekly2, percent_tested_positive_cumulative: $percent_tested_positive_cumulative2, deaths_weekly: $deaths_weekly2, deaths_cumulative: $deaths_cumulative2, death_rate_weekly: $death_rate_weekly2, death_rate_cumulative: $death_rate_cumulative2, population: $population2, rowid: $rowid2, zip_code_location: $zip_code_location2),
                $rowid1 == $rowid2, $deaths_weekly1 != $deaths_weekly2 -> #fail. 

        
            e19: clean(zip_code: $zip_code1, week_number: $week_number1, week_start: $week_start1, week_end: $week_end1, cases_weekly: $cases_weekly1, cases_cumulative: $cases_cumulative1, case_rate_weekly: $case_rate_weekly1, case_rate_cumulative: $case_rate_cumulative1, tests_weekly: $tests_weekly1, tests_cumulative: $tests_cumulative1, test_rate_weekly: $test_rate_weekly1, test_rate_cumulative: $test_rate_cumulative1, percent_tested_positive_weekly: $percent_tested_positive_weekly1, percent_tested_positive_cumulative: $percent_tested_positive_cumulative1, deaths_weekly: $deaths_weekly1, deaths_cumulative: $deaths_cumulative1, death_rate_weekly: $death_rate_weekly1, death_rate_cumulative: $death_rate_cumulative1, population: $population1, rowid: $rowid1, zip_code_location: $zip_code_location1),
            clean(zip_code: $zip_code2, week_number: $week_number2, week_start: $week_start2, week_end: $week_end2, cases_weekly: $cases_weekly2, cases_cumulative: $cases_cumulative2, case_rate_weekly: $case_rate_weekly2, case_rate_cumulative: $case_rate_cumulative2, tests_weekly: $tests_weekly2, tests_cumulative: $tests_cumulative2, test_rate_weekly: $test_rate_weekly2, test_rate_cumulative: $test_rate_cumulative2, percent_tested_positive_weekly: $percent_tested_positive_weekly2, percent_tested_positive_cumulative: $percent_tested_positive_cumulative2, deaths_weekly: $deaths_weekly2, deaths_cumulative: $deaths_cumulative2, death_rate_weekly: $death_rate_weekly2, death_rate_cumulative: $death_rate_cumulative2, population: $population2, rowid: $rowid2, zip_code_location: $zip_code_location2),
                $rowid1 == $rowid2, $percent_tested_positive_weekly1 != $percent_tested_positive_weekly2 -> #fail. 

        
            e20: clean(zip_code: $zip_code1, week_number: $week_number1, week_start: $week_start1, week_end: $week_end1, cases_weekly: $cases_weekly1, cases_cumulative: $cases_cumulative1, case_rate_weekly: $case_rate_weekly1, case_rate_cumulative: $case_rate_cumulative1, tests_weekly: $tests_weekly1, tests_cumulative: $tests_cumulative1, test_rate_weekly: $test_rate_weekly1, test_rate_cumulative: $test_rate_cumulative1, percent_tested_positive_weekly: $percent_tested_positive_weekly1, percent_tested_positive_cumulative: $percent_tested_positive_cumulative1, deaths_weekly: $deaths_weekly1, deaths_cumulative: $deaths_cumulative1, death_rate_weekly: $death_rate_weekly1, death_rate_cumulative: $death_rate_cumulative1, population: $population1, rowid: $rowid1, zip_code_location: $zip_code_location1),
            clean(zip_code: $zip_code2, week_number: $week_number2, week_start: $week_start2, week_end: $week_end2, cases_weekly: $cases_weekly2, cases_cumulative: $cases_cumulative2, case_rate_weekly: $case_rate_weekly2, case_rate_cumulative: $case_rate_cumulative2, tests_weekly: $tests_weekly2, tests_cumulative: $tests_cumulative2, test_rate_weekly: $test_rate_weekly2, test_rate_cumulative: $test_rate_cumulative2, percent_tested_positive_weekly: $percent_tested_positive_weekly2, percent_tested_positive_cumulative: $percent_tested_positive_cumulative2, deaths_weekly: $deaths_weekly2, deaths_cumulative: $deaths_cumulative2, death_rate_weekly: $death_rate_weekly2, death_rate_cumulative: $death_rate_cumulative2, population: $population2, rowid: $rowid2, zip_code_location: $zip_code_location2),
                $rowid1 == $rowid2, $percent_tested_positive_cumulative1 != $percent_tested_positive_cumulative2 -> #fail. 

        
            e21: clean(zip_code: $zip_code1, week_number: $week_number1, week_start: $week_start1, week_end: $week_end1, cases_weekly: $cases_weekly1, cases_cumulative: $cases_cumulative1, case_rate_weekly: $case_rate_weekly1, case_rate_cumulative: $case_rate_cumulative1, tests_weekly: $tests_weekly1, tests_cumulative: $tests_cumulative1, test_rate_weekly: $test_rate_weekly1, test_rate_cumulative: $test_rate_cumulative1, percent_tested_positive_weekly: $percent_tested_positive_weekly1, percent_tested_positive_cumulative: $percent_tested_positive_cumulative1, deaths_weekly: $deaths_weekly1, deaths_cumulative: $deaths_cumulative1, death_rate_weekly: $death_rate_weekly1, death_rate_cumulative: $death_rate_cumulative1, population: $population1, rowid: $rowid1, zip_code_location: $zip_code_location1),
            clean(zip_code: $zip_code2, week_number: $week_number2, week_start: $week_start2, week_end: $week_end2, cases_weekly: $cases_weekly2, cases_cumulative: $cases_cumulative2, case_rate_weekly: $case_rate_weekly2, case_rate_cumulative: $case_rate_cumulative2, tests_weekly: $tests_weekly2, tests_cumulative: $tests_cumulative2, test_rate_weekly: $test_rate_weekly2, test_rate_cumulative: $test_rate_cumulative2, percent_tested_positive_weekly: $percent_tested_positive_weekly2, percent_tested_positive_cumulative: $percent_tested_positive_cumulative2, deaths_weekly: $deaths_weekly2, deaths_cumulative: $deaths_cumulative2, death_rate_weekly: $death_rate_weekly2, death_rate_cumulative: $death_rate_cumulative2, population: $population2, rowid: $rowid2, zip_code_location: $zip_code_location2),
                $week_start1 == $week_start2, $week_end1 != $week_end2 -> #fail. 

        
            e22: clean(zip_code: $zip_code1, week_number: $week_number1, week_start: $week_start1, week_end: $week_end1, cases_weekly: $cases_weekly1, cases_cumulative: $cases_cumulative1, case_rate_weekly: $case_rate_weekly1, case_rate_cumulative: $case_rate_cumulative1, tests_weekly: $tests_weekly1, tests_cumulative: $tests_cumulative1, test_rate_weekly: $test_rate_weekly1, test_rate_cumulative: $test_rate_cumulative1, percent_tested_positive_weekly: $percent_tested_positive_weekly1, percent_tested_positive_cumulative: $percent_tested_positive_cumulative1, deaths_weekly: $deaths_weekly1, deaths_cumulative: $deaths_cumulative1, death_rate_weekly: $death_rate_weekly1, death_rate_cumulative: $death_rate_cumulative1, population: $population1, rowid: $rowid1, zip_code_location: $zip_code_location1),
            clean(zip_code: $zip_code2, week_number: $week_number2, week_start: $week_start2, week_end: $week_end2, cases_weekly: $cases_weekly2, cases_cumulative: $cases_cumulative2, case_rate_weekly: $case_rate_weekly2, case_rate_cumulative: $case_rate_cumulative2, tests_weekly: $tests_weekly2, tests_cumulative: $tests_cumulative2, test_rate_weekly: $test_rate_weekly2, test_rate_cumulative: $test_rate_cumulative2, percent_tested_positive_weekly: $percent_tested_positive_weekly2, percent_tested_positive_cumulative: $percent_tested_positive_cumulative2, deaths_weekly: $deaths_weekly2, deaths_cumulative: $deaths_cumulative2, death_rate_weekly: $death_rate_weekly2, death_rate_cumulative: $death_rate_cumulative2, population: $population2, rowid: $rowid2, zip_code_location: $zip_code_location2),
                $week_start1 == $week_start2, $week_number1 != $week_number2 -> #fail. 

        
            e23: clean(zip_code: $zip_code1, week_number: $week_number1, week_start: $week_start1, week_end: $week_end1, cases_weekly: $cases_weekly1, cases_cumulative: $cases_cumulative1, case_rate_weekly: $case_rate_weekly1, case_rate_cumulative: $case_rate_cumulative1, tests_weekly: $tests_weekly1, tests_cumulative: $tests_cumulative1, test_rate_weekly: $test_rate_weekly1, test_rate_cumulative: $test_rate_cumulative1, percent_tested_positive_weekly: $percent_tested_positive_weekly1, percent_tested_positive_cumulative: $percent_tested_positive_cumulative1, deaths_weekly: $deaths_weekly1, deaths_cumulative: $deaths_cumulative1, death_rate_weekly: $death_rate_weekly1, death_rate_cumulative: $death_rate_cumulative1, population: $population1, rowid: $rowid1, zip_code_location: $zip_code_location1),
            clean(zip_code: $zip_code2, week_number: $week_number2, week_start: $week_start2, week_end: $week_end2, cases_weekly: $cases_weekly2, cases_cumulative: $cases_cumulative2, case_rate_weekly: $case_rate_weekly2, case_rate_cumulative: $case_rate_cumulative2, tests_weekly: $tests_weekly2, tests_cumulative: $tests_cumulative2, test_rate_weekly: $test_rate_weekly2, test_rate_cumulative: $test_rate_cumulative2, percent_tested_positive_weekly: $percent_tested_positive_weekly2, percent_tested_positive_cumulative: $percent_tested_positive_cumulative2, deaths_weekly: $deaths_weekly2, deaths_cumulative: $deaths_cumulative2, death_rate_weekly: $death_rate_weekly2, death_rate_cumulative: $death_rate_cumulative2, population: $population2, rowid: $rowid2, zip_code_location: $zip_code_location2),
                $week_end1 == $week_end2, $week_start1 != $week_start2 -> #fail. 

        
            e24: clean(zip_code: $zip_code1, week_number: $week_number1, week_start: $week_start1, week_end: $week_end1, cases_weekly: $cases_weekly1, cases_cumulative: $cases_cumulative1, case_rate_weekly: $case_rate_weekly1, case_rate_cumulative: $case_rate_cumulative1, tests_weekly: $tests_weekly1, tests_cumulative: $tests_cumulative1, test_rate_weekly: $test_rate_weekly1, test_rate_cumulative: $test_rate_cumulative1, percent_tested_positive_weekly: $percent_tested_positive_weekly1, percent_tested_positive_cumulative: $percent_tested_positive_cumulative1, deaths_weekly: $deaths_weekly1, deaths_cumulative: $deaths_cumulative1, death_rate_weekly: $death_rate_weekly1, death_rate_cumulative: $death_rate_cumulative1, population: $population1, rowid: $rowid1, zip_code_location: $zip_code_location1),
            clean(zip_code: $zip_code2, week_number: $week_number2, week_start: $week_start2, week_end: $week_end2, cases_weekly: $cases_weekly2, cases_cumulative: $cases_cumulative2, case_rate_weekly: $case_rate_weekly2, case_rate_cumulative: $case_rate_cumulative2, tests_weekly: $tests_weekly2, tests_cumulative: $tests_cumulative2, test_rate_weekly: $test_rate_weekly2, test_rate_cumulative: $test_rate_cumulative2, percent_tested_positive_weekly: $percent_tested_positive_weekly2, percent_tested_positive_cumulative: $percent_tested_positive_cumulative2, deaths_weekly: $deaths_weekly2, deaths_cumulative: $deaths_cumulative2, death_rate_weekly: $death_rate_weekly2, death_rate_cumulative: $death_rate_cumulative2, population: $population2, rowid: $rowid2, zip_code_location: $zip_code_location2),
                $week_end1 == $week_end2, $week_number1 != $week_number2 -> #fail. 

        
            e25: clean(zip_code: $zip_code1, week_number: $week_number1, week_start: $week_start1, week_end: $week_end1, cases_weekly: $cases_weekly1, cases_cumulative: $cases_cumulative1, case_rate_weekly: $case_rate_weekly1, case_rate_cumulative: $case_rate_cumulative1, tests_weekly: $tests_weekly1, tests_cumulative: $tests_cumulative1, test_rate_weekly: $test_rate_weekly1, test_rate_cumulative: $test_rate_cumulative1, percent_tested_positive_weekly: $percent_tested_positive_weekly1, percent_tested_positive_cumulative: $percent_tested_positive_cumulative1, deaths_weekly: $deaths_weekly1, deaths_cumulative: $deaths_cumulative1, death_rate_weekly: $death_rate_weekly1, death_rate_cumulative: $death_rate_cumulative1, population: $population1, rowid: $rowid1, zip_code_location: $zip_code_location1),
            clean(zip_code: $zip_code2, week_number: $week_number2, week_start: $week_start2, week_end: $week_end2, cases_weekly: $cases_weekly2, cases_cumulative: $cases_cumulative2, case_rate_weekly: $case_rate_weekly2, case_rate_cumulative: $case_rate_cumulative2, tests_weekly: $tests_weekly2, tests_cumulative: $tests_cumulative2, test_rate_weekly: $test_rate_weekly2, test_rate_cumulative: $test_rate_cumulative2, percent_tested_positive_weekly: $percent_tested_positive_weekly2, percent_tested_positive_cumulative: $percent_tested_positive_cumulative2, deaths_weekly: $deaths_weekly2, deaths_cumulative: $deaths_cumulative2, death_rate_weekly: $death_rate_weekly2, death_rate_cumulative: $death_rate_cumulative2, population: $population2, rowid: $rowid2, zip_code_location: $zip_code_location2),
                $zip_code1 == $zip_code2, $zip_code_location1 != $zip_code_location2 -> #fail. 

        
            e26: clean(zip_code: $zip_code1, week_number: $week_number1, week_start: $week_start1, week_end: $week_end1, cases_weekly: $cases_weekly1, cases_cumulative: $cases_cumulative1, case_rate_weekly: $case_rate_weekly1, case_rate_cumulative: $case_rate_cumulative1, tests_weekly: $tests_weekly1, tests_cumulative: $tests_cumulative1, test_rate_weekly: $test_rate_weekly1, test_rate_cumulative: $test_rate_cumulative1, percent_tested_positive_weekly: $percent_tested_positive_weekly1, percent_tested_positive_cumulative: $percent_tested_positive_cumulative1, deaths_weekly: $deaths_weekly1, deaths_cumulative: $deaths_cumulative1, death_rate_weekly: $death_rate_weekly1, death_rate_cumulative: $death_rate_cumulative1, population: $population1, rowid: $rowid1, zip_code_location: $zip_code_location1),
            clean(zip_code: $zip_code2, week_number: $week_number2, week_start: $week_start2, week_end: $week_end2, cases_weekly: $cases_weekly2, cases_cumulative: $cases_cumulative2, case_rate_weekly: $case_rate_weekly2, case_rate_cumulative: $case_rate_cumulative2, tests_weekly: $tests_weekly2, tests_cumulative: $tests_cumulative2, test_rate_weekly: $test_rate_weekly2, test_rate_cumulative: $test_rate_cumulative2, percent_tested_positive_weekly: $percent_tested_positive_weekly2, percent_tested_positive_cumulative: $percent_tested_positive_cumulative2, deaths_weekly: $deaths_weekly2, deaths_cumulative: $deaths_cumulative2, death_rate_weekly: $death_rate_weekly2, death_rate_cumulative: $death_rate_cumulative2, population: $population2, rowid: $rowid2, zip_code_location: $zip_code_location2),
                $zip_code1 == $zip_code2, $population1 != $population2 -> #fail. 

        
            e27: clean(zip_code: $zip_code1, week_number: $week_number1, week_start: $week_start1, week_end: $week_end1, cases_weekly: $cases_weekly1, cases_cumulative: $cases_cumulative1, case_rate_weekly: $case_rate_weekly1, case_rate_cumulative: $case_rate_cumulative1, tests_weekly: $tests_weekly1, tests_cumulative: $tests_cumulative1, test_rate_weekly: $test_rate_weekly1, test_rate_cumulative: $test_rate_cumulative1, percent_tested_positive_weekly: $percent_tested_positive_weekly1, percent_tested_positive_cumulative: $percent_tested_positive_cumulative1, deaths_weekly: $deaths_weekly1, deaths_cumulative: $deaths_cumulative1, death_rate_weekly: $death_rate_weekly1, death_rate_cumulative: $death_rate_cumulative1, population: $population1, rowid: $rowid1, zip_code_location: $zip_code_location1),
            clean(zip_code: $zip_code2, week_number: $week_number2, week_start: $week_start2, week_end: $week_end2, cases_weekly: $cases_weekly2, cases_cumulative: $cases_cumulative2, case_rate_weekly: $case_rate_weekly2, case_rate_cumulative: $case_rate_cumulative2, tests_weekly: $tests_weekly2, tests_cumulative: $tests_cumulative2, test_rate_weekly: $test_rate_weekly2, test_rate_cumulative: $test_rate_cumulative2, percent_tested_positive_weekly: $percent_tested_positive_weekly2, percent_tested_positive_cumulative: $percent_tested_positive_cumulative2, deaths_weekly: $deaths_weekly2, deaths_cumulative: $deaths_cumulative2, death_rate_weekly: $death_rate_weekly2, death_rate_cumulative: $death_rate_cumulative2, population: $population2, rowid: $rowid2, zip_code_location: $zip_code_location2),
                $zip_code_location1 == $zip_code_location2, $zip_code1 != $zip_code2 -> #fail. 

        
            e28: clean(zip_code: $zip_code1, week_number: $week_number1, week_start: $week_start1, week_end: $week_end1, cases_weekly: $cases_weekly1, cases_cumulative: $cases_cumulative1, case_rate_weekly: $case_rate_weekly1, case_rate_cumulative: $case_rate_cumulative1, tests_weekly: $tests_weekly1, tests_cumulative: $tests_cumulative1, test_rate_weekly: $test_rate_weekly1, test_rate_cumulative: $test_rate_cumulative1, percent_tested_positive_weekly: $percent_tested_positive_weekly1, percent_tested_positive_cumulative: $percent_tested_positive_cumulative1, deaths_weekly: $deaths_weekly1, deaths_cumulative: $deaths_cumulative1, death_rate_weekly: $death_rate_weekly1, death_rate_cumulative: $death_rate_cumulative1, population: $population1, rowid: $rowid1, zip_code_location: $zip_code_location1),
            clean(zip_code: $zip_code2, week_number: $week_number2, week_start: $week_start2, week_end: $week_end2, cases_weekly: $cases_weekly2, cases_cumulative: $cases_cumulative2, case_rate_weekly: $case_rate_weekly2, case_rate_cumulative: $case_rate_cumulative2, tests_weekly: $tests_weekly2, tests_cumulative: $tests_cumulative2, test_rate_weekly: $test_rate_weekly2, test_rate_cumulative: $test_rate_cumulative2, percent_tested_positive_weekly: $percent_tested_positive_weekly2, percent_tested_positive_cumulative: $percent_tested_positive_cumulative2, deaths_weekly: $deaths_weekly2, deaths_cumulative: $deaths_cumulative2, death_rate_weekly: $death_rate_weekly2, death_rate_cumulative: $death_rate_cumulative2, population: $population2, rowid: $rowid2, zip_code_location: $zip_code_location2),
                $zip_code_location1 == $zip_code_location2, $population1 != $population2 -> #fail. 

        ]]></dependencies>

    <!-- ****************************************************
                      CONFIGURATION
    **************************************************** -->
    <configuration>
        <!-- To print extra information in the ouput (default = false) -->
        <printLog>true</printLog>

        <!-- To load DB every time on start (default = false) -->
        <recreateDBOnStart>true</recreateDBOnStart>

        <!-- To apply the changes (default = false) -->
        <applyCellChanges>true</applyCellChanges>

        <!-- To  apply cell changes on a copy of the original target, with a custom suffix (default = true) -->
        <cloneTargetSchema>true</cloneTargetSchema>
        <cloneSuffix>_dirty</cloneSuffix>

        <!-- To export the dirty db -->
        <exportDirtyDB>true</exportDirtyDB>
        <exportDirtyDBPath>./</exportDirtyDBPath>
        <exportDirtyDBType>CSV</exportDirtyDBType>

        <!-- To export the changes -->
        <exportCellChanges>true</exportCellChanges>
        <exportCellChangesPath>clean_changes.csv</exportCellChangesPath>

        <!-- To compute an estimate of the reparability (default = false) -->
        <estimateRepairability>true</estimateRepairability>

        <!-- To generate all possible changes (default = false - slow, only for toy examples)-->
        <generateAllChanges>false</generateAllChanges>

        <!-- To avoid interactions among changes. (default = true) -->
        <avoidInteractions>true</avoidInteractions>

        <!-- To check, at the end of the process, if changes are detectable. (default = false) -->
        <checkChanges>true</checkChanges>

        <!-- To compute an estimate of the repairability. Requires checkChanges = true. (default = false) -->
        <estimateRepairability>true</estimateRepairability>

        <!-- To use an optimized strategy for updates. (default = true) -->
        <useDeltaDBForChanges>true</useDeltaDBForChanges>

        <!-- Error percentages for dependencies and comparisons 
        All percentages are wrt table sizes (# tuples) -->
        <errorPercentages>
            <defaultPercentage>0.0</defaultPercentage>
            <vioGenQueries>
            <vioGenQuery id="e1"><comparison>(rowid1 == rowid2)</comparison><percentage>0.15258215962441316</percentage></vioGenQuery><vioGenQuery id="e1"><comparison>(test_rate_cumulative1 != test_rate_cumulative2)</comparison><percentage>0.15258215962441316</percentage></vioGenQuery><vioGenQuery id="e2"><comparison>(rowid1 == rowid2)</comparison><percentage>0.15258215962441316</percentage></vioGenQuery><vioGenQuery id="e2"><comparison>(case_rate_cumulative1 != case_rate_cumulative2)</comparison><percentage>0.15258215962441316</percentage></vioGenQuery><vioGenQuery id="e3"><comparison>(rowid1 == rowid2)</comparison><percentage>0.15258215962441316</percentage></vioGenQuery><vioGenQuery id="e3"><comparison>(tests_cumulative1 != tests_cumulative2)</comparison><percentage>0.15258215962441316</percentage></vioGenQuery><vioGenQuery id="e4"><comparison>(rowid1 == rowid2)</comparison><percentage>0.15258215962441316</percentage></vioGenQuery><vioGenQuery id="e4"><comparison>(cases_cumulative1 != cases_cumulative2)</comparison><percentage>0.15258215962441316</percentage></vioGenQuery><vioGenQuery id="e5"><comparison>(rowid1 == rowid2)</comparison><percentage>0.15258215962441316</percentage></vioGenQuery><vioGenQuery id="e5"><comparison>(test_rate_weekly1 != test_rate_weekly2)</comparison><percentage>0.15258215962441316</percentage></vioGenQuery><vioGenQuery id="e6"><comparison>(rowid1 == rowid2)</comparison><percentage>0.14084507042253522</percentage></vioGenQuery><vioGenQuery id="e6"><comparison>(tests_weekly1 != tests_weekly2)</comparison><percentage>0.14084507042253522</percentage></vioGenQuery><vioGenQuery id="e7"><comparison>(rowid1 == rowid2)</comparison><percentage>0.14084507042253522</percentage></vioGenQuery><vioGenQuery id="e7"><comparison>(death_rate_cumulative1 != death_rate_cumulative2)</comparison><percentage>0.14084507042253522</percentage></vioGenQuery><vioGenQuery id="e8"><comparison>(rowid1 == rowid2)</comparison><percentage>0.14084507042253522</percentage></vioGenQuery><vioGenQuery id="e8"><comparison>(case_rate_weekly1 != case_rate_weekly2)</comparison><percentage>0.14084507042253522</percentage></vioGenQuery><vioGenQuery id="e9"><comparison>(rowid1 == rowid2)</comparison><percentage>0.14084507042253522</percentage></vioGenQuery><vioGenQuery id="e9"><comparison>(cases_weekly1 != cases_weekly2)</comparison><percentage>0.14084507042253522</percentage></vioGenQuery><vioGenQuery id="e10"><comparison>(rowid1 == rowid2)</comparison><percentage>0.14084507042253522</percentage></vioGenQuery><vioGenQuery id="e10"><comparison>(deaths_cumulative1 != deaths_cumulative2)</comparison><percentage>0.14084507042253522</percentage></vioGenQuery><vioGenQuery id="e11"><comparison>(rowid1 == rowid2)</comparison><percentage>0.14084507042253522</percentage></vioGenQuery><vioGenQuery id="e11"><comparison>(death_rate_weekly1 != death_rate_weekly2)</comparison><percentage>0.14084507042253522</percentage></vioGenQuery><vioGenQuery id="e12"><comparison>(rowid1 == rowid2)</comparison><percentage>0.14084507042253522</percentage></vioGenQuery><vioGenQuery id="e12"><comparison>(week_start1 != week_start2)</comparison><percentage>0.14084507042253522</percentage></vioGenQuery><vioGenQuery id="e13"><comparison>(rowid1 == rowid2)</comparison><percentage>0.14084507042253522</percentage></vioGenQuery><vioGenQuery id="e13"><comparison>(week_end1 != week_end2)</comparison><percentage>0.14084507042253522</percentage></vioGenQuery><vioGenQuery id="e14"><comparison>(rowid1 == rowid2)</comparison><percentage>0.14084507042253522</percentage></vioGenQuery><vioGenQuery id="e14"><comparison>(zip_code1 != zip_code2)</comparison><percentage>0.14084507042253522</percentage></vioGenQuery><vioGenQuery id="e15"><comparison>(rowid1 == rowid2)</comparison><percentage>0.14084507042253522</percentage></vioGenQuery><vioGenQuery id="e15"><comparison>(zip_code_location1 != zip_code_location2)</comparison><percentage>0.14084507042253522</percentage></vioGenQuery><vioGenQuery id="e16"><comparison>(rowid1 == rowid2)</comparison><percentage>0.14084507042253522</percentage></vioGenQuery><vioGenQuery id="e16"><comparison>(population1 != population2)</comparison><percentage>0.14084507042253522</percentage></vioGenQuery><vioGenQuery id="e17"><comparison>(rowid1 == rowid2)</comparison><percentage>0.14084507042253522</percentage></vioGenQuery><vioGenQuery id="e17"><comparison>(week_number1 != week_number2)</comparison><percentage>0.14084507042253522</percentage></vioGenQuery><vioGenQuery id="e18"><comparison>(rowid1 == rowid2)</comparison><percentage>0.14084507042253522</percentage></vioGenQuery><vioGenQuery id="e18"><comparison>(deaths_weekly1 != deaths_weekly2)</comparison><percentage>0.14084507042253522</percentage></vioGenQuery><vioGenQuery id="e19"><comparison>(rowid1 == rowid2)</comparison><percentage>0.14084507042253522</percentage></vioGenQuery><vioGenQuery id="e19"><comparison>(percent_tested_positive_weekly1 != percent_tested_positive_weekly2)</comparison><percentage>0.14084507042253522</percentage></vioGenQuery><vioGenQuery id="e20"><comparison>(rowid1 == rowid2)</comparison><percentage>0.14084507042253522</percentage></vioGenQuery><vioGenQuery id="e20"><comparison>(percent_tested_positive_cumulative1 != percent_tested_positive_cumulative2)</comparison><percentage>0.14084507042253522</percentage></vioGenQuery><vioGenQuery id="e21"><comparison>(week_start1 == week_start2)</comparison><percentage>0.14084507042253522</percentage></vioGenQuery><vioGenQuery id="e21"><comparison>(week_end1 != week_end2)</comparison><percentage>0.14084507042253522</percentage></vioGenQuery><vioGenQuery id="e22"><comparison>(week_start1 == week_start2)</comparison><percentage>0.14084507042253522</percentage></vioGenQuery><vioGenQuery id="e22"><comparison>(week_number1 != week_number2)</comparison><percentage>0.14084507042253522</percentage></vioGenQuery><vioGenQuery id="e23"><comparison>(week_end1 == week_end2)</comparison><percentage>0.14084507042253522</percentage></vioGenQuery><vioGenQuery id="e23"><comparison>(week_start1 != week_start2)</comparison><percentage>0.14084507042253522</percentage></vioGenQuery><vioGenQuery id="e24"><comparison>(week_end1 == week_end2)</comparison><percentage>0.14084507042253522</percentage></vioGenQuery><vioGenQuery id="e24"><comparison>(week_number1 != week_number2)</comparison><percentage>0.14084507042253522</percentage></vioGenQuery><vioGenQuery id="e25"><comparison>(zip_code1 == zip_code2)</comparison><percentage>0.14084507042253522</percentage></vioGenQuery><vioGenQuery id="e25"><comparison>(zip_code_location1 != zip_code_location2)</comparison><percentage>0.14084507042253522</percentage></vioGenQuery><vioGenQuery id="e26"><comparison>(zip_code1 == zip_code2)</comparison><percentage>0.14084507042253522</percentage></vioGenQuery><vioGenQuery id="e26"><comparison>(population1 != population2)</comparison><percentage>0.14084507042253522</percentage></vioGenQuery><vioGenQuery id="e27"><comparison>(zip_code_location1 == zip_code_location2)</comparison><percentage>0.14084507042253522</percentage></vioGenQuery><vioGenQuery id="e27"><comparison>(zip_code1 != zip_code2)</comparison><percentage>0.14084507042253522</percentage></vioGenQuery><vioGenQuery id="e28"><comparison>(zip_code_location1 == zip_code_location2)</comparison><percentage>0.14084507042253522</percentage></vioGenQuery><vioGenQuery id="e28"><comparison>(population1 != population2)</comparison><percentage>0.14084507042253522</percentage></vioGenQuery></vioGenQueries>
        </errorPercentages>

        <!-- To control the way in which changing the value -->
        <dirtyStrategies>
            <defaultStrategy>
                <strategy> TypoRandom </strategy>
            </defaultStrategy> 
            <!-- possible strategies
                <strategy chars="*" charsToAdd="3">TypoAddString</strategy>
                <strategy chars="*" charsToAdd="3">TypoAppendString</strategy>
                <strategy charsToRemove="3">TypoRemoveString</strategy>
                <strategy charsToSwitch="3">TypoSwitchValue</strategy>
                <strategy>TypoActiveDomain</strategy>
                <strategy>TypoRandom</strategy>
            -->
        </dirtyStrategies>

        <randomErrors>
            <tables>
                <table name="clean"> 
                    <percentage>4</percentage> <!-- Percentage is wrt attributes to dirty in the table -->
                    <attributes>
                    <atrribute>zip_code</atrribute><atrribute>week_start</atrribute><atrribute>week_end</atrribute><atrribute>rowid</atrribute><atrribute>zip_code_location</atrribute></attributes>
                </table>
            </tables>
        </randomErrors>
    
        <outlierErrors>
            <tables>
                <table name="clean">
                    <attributes>
                    <atrribute percentage="0" detectable="true">week_number</atrribute><atrribute percentage="0" detectable="true">cases_weekly</atrribute><atrribute percentage="0" detectable="true">cases_cumulative</atrribute><atrribute percentage="0" detectable="true">case_rate_weekly</atrribute><atrribute percentage="0" detectable="true">case_rate_cumulative</atrribute><atrribute percentage="0" detectable="true">tests_weekly</atrribute><atrribute percentage="0" detectable="true">tests_cumulative</atrribute><atrribute percentage="0" detectable="true">test_rate_weekly</atrribute><atrribute percentage="0" detectable="true">test_rate_cumulative</atrribute><atrribute percentage="0" detectable="true">percent_tested_positive_weekly</atrribute><atrribute percentage="0" detectable="true">percent_tested_positive_cumulative</atrribute><atrribute percentage="0" detectable="true">deaths_weekly</atrribute><atrribute percentage="0" detectable="true">deaths_cumulative</atrribute><atrribute percentage="0" detectable="true">death_rate_weekly</atrribute><atrribute percentage="0" detectable="true">death_rate_cumulative</atrribute><atrribute percentage="0" detectable="true">population</atrribute></attributes>
                </table>
            </tables>
        </outlierErrors>
        
        <!-- The following parameters are used to control the sampling process.
            All the fields are optional, but they may be crucial to obtain a good random sample.
            In order to choose the cells to modify, BART will scan the result of a viogen query
            using the following sampling algorithm:
            1) First, a number of tuples are skipped. This is a random number choosed btw 
                0 and (offsetFactor * tableSize)
            2) Then BART will scan the result and will pickup tuples 
            with a probability p = probabilityFactor.
            
            BART uses three kinds of queries
            - Symmetric queries: for symmetric viogen queries (see paper)
            - Inequality queries: for viogen queries without equalities (i.e. inequalities only)
            - Standard queries: for all other viogen queries
        -->
        <vioGenQueriesConfiguration>
            <!-- STANDARD QUERIES -->
            <probabilityFactorForStandardQueries>0.25</probabilityFactorForStandardQueries>
            <offsetFactorForStandardQueries>0.05</offsetFactorForStandardQueries>
            <!-- SYMMETRIC QUERIES -->
            <probabilityFactorForSymmetricQueries>0.25</probabilityFactorForSymmetricQueries>
            <offsetFactorForSymmetricQueries>0.05</offsetFactorForSymmetricQueries>
            <!-- INEQUALITY QUERIES -->
            <probabilityFactorForInequalityQueries>0.05</probabilityFactorForInequalityQueries>
            <offsetFactorForInequalityQueries>0.05</offsetFactorForInequalityQueries>
            <windowSizeFactorForInequalityQueries>1.5</windowSizeFactorForInequalityQueries>
        </vioGenQueriesConfiguration>

    </configuration>
</task>